{"version":3,"sources":["node_modules/browser-pack/_prelude.js","core.js","jsforce-core.min.js","lib/VERSION.js","lib/_required.js","lib/browser/canvas.js","lib/browser/client.js","lib/browser/jsonp.js","lib/browser/request.js","lib/cache.js","lib/connection.js","lib/core.js","lib/csv.js","lib/date.js","lib/http-api.js","lib/logger.js","lib/oauth2.js","lib/process.js","lib/promise.js","lib/query.js","lib/quick-action.js","lib/record-stream.js","lib/record.js","lib/require.js","lib/soap.js","lib/sobject.js","lib/soql-builder.js","lib/transport.js","node_modules/asap/browser-raw.js","node_modules/base64-js/index.js","node_modules/buffer/index.js","node_modules/core-util-is/lib/util.js","node_modules/csv-parse/lib/es5/ResizeableBuffer.js","node_modules/csv-parse/lib/es5/index.js","node_modules/csv-parse/lib/es5/sync.js","node_modules/csv-stringify/lib/index.js","node_modules/csv-stringify/lib/sync.js","node_modules/events/events.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/is-buffer/index.js","node_modules/isarray/index.js","node_modules/lodash.get/index.js","node_modules/lodash/core.js","node_modules/multistream/index.js","node_modules/process-nextick-args/index.js","node_modules/process/browser.js","node_modules/promise/lib/core.js","node_modules/promise/lib/es6-extensions.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/readable-stream/duplex-browser.js","node_modules/readable-stream/lib/_stream_duplex.js","node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/readable-stream/lib/_stream_readable.js","node_modules/readable-stream/lib/_stream_transform.js","node_modules/readable-stream/lib/_stream_writable.js","node_modules/readable-stream/lib/internal/streams/BufferList.js","node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/readable-stream/passthrough.js","node_modules/readable-stream/readable-browser.js","node_modules/readable-stream/transform.js","node_modules/readable-stream/writable-browser.js","node_modules/safe-buffer/index.js","node_modules/sax/lib/sax.js","node_modules/stream-browserify/index.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/util-deprecate/browser.js","node_modules/util/support/isBufferBrowser.js","node_modules/util/util.js","node_modules/xml2js/lib/bom.js","node_modules/xml2js/lib/builder.js","node_modules/xml2js/lib/defaults.js","node_modules/xml2js/lib/parser.js","node_modules/xml2js/lib/processors.js","node_modules/xml2js/lib/xml2js.js","node_modules/xmlbuilder/lib/Utility.js","node_modules/xmlbuilder/lib/XMLAttribute.js","node_modules/xmlbuilder/lib/XMLCData.js","node_modules/xmlbuilder/lib/XMLComment.js","node_modules/xmlbuilder/lib/XMLDTDAttList.js","node_modules/xmlbuilder/lib/XMLDTDElement.js","node_modules/xmlbuilder/lib/XMLDTDEntity.js","node_modules/xmlbuilder/lib/XMLDTDNotation.js","node_modules/xmlbuilder/lib/XMLDeclaration.js","node_modules/xmlbuilder/lib/XMLDocType.js","node_modules/xmlbuilder/lib/XMLDocument.js","node_modules/xmlbuilder/lib/XMLDocumentCB.js","node_modules/xmlbuilder/lib/XMLElement.js","node_modules/xmlbuilder/lib/XMLNode.js","node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","node_modules/xmlbuilder/lib/XMLRaw.js","node_modules/xmlbuilder/lib/XMLStreamWriter.js","node_modules/xmlbuilder/lib/XMLStringWriter.js","node_modules/xmlbuilder/lib/XMLStringifier.js","node_modules/xmlbuilder/lib/XMLText.js","node_modules/xmlbuilder/lib/XMLWriterBase.js","node_modules/xmlbuilder/lib/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","jsforce","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","browser","../core","./client","2","3","inherits","util","events","lodash/core","readable-stream","multistream","./VERSION","./cache","./connection","./core","./csv","./date","./http-api","./logger","./oauth2","./process","./promise","./query","./quick-action","./record-stream","./record","./soap","./sobject","./soql-builder","./transport","4","parseHeaders","hs","headers","split","forEach","line","pair","name","toLowerCase","value","Duplex","_","supported","Sfdc","canvas","createRequest","signedRequest","params","callback","send","body","settings","client","method","data","contentType","success","responseHeaders","payload","isString","JSON","stringify","response","statusCode","status","str","end","failure","err","ajax","url","_read","size","push","bufs","sent","_write","chunk","encoding","toString","on","join","test","5","popupWin","w","h","left","screen","width","top","height","open","handleCallbackResponse","res","checkCallbackResponse","state","localStorage","getItem","removeItem","states","prefix","promptType","cli","Client","_storeTokens","location","hash","_storeError","close","qs","parse","substring","access_token","search","error","Connection","OAuth2","clientIdx","_prefix","connection","EventEmitter","prototype","init","config","tokens","_getTokens","initialize","setTimeout","emit","login","options","isFunction","extend","_prompt","oauth2","rand","Math","random","setItem","authzUrl","getAuthorizationUrl","response_type","scope","pw","href","_removeTokens","pid","setInterval","closed","clearInterval","_getError","error_description","isLoggedIn","accessToken","logout","regexp","RegExp","document","cookie","match","issuedAt","Number","Date","now","userInfo","idUrl","ids","id","pop","organizationId","instanceUrl","instance_url","issued_at","../connection","../oauth2","querystring","6","_index","jsonpParam","timeout","toUpperCase","cbFuncName","callbacks","indexOf","script","createElement","type","src","documentElement","appendChild","cleanup","content-type","clearTimeout","removeChild","7","getResponseHeaderNames","xhr","headerLines","getAllResponseHeaders","map","headerLine","XMLHttpRequest","header","setRequestHeader","onreadystatechange","readyState","headerNames","headerName","getResponseHeader","8","createCacheKey","namespace","args","Array","slice","apply","CacheEntry","fetching","get","once","isUndefined","_value","set","clear","Cache","_entries","key","entry","k","makeResponseCacheable","fn","cache","arguments","result","ret","then","undefined","makeCacheable","$fn","9","Buffer","oauthRefreshFn","conn","refreshToken","parseIdUrl","parseSignedRequest","sr","msg","json","from","formatDate","date","pad","number","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","idUrls","userId","orgId","createUsernamePasswordRefreshFn","username","password","esc","String","replace","Promise","Logger","Query","SObject","QuickAction","HttpApi","Transport","Process","defaults","loginUrl","version","MAX_DML_COUNT","_logger","logLevel","clientId","clientSecret","redirectUri","proxyUrl","httpProxy","maxRequest","_transport","ProxyTransport","HttpProxyTransport","callOptions","process","refreshFn","_refreshDelegate","SessionRefreshDelegate","cacheOptions","describe$","describe","describeSObject$","describeSObject","describeGlobal$","describeGlobal","serverUrl","sessionId","oauthToken","CanvasTransport","limitInfo","sobjects","removeAllListeners","bind","types","so","sobject","tooling","_sessionType","_baseUrl","_normalizeUrl","request","httpApi","apiUsage","used","parseInt","limit","thenCall","requestGet","requestPost","requestPut","requestPatch","requestDelete","query","soql","run","queryAll","scanAll","queryMore","locator","_ensureVersion","majorVersion","versions","_supports","feature","retrieve","isArray","_retrieveMany","_retrieveParallel","_retrieveSingle","reject","fields","all","allOrNone","errorCode","resolve","field","Content-Type","_toRecordResult","message","content","errors","insert","create","records","_createMany","_createParallel","_createSingle","record","sobjectType","attributes","clone","Id","allowRecursive","rets1","rets2","concat","update","_updateMany","_updateParallel","_updateSingle","noContentResponse","upsert","extIdField","extId","results","del","destroy","_destroyMany","_destroyParallel","_destroySingle","sosl","encodeURIComponent","identity","user_id","organization_id","authorize","logger","requestToken","refresh_token","debug","loginByOAuth2","loginBySoap","authenticate","soapLoginEndpoint","httpRequest","SOAPAction","m","faultstring","revoke","logoutByOAuth2","logoutBySoap","revokeToken","recent","isNumber","recentItems","updated","start","deleted","tabs","limits","theme","quickActions","quickAction","actionName","buffer","10","VERSION","SfDate","RecordStream","./require","11","parseCSV","columns","csvParseSync","toCSV","csvStringifySync","parseCSVStream","csvParse","serializeCSVStream","csvStringify","csv-parse/lib/es5","csv-parse/lib/es5/sync","csv-stringify","csv-stringify/lib/sync","12","zeropad","createLiteralBuilder","literal","num","_literal","toJSON","toDateLiteral","parseDate","yy","getFullYear","mm","getMonth","dd","getDate","dstr","toDateTimeLiteral","hh","mi","ss","dtstr","d","setUTCFullYear","setUTCDate","setUTCMonth","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","offset","setTime","getTime","setFullYear","setDate","setMonth","setHours","setMinutes","setSeconds","setMilliseconds","SfDateLiterals","YESTERDAY","TODAY","TOMORROW","LAST_WEEK","THIS_WEEK","NEXT_WEEK","LAST_MONTH","THIS_MONTH","NEXT_MONTH","LAST_90_DAYS","NEXT_90_DAYS","LAST_N_DAYS","NEXT_N_DAYS","NEXT_N_WEEKS","LAST_N_WEEKS","NEXT_N_MONTHS","LAST_N_MONTHS","THIS_QUARTER","LAST_QUARTER","NEXT_QUARTER","NEXT_N_QUARTERS","LAST_N_QUARTERS","THIS_YEAR","LAST_YEAR","NEXT_YEAR","NEXT_N_YEARS","LAST_N_YEARS","THIS_FISCAL_QUARTER","LAST_FISCAL_QUARTER","NEXT_FISCAL_QUARTER","NEXT_N_FISCAL_QUARTERS","LAST_N_FISCAL_QUARTERS","THIS_FISCAL_YEAR","LAST_FISCAL_YEAR","NEXT_FISCAL_YEAR","NEXT_N_FISCAL_YEARS","LAST_N_FISCAL_YEARS","13","parseJSON","parseXML","parseString","explicitArray","parseText","_conn","_responseType","responseType","transport","_noContentResponse","refreshDelegate","getRefreshDelegate","lastInstanceUrl","deferred","defer","onResume","_refreshing","promise","beforeSend","requestTime","responseTime","isSessionExpired","refresh","isErrorResponse","getError","getResponseBody","Authorization","getResponseContentType","parseResponseBody","parseBody","hasErrorInResponseBody","parseError","isObject","_refreshFn","since","_lastRefreshedAt","xml2js","14","createLoggerFunction","level","log","LogLevels","INFO","_logLevel","DEBUG","WARN","ERROR","FATAL","console","15","authzServiceUrl","tokenServiceUrl","revokeServiceUrl","client_id","redirect_uri","grant_type","client_secret","_postParams","token","16","ProcessRule","rule","approval","ApprovalProcess","list","rules","trigger","contextIds","approvals","requests","req","_request","_createRequest","actionType","contextId","comments","ApprovalProcessRequest","submit","approve","workitemId","_process","onResolve","onReject","_promise","rets","17","nextTick","fail","Deferred","promise/lib/es6-extensions","18","stream","SOQLBuilder","super_","objectMode","_soql","_locator","_config","select","includes","include","sort","_options","maxFetch","autoFetch","responseTarget","ResponseTargets","QueryResult","_executed","_finished","_chaining","_deferred","Readable","_fields","where","conditions","skip","orderby","dir","childRelName","childConfig","table","childQuery","SubQuery","_children","crname","setResponseTarget","exec","execute","promiseCallback","Records","onRecord","removeListener","_execute","toSOQL","totalFetched","totalSize","SingleRecord","Count","numRecords","nextRecordsUrl","done","read","addListener","_expandFields","findRelationTable","rname","ptable","_parent","describeCache","upperRname","childRelation","find","childRelationships","cr","relationshipName","childSObject","expandAsteriskField","fpath","shift","rfield","rtable","referenceTo","fpaths","expandedFields","flatten","explain","createSOQL","Serializable","filter","DEFAULT_BULK_THRESHOLD","thresholdNum","allowBulk","bulkThreshold","batch","handleRecord","rec","write","deleteBulk","handleEnd","mapping","updateStream","recordMapStream","updateBulk","pipe","onResolved","parent","19","path","_path","defaultValues","20","convertRecordForSerialization","Object","keys","reduce","urec","nullValue","precord","prec","pkey","createPipelineStream","s1","s2","pipeline","PassThrough","source","unpipe","dest","Transform","CSV","_transform","enc","_dataStream","converter","DataStreamConverters","serialize","Parsable","_parserStream","highWaterMark","ev","mapStream","noeval","evalMapping","$0","prop","v","isNull","mapped","filterStream","CSVStreamConverter","csv","21","RecordReference","blob","fieldName","22","required","./_required","23","convertType","schema","$","lookupValue","obj","propRegExps","toXML","attrs","elems","startTag","endTag","SOAP","_endpointUrl","endpointUrl","_xmlns","xmlns","invoke","_createEnvelope","faultcode","SessionHeader","CallOptions","24","Record","layouts$","layouts","compactLayouts$","compactLayouts","approvalLayouts$","approvalLayouts","findOne","count","count()","bulkload","operation","input","bulk","load","insertBulk","createBulk","upsertBulk","destroyBulk","deleteHardBulk","destroyHardBulk","layoutName","listviews","listview","ListView","25","createFieldsClause","cond","createConditionClause","createOrderByClause","childQueries","values","cquery","operator","depth","conds","op","createFieldExpression","expr","paren","createOpExpression","expressions","sfop","opMap","valueExpr","createValueExpression","escapeSOQLString","flag","s","=","$eq","!=","$ne",">","$gt","<","$lt",">=","$gte","<=","$lte","$like","$nlike","$in","$nin","$includes","$excludes","$exists","26","streamify","factory","_then","newPromise","normalizeApiHost","apiHost","jsonp","followAllRedirects","env","HTTP_PROXY","proxy","HTTP_TIMEOUT","baseUrl","host","LOCATION_BASE_URL","_getHttpRequestModule","JsonpTransport","_jsonpParam","_signedRequest","_proxyUrl","proxyParams","salesforceproxy-endpoint","_httpProxy","./browser/canvas","./browser/jsonp","27","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","node","createTextNode","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","intervalHandle","MutationObserver","WebKitMutationObserver","28","getLens","b64","len","validLen","placeHoldersLen","byteLength","lens","_byteLength","toByteArray","tmp","arr","Arr","curByte","revLookup","charCodeAt","tripletToBase64","lookup","encodeChunk","uint8","output","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","29","30","typedArraySupport","__proto__","foo","createBuffer","K_MAX_LENGTH","RangeError","buf","arg","encodingOrOffset","allocUnsafe","TypeError","isArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","checked","string","isEncoding","actual","fromArrayLike","array","byteOffset","isBuffer","copy","ArrayBuffer","isView","numberIsNaN","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","val","arrayIndexOf","lastIndexOf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","min","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","out","toHex","bytes","checkOffset","ext","checkInt","max","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","base64clean","trim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","byteArray","hi","lo","dst","constructor","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","defineProperty","Symbol","species","configurable","enumerable","writable","poolSize","allocUnsafeSlow","_isBuffer","compare","x","y","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","base64-js","31","objectToString","isBoolean","isNullOrUndefined","isSymbol","isRegExp","re","isDate","isError","isPrimitive","../../is-buffer/index.js","32","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","ResizeableBuffer","resize","33","_wrapNativeSuper","Class","_cache","Map","Wrapper","_construct","_getPrototypeOf","_isNativeFunction","has","_setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Parent","Function","_typeof","iterator","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_n","_d","_e","_s","_i","next","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","arr2","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","setPrototypeOf","getPrototypeOf","_inherits","subClass","superClass","_require","nl","space","tab","bom_utf8","Parser","_Transform","_this","opts","readableObjectMode","opt","underscore","bom","fnCastField","cast","cast_date","isNaN","fnFirstLineToHeaders","normalizeColumnsArray","comment","delimiter","escape","isInteger","from_line","info","max_record_size","objname","quote","raw","record_delimiter","rd","relax","relax_column_count","skip_empty_lines","skip_lines_with_empty_values","skip_lines_with_error","rtrim","ltrim","to","to_line","comment_lines","empty_lines","invalid_field_length","lines","bomSkipped","castField","commenting","enabled","escaping","escapeIsQuote","expectedRecordLength","firstLineToHeaders","assign","previousBuf","quoting","stop","rawBuffer","recordHasError","record_length","recordDelimiterMaxLength","trimChars","wasQuoting","wasRowDelimiter","__parse","nextBuf","_this$options","_this$state","bufLen","__needMoreData","record_delimiterCount","__autoDiscoverRowDelimiter","chr","append","nextChr","isNextChrTrimable","__isCharTrimable","isNextChrComment","__compareBytes","isNextChrDelimiter","__isDelimiter","isNextChrRowDelimiter","__isRecordDelimiter","__error","CsvError","__context","prepend","_err","recordDelimiterLength","skipCommentLine","__resetField","__resetRow","errField","__onField","errRecord","__onRow","commentCount","delimiterLength","_errField","_err2","lappend","rappend","_err3","_err4","_errField2","_errRecord","_this$options2","_this$state2","__firstLineToColumns","recordLength","_err5","every","disabled","normalizedHeaders","reset","_this$options3","_this$state3","trimRight","_this$__cast","__cast","_this$__cast2","_this$options4","isColumns","context","__isFloat","parseFloat","sourceBuf","targetBuf","firtByte","sourceLength","_this$options5","_this$state4","numOfCharLeft","requiredLength","delLength","loop1","rdLength","column","argument","parser","_Error","_this2","captureStackTrace","_len","contexts","_key","_i2","_contexts","normalizedColumns","./ResizeableBuffer","34","err1","err2",".","35","Stringifier","chunks","stringifier","base","base1","base10","base11","base12","base13","base2","base3","base4","base5","base6","base7","base8","base9","quoted","quotedEmpty","quotedString","eof","formatters","bool","rowDelimiter","countWriten","label","labels","preserve","_line","containsEscape","containsLinebreak","containsQuote","containsdelimiter","l","newLine","ref","ref1","shouldQuote","splice","lodash.get","36","StringDecoder","decoder","./index","string_decoder","37","_events","hasOwnProperty","objectCreate","_eventsCount","_maxListeners","$getMaxListeners","that","defaultMaxListeners","emitNone","handler","isFn","listeners","arrayClone","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","_addListener","listener","existing","newListener","unshift","warned","emitter","warn","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","listenerCount","spliceOne","objectCreatePolyfill","proto","F","objectKeysPolyfill","functionBindPolyfill","objectKeys","hasDefineProperty","setMaxListeners","getMaxListeners","er","doError","prependListener","prependOnceListener","position","originalListener","rawListeners","eventNames","38","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","floor","LN2","39","ctor","superCtor","TempCtor","40","isSlowBuffer","41","42","getValue","isHostObject","Hash","entries","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","lastIndex","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","eq","baseGet","isKey","castPath","toKey","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseToString","symbolToString","INFINITY","stringToPath","isKeyable","getNative","reIsPlainProp","reIsDeepProp","func","maskSrcKey","funcToString","memoize","resolver","FUNC_ERROR_TEXT","memoized","other","tag","funcTag","genTag","isObjectLike","symbolTag","defaultValue","reLeadingDot","rePropName","reRegExpChar","reEscapeChar","freeGlobal","freeSelf","root","arrayProto","funcProto","objectProto","coreJsData","uid","IE_PROTO","symbolProto","43","arrayPush","baseFindIndex","predicate","fromIndex","fromRight","baseProperty","basePropertyOf","baseReduce","collection","iteratee","accumulator","initAccum","eachFunc","baseValues","baseMap","overArg","transform","lodash","LodashWrapper","chainAll","__wrapped__","__actions__","__chain__","assignValue","objValue","baseAssignValue","baseDelay","wait","baseEvery","baseEach","baseExtremum","comparator","current","computed","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseFunctions","baseGetTag","baseGt","baseIsDate","dateTag","baseIsEqual","bitmask","customizer","stack","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","argsTag","objectTag","objIsObj","othIsObj","isSameTag","objStack","othStack","equalArrays","equalByTag","COMPARE_PARTIAL_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsRegExp","regexpTag","baseIteratee","baseMatches","baseLt","isArrayLike","nativeKeys","COMPARE_UNORDERED_FLAG","basePick","baseRest","setToString","overRest","baseSlice","copyArray","baseSome","baseWrapperValue","actions","action","thisArg","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","copyObject","isNew","newValue","createAssigner","assigner","sources","createBaseEach","iterable","createBaseFor","keysFunc","createCtor","Ctor","thisBinding","baseCreate","createFind","findIndexFunc","createPartial","partials","wrapper","argsIndex","argsLength","leftIndex","leftLength","isBind","WRAP_BIND_FLAG","isPartial","othLength","seen","compared","arrValue","othValue","othIndex","boolTag","numberTag","errorTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatRest","isArguments","isIndex","MAX_SAFE_INTEGER","reIsUint","isIterateeCall","nativeKeysIn","nativeObjectToString","nativeMax","otherArgs","compact","Boolean","findIndex","toInteger","flattenDeep","head","isReflexive","last","chain","tap","interceptor","thru","wrapperValue","guard","some","sortBy","criteria","before","negate","isLength","isEmpty","isEqual","nativeIsFinite","asyncTag","proxyTag","toArray","properties","reHasUnescapedHtml","reUnescapedHtml","escapeHtmlChar","matches","mixin","methodNames","isFunc","methodName","noConflict","oldDash","noop","uniqueId","idCounter","WRAP_PARTIAL_FLAG","htmlEscapes","&","\"","'","freeExports","nodeType","freeModule","propertyIsEnumerable","baseIsArguments","delay","toNumber","assignIn","keysIn","propsIndex","propsLength","pick","paths","each","first","chainName","retUnwrapped","valueOf","44","MultiStream","streams","destroyed","_drained","_forwarding","_current","_toStreams2","toStreams2Obj","toStreams2Buf","_queue","_attachErrorListener","_next","toStreams2","_readableState","wrap","_forward","_gotNextStream","onReadable","onClose","ended","onEnd","onError","45","46","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","title","argv","off","binding","cwd","chdir","umask","47","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","_40","_65","_55","_72","doResolve","safeThen","onFulfilled","onRejected","handle","Handler","_37","handleResolved","asap","cb","finale","_87","reason","_61","asap/raw","48","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","race","./core.js","49","sep","maxKeys","kstr","vstr","idx","decodeURIComponent","xs","50","stringifyPrimitive","ks","51","decode","encode","./decode","./encode","52","./lib/_stream_duplex.js","53","Writable","readable","allowHalfOpen","onend","_writableState","pna","onEndNT","_destroy","./_stream_readable","./_stream_writable","core-util-is","process-nextick-args","54","./_stream_transform","55","_uint8ArrayToBuffer","_isUint8Array","OurUint8Array","event","ReadableState","isDuplex","hwm","readableHwm","readableHighWaterMark","defaultHwm","BufferList","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","Stream","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","addChunk","maybeReadMore","needMoreData","emitReadable","computeNewHighWaterMark","MAX_HWM","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resume","resume_","fromList","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","nb","tail","endReadable","endReadableNT","debugUtil","debuglog","destroyImpl","kProxyEvents","_undestroy","undestroy","isPaused","setEncoding","nOrig","doRead","pipeOpts","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","increasedAwaitDrain","pause","doEnd","stdout","stderr","endFn","dests","paused","_fromList","./_stream_duplex","./internal/streams/BufferList","./internal/streams/destroy","./internal/streams/stream","isarray","safe-buffer","string_decoder/","56","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","_flush","prefinish","57","setImmediate","CorkedRequest","finish","onCorkedFinish","nop","WritableState","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","realHasInstance","writev","_writev","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","holder","allBuffers","callFinal","need","endWritable","corkReq","internalUtil","deprecate","getBuffer","hasInstance","cork","uncork","setDefaultEncoding","timers","util-deprecate","58","copyBuffer","custom","59","readableDestroyed","writableDestroyed","emitErrorNT","60","61","./readable","62","./lib/_stream_passthrough.js","./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js","63","64","65","copyProps","SafeBuffer","66","sax","SAXParser","strict","clearBuffers","q","bufferCheckPosition","MAX_BUFFER_LENGTH","lowercase","lowercasetags","looseCase","tags","closedRoot","sawRoot","noscript","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","ns","rootNS","trackPosition","checkBufferLength","maxAllowed","maxActual","buffers","closeText","emitNode","cdata","flushBuffers","createStream","SAXStream","_parser","me","_decoder","streamWraps","isWhitespace","isQuote","isAttribEnd","isMatch","regex","notMatch","textNode","textopts","text","normalize","strictFail","BEGIN_WHITESPACE","TEXT","newTag","tagName","qname","attribute","qualName","local","attrib","attribName","attribValue","qn","XML_NAMESPACE","XMLNS_NAMESPACE","openTag","selfClosing","uri","nv","isSelfClosing","SCRIPT","closeTag","closeTo","parseEntity","entity","entityLC","numStr","charAt","fromCodePoint","beginWhiteSpace","OPEN_WAKA","startTagPosition","starti","TEXT_ENTITY","SCRIPT_ENDING","CLOSE_TAG","SGML_DECL","sgmlDecl","nameStart","OPEN_TAG","PROC_INST","procInstName","procInstBody","CDATA","COMMENT","DOCTYPE","doctype","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","nameBody","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_VALUE","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","returnState","entityBody","entityStart","EVENTS","newf","SD","xml","STATE","COMMENT_STARTING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","stringFromCharCode","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","67","EE","didOnEnd","_isStdio","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js","68","_normalizeEncoding","retried","normalizeEncoding","nenc","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckIncomplete","utf8CheckExtraBytes","utf8Text","total","utf8End","69","clearImmediate","Timeout","clearFn","_id","_clearFn","immediateIds","nextImmediateId","unref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","process/browser.js","70","deprecated","trace","71","72","ctx","stylize","stylizeNoColor","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","desc","numLinesEst","prev","cur","ar","timestamp","time","getHours","getMinutes","getSeconds","months","formatRegExp","format","objects","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","NODE_DEBUG","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","origin","add","./support/isBuffer","73","stripBOM","74","builder","escapeCDATA","requiresCDATA","wrapCDATA","hasProp","Builder","buildObject","rootObj","attrkey","charkey","render","rootElement","rootName","element","attr","child","txt","ele","up","att","xmldec","headless","allowSurrogateChars","renderOpts","./defaults","xmlbuilder","75","0.1","explicitCharkey","normalizeTags","ignoreAttrs","mergeAttrs","explicitRoot","validator","explicitChildren","childkey","charsAsChildren","includeWhiteChars","async","attrNameProcessors","attrValueProcessors","tagNameProcessors","valueProcessors","emptyTag","0.2","preserveChildrenOrder","standalone","pretty","indent","newline","chunkSize","76","processItem","processors","__super__","thing","assignOrPush","processAsync","xmlnskey","saxParser","error1","errThrown","ontext","resultObject","EXPLICIT_CHARKEY","onopentag","processedKey","onclosetag","emptyStr","nodeName","objClone","old","xpath","charChild","#name","oncdata","./bom","./processors","77","prefixMatch","firstCharLowerCase","stripPrefix","parseNumbers","parseBooleans","78","ValidationError","./builder","./parser","79","isPlainObject","80","XMLAttribute","attName","attValue","writer","81","XMLCData","XMLNode","./XMLNode","82","XMLComment","83","XMLDTDAttList","elementName","attributeName","attributeType","defaultValueType","eleName","dtdAttType","dtdAttDefault","dtdAttList","84","XMLDTDElement","dtdElementValue","dtdElement","85","XMLDTDEntity","pe","pubID","sysID","dtdPubID","dtdSysID","nData","dtdNData","dtdEntityValue","dtdEntity","./Utility","86","XMLDTDNotation","dtdNotation","87","XMLDeclaration","xmlVersion","xmlEncoding","xmlStandalone","declaration","88","XMLDocType","documentObject","children","attList","pEntity","notation","docType","ent","pent","./XMLDTDAttList","./XMLDTDElement","./XMLDTDEntity","./XMLDTDNotation","89","XMLDocument","XMLStringWriter","XMLStringifier","isDocument","writerOptions","./XMLStringWriter","./XMLStringifier","90","XMLDocumentCB","XMLElement","XMLProcessingInstruction","XMLRaw","XMLText","onData","onDataCallback","onEndCallback","currentNode","currentLevel","openTags","documentStarted","documentCompleted","openCurrent","skipNullAttributes","instruction","insTarget","insValue","processingInstruction","rootNodeName","closeNode","openNode","isOpen","isClosed","nod","dat","com","ins","dec","dtd","./XMLAttribute","./XMLCData","./XMLComment","./XMLDeclaration","./XMLDocType","./XMLElement","./XMLProcessingInstruction","./XMLRaw","./XMLText","91","isRoot","rootObject","clonedSelf","clonedChild","removeAttribute","92","childNode","lastChild","len1","ignoreDecorators","convertAttKey","separateArrayItems","convertTextKey","convertCDataKey","convertCommentKey","convertRawKey","convertPIKey","insertBefore","removed","insertAfter","remove","commentBefore","commentAfter","instructionBefore","instructionAfter","doc","ref2","importDocument","clonedRoot","importXMLBuilder","93","94","95","XMLStreamWriter","XMLWriterBase","isLastRootNode","endline","spacebeforeslash","allowEmpty","./XMLWriterBase","96","textispresent","textispresentwasset","newlinedefault","prettydefault","dontprettytextnodes","97","assertLegalChar","noDoubleEncoding","eleText","elEscape","attEscape","ampregex","98","99","ref3","ref4","ref5","ref6","100","begin","stringWriter","streamWriter","./XMLDocument","./XMLDocumentCB","./XMLStreamWriter"],"mappings":"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AC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,KAAA,IACAxwC,KAAA,IACAywC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,IACAC,MAAA,IACAC,IAAA,IACAC,QAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,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","file":"jsforce-core.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar jsforce = require('../core');\njsforce.browser = require('./client');\nmodule.exports = jsforce;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.jsforce = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar jsforce = require('../core');\njsforce.browser = require('./client');\nmodule.exports = jsforce;\n\n},{\"../core\":10,\"./client\":5}],2:[function(require,module,exports){\n'use strict';\nmodule.exports = '1.9.3';\n\n},{}],3:[function(require,module,exports){\n// This file content is dynamically created in build script\n\"use strict\";\nmodule.exports = {\n  'inherits': require('inherits'),\n  'util': require('util'),\n  'events': require('events'),\n  'lodash/core': require('lodash/core'),\n  'readable-stream': require('readable-stream'),\n  'multistream': require('multistream'),\n  './VERSION': require('./VERSION'),\n  './cache': require('./cache'),\n  './connection': require('./connection'),\n  './core': require('./core'),\n  './csv': require('./csv'),\n  './date': require('./date'),\n  './http-api': require('./http-api'),\n  './logger': require('./logger'),\n  './oauth2': require('./oauth2'),\n  './process': require('./process'),\n  './promise': require('./promise'),\n  './query': require('./query'),\n  './quick-action': require('./quick-action'),\n  './record-stream': require('./record-stream'),\n  './record': require('./record'),\n  './soap': require('./soap'),\n  './sobject': require('./sobject'),\n  './soql-builder': require('./soql-builder'),\n  './transport': require('./transport')\n};\n},{\"./VERSION\":2,\"./cache\":8,\"./connection\":9,\"./core\":10,\"./csv\":11,\"./date\":12,\"./http-api\":13,\"./logger\":14,\"./oauth2\":15,\"./process\":16,\"./promise\":17,\"./query\":18,\"./quick-action\":19,\"./record\":21,\"./record-stream\":20,\"./soap\":23,\"./sobject\":24,\"./soql-builder\":25,\"./transport\":26,\"events\":37,\"inherits\":39,\"lodash/core\":43,\"multistream\":44,\"readable-stream\":62,\"util\":72}],4:[function(require,module,exports){\n/*global Sfdc */\n'use strict';\n\nvar Duplex = require('readable-stream').Duplex,\n    _ = require('lodash/core');\n\nfunction parseHeaders(hs) {\n  var headers = {};\n  hs.split(/\\n/).forEach(function(line) {\n    var pair = line.split(/\\s*:\\s*/);\n    var name = pair[0].toLowerCase();\n    var value = pair[1];\n    headers[name] = value;\n  });\n  return headers;\n}\n\nmodule.exports = {\n\n  supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',\n\n  createRequest: function(signedRequest) {\n    return function(params, callback) {\n      var response;\n      var str = new Duplex();\n      str._read = function(size) {\n        if (response) {\n          str.push(response.body);\n        }\n      };\n      var bufs = [];\n      var sent = false;\n      str._write = function(chunk, encoding, callback) {\n        bufs.push(chunk.toString(encoding));\n        callback();\n      };\n      str.on('finish', function() {\n        if (!sent) {\n          send(bufs.join(''));\n          sent = true;\n        }\n      });\n      if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n        send(params.body);\n        sent = true;\n      }\n\n      function send(body) {\n        var settings = {\n          client: signedRequest.client,\n          method: params.method,\n          data: body\n        };\n        if (params.headers) {\n          settings.headers = {};\n          for (var name in params.headers) {\n            if (name.toLowerCase() === 'content-type') {\n              settings.contentType = params.headers[name];\n            } else {\n              settings.headers[name] = params.headers[name];\n            }\n          }\n        }\n        settings.success = function(data) {\n          var headers = parseHeaders(data.responseHeaders);\n          var body = data.payload;\n          if (!_.isString(body)) {\n            body = JSON.stringify(body);\n          }\n          response = {\n            statusCode : data.status,\n            headers: headers,\n            body: body\n          };\n          if (callback) {\n            callback(null, response, response.body);\n          }\n          str.end();\n        };\n        settings.failure = function(err) {\n          if (callback) {\n            callback(err);\n          }\n        };\n        Sfdc.canvas.client.ajax(params.url, settings);\n      }\n      return str;\n    };\n  }\n};\n\n},{\"lodash/core\":43,\"readable-stream\":62}],5:[function(require,module,exports){\n/**\n * @file Browser client connection management class\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    qs = require('querystring'),\n    _ = require('lodash/core'),\n    Connection = require('../connection'),\n    OAuth2 = require('../oauth2');\n\n/**\n * @private\n */\nfunction popupWin(url, w, h) {\n  var left = (screen.width/2)-(w/2);\n  var top = (screen.height/2)-(h/2);\n  return window.open(url, null, 'location=yes,toolbar=no,status=no,menubar=no,width='+w+',height='+h+',top='+top+',left='+left);\n}\n\nfunction handleCallbackResponse() {\n  var res = checkCallbackResponse();\n  var state = localStorage.getItem('jsforce_state');\n  if (res && state && res.body.state === state) {\n    localStorage.removeItem('jsforce_state');\n    var states = state.split('.');\n    var prefix = states[0], promptType = states[1];\n    var cli = new Client(prefix);\n    if (res.success) {\n      cli._storeTokens(res.body);\n      location.hash = '';\n    } else {\n      cli._storeError(res.body);\n    }\n    if (promptType === 'popup') { window.close(); }\n    return true;\n  }\n}\n\n/**\n * @private\n */\nfunction checkCallbackResponse() {\n  var params;\n  if (window.location.hash) {\n    params = qs.parse(window.location.hash.substring(1));\n    if (params.access_token) {\n      return { success: true, body: params };\n    }\n  } else if (window.location.search) {\n    params = qs.parse(window.location.search.substring(1));\n    if (params.error) {\n      return { success: false, body: params };\n    }\n  }\n}\n\n/** @private **/\nvar clientIdx = 0;\n\n\n/**\n * @class\n * @todo add document\n */\nvar Client = function(prefix) {\n  this._prefix = prefix || 'jsforce' + clientIdx++;\n  this.connection = null;\n};\n\ninherits(Client, events.EventEmitter);\n\n/**\n *\n */\nClient.prototype.init = function(config) {\n  if (handleCallbackResponse()) { return; }\n  this.config = config;\n  this.connection = new Connection(config);\n  var tokens = this._getTokens();\n  if (tokens) {\n    this.connection.initialize(tokens);\n    var self = this;\n    setTimeout(function() {\n      self.emit('connect', self.connection);\n    }, 10);\n  }\n};\n\n/**\n *\n */\nClient.prototype.login = function(options, callback) {\n  if (_.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  callback = callback || function(){ };\n  _.extend(options, this.config);\n  var self = this;\n  this._prompt(options, callback);\n};\n\n\nClient.prototype._prompt = function(options, callback) {\n  var self = this;\n  var oauth2 = new OAuth2(options);\n  var rand = Math.random().toString(36).substring(2);\n  var state = [ this._prefix, \"popup\", rand ].join('.');\n  localStorage.setItem(\"jsforce_state\", state);\n  var authzUrl = oauth2.getAuthorizationUrl({\n    response_type: 'token',\n    scope : options.scope,\n    state: state\n  });\n  var size = options.size || {};\n  var pw = popupWin(authzUrl, size.width || 912, size.height || 513);\n  if (!pw) {\n    state = [ this._prefix, \"redirect\", rand ].join('.');\n    localStorage.setItem(\"jsforce_state\", state);\n    authzUrl = oauth2.getAuthorizationUrl({\n      response_type: 'token',\n      scope : options.scope,\n      state: state\n    });\n    location.href = authzUrl;\n    return;\n  }\n  self._removeTokens();\n  var pid = setInterval(function() {\n    try {\n      if (!pw || pw.closed) {\n        clearInterval(pid);\n        var tokens = self._getTokens();\n        if (tokens) {\n          self.connection.initialize(tokens);\n          self.emit('connect', self.connection);\n          callback(null, { status: 'connect' });\n        } else {\n          var err = self._getError();\n          if (err) {\n            callback(new Error(err.error + \": \" + err.error_description));\n          } else {\n            callback(null, { status: 'cancel' });\n          }\n        }\n      }\n    } catch(e) {}\n  }, 1000);\n};\n\n/**\n *\n */\nClient.prototype.isLoggedIn = function() {\n  return !!(this.connection && this.connection.accessToken);\n};\n\n/**\n *\n */\nClient.prototype.logout = function() {\n  this.connection.logout();\n  this._removeTokens();\n  this.emit('disconnect');\n};\n\n/**\n * @private\n */\nClient.prototype._getTokens = function() {\n  var regexp = new RegExp(\"(^|;\\\\s*)\"+this._prefix+\"_loggedin=true(;|$)\");\n  if (document.cookie.match(regexp)) {\n    var issuedAt = Number(localStorage.getItem(this._prefix+'_issued_at'));\n    if (Date.now() < issuedAt + 2 * 60 * 60 * 1000) { // 2 hours\n      var userInfo;\n      var idUrl = localStorage.getItem(this._prefix + '_id');\n      if (idUrl) {\n        var ids = idUrl.split('/');\n        userInfo = { id: ids.pop(), organizationId: ids.pop(), url: idUrl };\n      }\n      return {\n        accessToken: localStorage.getItem(this._prefix + '_access_token'),\n        instanceUrl: localStorage.getItem(this._prefix + '_instance_url'),\n        userInfo: userInfo\n      };\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n */\nClient.prototype._storeTokens = function(params) {\n  localStorage.setItem(this._prefix + '_access_token', params.access_token);\n  localStorage.setItem(this._prefix + '_instance_url', params.instance_url);\n  localStorage.setItem(this._prefix + '_issued_at', params.issued_at);\n  localStorage.setItem(this._prefix + '_id', params.id);\n  document.cookie = this._prefix + '_loggedin=true;';\n};\n\n/**\n * @private\n */\nClient.prototype._removeTokens = function() {\n  localStorage.removeItem(this._prefix + '_access_token');\n  localStorage.removeItem(this._prefix + '_instance_url');\n  localStorage.removeItem(this._prefix + '_issued_at');\n  localStorage.removeItem(this._prefix + '_id');\n  document.cookie = this._prefix + '_loggedin=';\n};\n\n/**\n * @private\n */\nClient.prototype._getError = function() {\n  try {\n    var err = JSON.parse(localStorage.getItem(this._prefix + '_error'));\n    localStorage.removeItem(this._prefix + '_error');\n    return err;\n  } catch(e) {}\n};\n\n/**\n * @private\n */\nClient.prototype._storeError = function(err) {\n  localStorage.setItem(this._prefix + '_error', JSON.stringify(err));\n};\n\n/**\n *\n */\nmodule.exports = new Client();\n\nmodule.exports.Client = Client;\n\n},{\"../connection\":9,\"../oauth2\":15,\"events\":37,\"inherits\":39,\"lodash/core\":43,\"querystring\":51}],6:[function(require,module,exports){\n/*global window, document */\n'use strict';\n\nvar _index = 0;\n\nmodule.exports = {\n\n  supported: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n  createRequest: function(jsonpParam, timeout) {\n    jsonpParam = jsonpParam || 'callback';\n    timeout = timeout || 10000;\n\n    return function(params, callback) {\n      if (params.method.toUpperCase() !== 'GET') {\n        return callback(new Error('JSONP only supports GET request.'));\n      }\n      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);\n      var callbacks = window;\n      var url = params.url;\n      url += url.indexOf('?')>0 ? '&' : '?';\n      url += jsonpParam + '=' + cbFuncName;\n\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = url;\n      document.documentElement.appendChild(script);\n\n      var pid = setTimeout(function() {\n        cleanup();\n        callback(new Error(\"JSONP call time out.\"));\n      }, timeout);\n\n      callbacks[cbFuncName] = function(res) {\n        cleanup();\n        callback(null, {\n          statusCode: 200,\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify(res)\n        });\n      };\n\n      var cleanup = function() {\n        clearTimeout(pid);\n        document.documentElement.removeChild(script);\n        delete callbacks[cbFuncName];\n      };\n    };\n\n  }\n\n};\n},{}],7:[function(require,module,exports){\n'use strict';\n\nvar Duplex = require('readable-stream').Duplex;\nvar _ = require('lodash/core');\n\nmodule.exports = function(params, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(params.method, params.url);\n  if (params.headers) {\n    for (var header in params.headers) {\n      xhr.setRequestHeader(header, params.headers[header]);\n    }\n  }\n  xhr.setRequestHeader(\"Accept\", \"*/*\");\n  var response;\n  var str = new Duplex();\n  str._read = function(size) {\n    if (response) {\n      str.push(response.body);\n    }\n  };\n  var bufs = [];\n  var sent = false;\n  str._write = function(chunk, encoding, callback) {\n    bufs.push(chunk.toString(encoding === \"buffer\" ? \"binary\" : encoding));\n    callback();\n  };\n  str.on('finish', function() {\n    if (!sent) {\n      xhr.send(bufs.join(''));\n      sent = true;\n    }\n  });\n  if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n    xhr.send(params.body);\n    sent = true;\n  }\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState === 4) {\n      var headerNames = getResponseHeaderNames(xhr);\n      var headers = {};\n      _.forEach(headerNames, function(headerName) {\n        if (headerName) {\n          headers[headerName] = xhr.getResponseHeader(headerName);\n        }\n      });\n      response = {\n        statusCode: xhr.status,\n        headers: headers,\n        body: xhr.response\n      };\n      if (!response.statusCode) {\n        response.statusCode = 400;\n        response.body = \"Access Declined\";\n      }\n      if (callback) {\n        callback(null, response, response.body);\n      }\n      str.end();\n    }\n  };\n  return str;\n};\n\nfunction getResponseHeaderNames(xhr) {\n  var headerLines = (xhr.getAllResponseHeaders() || \"\").split(/[\\r\\n]+/);\n  return _.map(headerLines, function(headerLine) {\n    return headerLine.split(/\\s*:/)[0].toLowerCase();\n  });\n}\n\n},{\"lodash/core\":43,\"readable-stream\":62}],8:[function(require,module,exports){\n/**\n * @file Manages asynchronous method response cache\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    _      = require('lodash/core');\n\n/**\n * Class for managing cache entry\n *\n * @private\n * @class\n * @constructor\n * @template T\n */\nvar CacheEntry = function() {\n  this.fetching = false;\n};\n\ninherits(CacheEntry, events.EventEmitter);\n\n/**\n * Get value in the cache entry\n *\n * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated\n * @returns {T|undefined}\n */\nCacheEntry.prototype.get = function(callback) {\n  if (!callback) {\n    return this._value;\n  } else {\n    this.once('value', callback);\n    if (!_.isUndefined(this._value)) {\n      this.emit('value', this._value);\n    }\n  }\n};\n\n/**\n * Set value in the cache entry\n *\n * @param {T} [value] - A value for caching\n */\nCacheEntry.prototype.set = function(value) {\n  this._value = value;\n  this.emit('value', this._value);\n};\n\n/**\n * Clear cached value\n */\nCacheEntry.prototype.clear = function() {\n  this.fetching = false;\n  delete this._value;\n};\n\n\n/**\n * Caching manager for async methods\n *\n * @class\n * @constructor\n */\nvar Cache = function() {\n  this._entries = {};\n};\n\n/**\n * retrive cache entry, or create if not exists.\n *\n * @param {String} [key] - Key of cache entry\n * @returns {CacheEntry}\n */\nCache.prototype.get = function(key) {\n  if (key && this._entries[key]) {\n    return this._entries[key];\n  } else {\n    var entry = new CacheEntry();\n    this._entries[key] = entry;\n    return entry;\n  }\n};\n\n/**\n * clear cache entries prefix matching given key\n * @param {String} [key] - Key prefix of cache entry to clear\n */\nCache.prototype.clear = function(key) {\n  for (var k in this._entries) {\n    if (!key || k.indexOf(key) === 0) {\n      this._entries[k].clear();\n    }\n  }\n};\n\n/**\n * create and return cache key from namespace and serialized arguments.\n * @private\n */\nfunction createCacheKey(namespace, args) {\n  args = Array.prototype.slice.apply(args);\n  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';\n}\n\n/**\n * Enable caching for async call fn to intercept the response and store it to cache.\n * The original async calll fn is always invoked.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeResponseCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  return function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n      callback = null;\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    entry.fetching = true;\n    if (callback) {\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n        callback(err, result);\n      });\n    }\n    var ret, error;\n    try {\n      ret = fn.apply(scope || this, args);\n    } catch(e) {\n      error = e;\n    }\n    if (ret && _.isFunction(ret.then)) { // if the returned value is promise\n      if (!callback) {\n        return ret.then(function(result) {\n          entry.set({ error: undefined, result: result });\n          return result;\n        }, function(err) {\n          entry.set({ error: err, result: undefined });\n          throw err;\n        });\n      } else {\n        return ret;\n      }\n    } else {\n      entry.set({ error: error, result: ret });\n      if (error) { throw error; }\n      return ret;\n    }\n  };\n};\n\n/**\n * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  var $fn = function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).\n      var value = entry.get();\n      if (!value) { throw new Error('Function call result is not cached yet.'); }\n      if (value.error) { throw value.error; }\n      return value.result;\n    }\n    entry.get(function(value) {\n      callback(value.error, value.result);\n    });\n    if (!entry.fetching) { // only when no other client is calling function\n      entry.fetching = true;\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n      });\n      fn.apply(scope || this, args);\n    }\n  };\n  $fn.clear = function() {\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, arguments) :\n              createCacheKey(options.namespace, arguments);\n    cache.clear(key);\n  };\n  return $fn;\n};\n\n\nmodule.exports = Cache;\n\n},{\"events\":37,\"inherits\":39,\"lodash/core\":43}],9:[function(require,module,exports){\n(function (Buffer){\n/*global Buffer */\n/**\n * @file Connection class to keep the API session information and manage requests\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events  = require('events'),\n    inherits = require('inherits'),\n    _       = require('lodash/core'),\n    Promise = require('./promise'),\n    Logger  = require('./logger'),\n    OAuth2  = require('./oauth2'),\n    Query   = require('./query'),\n    SObject = require('./sobject'),\n    QuickAction = require('./quick-action'),\n    HttpApi = require('./http-api'),\n    Transport = require('./transport'),\n    Process = require('./process'),\n    Cache   = require('./cache');\n\nvar defaults = {\n  loginUrl: \"https://login.salesforce.com\",\n  instanceUrl: \"\",\n  version: \"42.0\"\n};\n\n/*\n * Constant of maximum records num in DML operation (update/delete)\n */\nvar MAX_DML_COUNT = 200;\n\n\n/**\n * Connection class to keep the API session information and manage requests\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Object} [options] - Connection options\n * @param {OAuth2|Object} [options.oauth2] - OAuth2 instance or options to be passed to OAuth2 constructor\n * @param {String} [options.logLevel] - Output logging level (DEBUG|INFO|WARN|ERROR|FATAL)\n * @param {String} [options.version] - Salesforce API Version (without \"v\" prefix)\n * @param {Number} [options.maxRequest] - Max number of requests allowed in parallel call\n * @param {String} [options.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {String} [options.proxyUrl] - Cross-domain proxy server URL, used in browser client, non Visualforce app.\n * @param {String} [options.httpProxy] - URL of HTTP proxy server, used in server client.\n * @param {Object} [options.callOptions] - Call options used in each SOAP/REST API request. See manual.\n */\nvar Connection = module.exports = function(options) {\n  options = options || {};\n\n  this._logger = new Logger(options.logLevel);\n\n  var oauth2 = options.oauth2 || {\n    loginUrl : options.loginUrl,\n    clientId : options.clientId,\n    clientSecret : options.clientSecret,\n    redirectUri : options.redirectUri,\n    proxyUrl: options.proxyUrl,\n    httpProxy: options.httpProxy\n  };\n\n  /**\n   * OAuth2 object\n   * @member {OAuth2} Connection#oauth2\n   */\n  this.oauth2 = oauth2 = oauth2 instanceof OAuth2 ? oauth2 : new OAuth2(oauth2);\n\n  this.loginUrl = options.loginUrl || oauth2.loginUrl || defaults.loginUrl;\n  this.version = options.version || defaults.version;\n  this.maxRequest = options.maxRequest || this.maxRequest || 10;\n\n  /** @private */\n  if (options.proxyUrl) {\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\n  } else if (options.httpProxy) {\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\n  } else {\n    this._transport = new Transport();\n  }\n\n  this.callOptions = options.callOptions;\n\n  /*\n   * Fire connection:new event to notify jsforce plugin modules\n   */\n  var jsforce = require('./core');\n  jsforce.emit('connection:new', this);\n\n  /**\n   * Streaming API object\n   * @member {Streaming} Connection#streaming\n   */\n  // this.streaming = new Streaming(this);\n  /**\n   * Bulk API object\n   * @member {Bulk} Connection#bulk\n   */\n  // this.bulk = new Bulk(this);\n  /**\n   * Tooling API object\n   * @member {Tooling} Connection#tooling\n   */\n  // this.tooling = new Tooling(this);\n  /**\n   * Analytics API object\n   * @member {Analytics} Connection#analytics\n   */\n  // this.analytics = new Analytics(this);\n  /**\n   * Chatter API object\n   * @member {Chatter} Connection#chatter\n   */\n  // this.chatter = new Chatter(this);\n  /**\n   * Metadata API object\n   * @member {Metadata} Connection#metadata\n   */\n  // this.metadata = new Metadata(this);\n\n  /**\n   * SOAP API object\n   * @member {SoapApi} Connection#soap\n   */\n  // this.soap = new SoapApi(this);\n\n  /**\n   * Apex REST API object\n   * @member {Apex} Connection#apex\n   */\n  // this.apex = new Apex(this);\n\n  /**\n   * @member {Process} Connection#process\n   */\n  this.process = new Process(this);\n\n  /**\n   * Cache object for result\n   * @member {Cache} Connection#cache\n   */\n  this.cache = new Cache();\n\n  // Allow to delegate connection refresh to outer function\n  var self = this;\n  var refreshFn = options.refreshFn;\n  if (!refreshFn && this.oauth2.clientId) {\n    refreshFn = oauthRefreshFn;\n  }\n  if (refreshFn) {\n    this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, refreshFn);\n  }\n\n  var cacheOptions = {\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\n  };\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n  this.describeSObject$ = this.describe$;\n  this.describeSObject = this.describe;\n\n  cacheOptions = { key: 'describeGlobal' };\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\n\n  this.initialize(options);\n};\n\ninherits(Connection, events.EventEmitter);\n\n/**\n * Initialize connection.\n *\n * @protected\n * @param {Object} options - Initialization options\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {UserInfo} [options.userInfo] - Logged in user information\n */\nConnection.prototype.initialize = function(options) {\n  if (!options.instanceUrl && options.serverUrl) {\n    options.instanceUrl = options.serverUrl.split('/').slice(0, 3).join('/');\n  }\n  this.instanceUrl = options.instanceUrl || options.serverUrl || this.instanceUrl || defaults.instanceUrl;\n\n  this.accessToken = options.sessionId || options.accessToken || this.accessToken;\n  this.refreshToken = options.refreshToken || this.refreshToken;\n  if (this.refreshToken && !this._refreshDelegate) {\n    throw new Error(\"Refresh token is specified without oauth2 client information or refresh function\");\n  }\n\n  this.signedRequest = options.signedRequest && parseSignedRequest(options.signedRequest);\n  if (this.signedRequest) {\n    this.accessToken = this.signedRequest.client.oauthToken;\n    if (Transport.CanvasTransport.supported) {\n      this._transport = new Transport.CanvasTransport(this.signedRequest);\n    }\n  }\n\n  if (options.userInfo) {\n    this.userInfo = options.userInfo;\n  }\n\n  this.limitInfo = {};\n\n  this.sobjects = {};\n  this.cache.clear();\n  this.cache.get('describeGlobal').removeAllListeners('value');\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\n    if (res.result) {\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\n      types.forEach(this.sobject, this);\n    }\n  }, this));\n\n  if (this.tooling) {\n    this.tooling.initialize();\n  }\n\n  this._sessionType = options.sessionId ? \"soap\" : \"oauth2\";\n\n};\n\n/** @private **/\nfunction oauthRefreshFn(conn, callback) {\n  conn.oauth2.refreshToken(conn.refreshToken, function(err, res) {\n    if (err) { return callback(err); }\n    var userInfo = parseIdUrl(res.id);\n    conn.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo : userInfo\n    });\n    callback(null, res.access_token, res);\n  });\n}\n\n/** @private **/\nfunction parseSignedRequest(sr) {\n  if (_.isString(sr)) {\n    if (sr[0] === '{') { // might be JSON\n      return JSON.parse(sr);\n    } else { // might be original base64-encoded signed request\n      var msg = sr.split('.').pop(); // retrieve latter part\n      var json = Buffer.from(msg, 'base64').toString('utf-8');\n      return JSON.parse(json);\n    }\n    return null;\n  }\n  return sr;\n}\n\n\n/** @private **/\nConnection.prototype._baseUrl = function() {\n  return [ this.instanceUrl, \"services/data\", \"v\" + this.version ].join('/');\n};\n\n/**\n * Convert path to absolute url\n * @private\n */\nConnection.prototype._normalizeUrl = function(url) {\n  if (url[0] === '/') {\n    if (url.indexOf('/services/') === 0) {\n      return this.instanceUrl + url;\n    } else {\n      return this._baseUrl() + url;\n    }\n  } else {\n    return url;\n  }\n};\n\n/**\n * Send REST API request with given HTTP request info, with connected session information.\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String|Object} request - HTTP request object or URL to GET request\n * @param {String} request.method - HTTP method URL to send HTTP request\n * @param {String} request.url - URL to send HTTP request\n * @param {Object} [request.headers] - HTTP request headers in hash object (key-value)\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.request = function(request, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var self = this;\n\n  // if request is simple string, regard it as url in GET method\n  if (_.isString(request)) {\n    request = { method: 'GET', url: request };\n  }\n  // if url is given in relative path, prepend base url or instance url before.\n  request.url = this._normalizeUrl(request.url);\n\n  var httpApi = new HttpApi(this, options);\n\n  // log api usage and its quota\n  httpApi.on('response', function(response) {\n    if (response.headers && response.headers[\"sforce-limit-info\"]) {\n      var apiUsage = response.headers[\"sforce-limit-info\"].match(/api\\-usage=(\\d+)\\/(\\d+)/);\n      if (apiUsage) {\n        self.limitInfo = {\n          apiUsage: {\n            used: parseInt(apiUsage[1], 10),\n            limit: parseInt(apiUsage[2], 10)\n          }\n        };\n      }\n    }\n  });\n  return httpApi.request(request).thenCall(callback);\n};\n\n/**\n * Send HTTP GET request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP GET\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestGet = function(url, options, callback) {\n  var request = {\n    method: \"GET\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/**\n * Send HTTP POST request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP POST\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPost = function(url, body, options, callback) {\n  var request = {\n    method: \"POST\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PUT request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PUT\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPut = function(url, body, options, callback) {\n  var request = {\n    method: \"PUT\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PATCH request with JSON body\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PATCH\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPatch = function(url, body, options, callback) {\n  var request = {\n    method: \"PATCH\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP DELETE request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP DELETE\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestDelete = function(url, options, callback) {\n  var request = {\n    method: \"DELETE\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/** @private */\nfunction formatDate(date) {\n  function pad(number) {\n    if (number < 10) {\n      return '0' + number;\n    }\n    return number;\n  }\n\n  return date.getUTCFullYear() +\n    '-' + pad(date.getUTCMonth() + 1) +\n    '-' + pad(date.getUTCDate()) +\n    'T' + pad(date.getUTCHours()) +\n    ':' + pad(date.getUTCMinutes()) +\n    ':' + pad(date.getUTCSeconds()) +\n    '+00:00';\n}\n\n\n/** @private **/\nfunction parseIdUrl(idUrl) {\n  var idUrls = idUrl.split(\"/\");\n  var userId = idUrls.pop(), orgId = idUrls.pop();\n  return {\n    id: userId,\n    organizationId: orgId,\n    url: idUrl\n  };\n}\n\n/**\n * @callback Callback\n * @type {Function}\n * @param {Error} err - Callback error\n * @param {T} response - Callback response\n * @template T\n */\n\n/**\n * @typedef {Object} QueryResult\n * @prop {Boolean} done - Flag if the query is fetched all records or not\n * @prop {String} [nextRecordsUrl] - URL locator for next record set, (available when done = false)\n * @prop {Number} totalSize - Total size for query\n * @prop {Array.<Record>} [records] - Array of records fetched\n */\n\n/**\n * Execute query by using SOQL\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.query = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Execute query by using SOQL, including deleted records\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryAll = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  query.scanAll(true);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Query next record set by using query locator\n *\n * @param {String} locator - Next record set locator\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryMore = function(locator, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, { locator: locator }, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/** @private */\nConnection.prototype._ensureVersion = function(majorVersion) {\n  var versions = this.version.split('.');\n  return parseInt(versions[0], 10) >= majorVersion;\n}\n\n/** @private */\nConnection.prototype._supports = function(feature) {\n  switch (feature) {\n    case 'sobject-collection':\n      return this._ensureVersion(42);\n    default:\n      return false;\n  }\n}\n\n/**\n * Retrieve specified records\n *\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Array.<String>} [options.fields] - Fetching field names in retrieving record\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nConnection.prototype.retrieve = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(ids) ?\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\n        this._retrieveMany(type, ids, options) :\n        this._retrieveParallel(type, ids, options)) :\n      this._retrieveSingle(type, ids, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._retrieveSingle = function(type, id, options) {\n  if (!id) {\n    return Promise.reject(new Error('Invalid record ID. Specify valid record ID value'));\n  }\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\n  if (options.fields) {\n    url += '?fields=' + options.fields.join(',');\n  }\n  return this.request({\n    method: 'GET',\n    url: url,\n    headers: options.headers,\n  });\n};\n\n/** @private */\nConnection.prototype._retrieveParallel = function(type, ids, options) {\n  if (ids.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    ids.map(function(id) {\n      return self._retrieveSingle(type, id, options).catch(function(err) {\n        if (options.allOrNone || err.errorCode !== 'NOT_FOUND') {\n          throw err;\n        }\n        return null;\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._retrieveMany = function(type, ids, options) {\n  if (ids.length === 0) {\n    return Promise.resolve([]);\n  }\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\", type ].join('/');\n  var self = this;\n  return (\n    options.fields ?\n      Promise.resolve(options.fields) :\n      new Promise(function(resolve, reject) {\n        self.describe$(type, function(err, so) {\n          if (err) {\n            reject(err);\n          } else {\n            var fields = so.fields.map(function(field) {\n              return field.name;\n            });\n            resolve(fields);\n          }\n        });\n      })\n  ).then(function(fields) {\n    return self.request({\n      method : 'POST',\n      url : url,\n      body : JSON.stringify({\n        ids : ids,\n        fields : fields\n      }),\n      headers : _.defaults(options.headers || {}, {\n        \"Content-Type\" : \"application/json\"\n      })\n    });\n  });\n};\n\n\n/**\n * @typedef RecordResult\n * @prop {Boolean} success - The result is succeessful or not\n * @prop {String} [id] - Record ID\n * @prop {Array.<Object>} [errors] - Errors (available when success = false)\n */\n\n/** @private */\nConnection.prototype._toRecordResult = function(id, err) {\n  var error = {\n    statusCode: err.errorCode,\n    message: err.message\n  };\n  if (err.content) { error.content = err.content; } // preserve External id duplication message\n  if (err.fields) { error.fields = err.fields; } // preserve DML exception occurred fields\n  var result = {\n    success: false,\n    errors: [error]\n  };\n  if (id) { result.id = id; }\n  return result;\n};\n\n/**\n * Synonym of Connection#create()\n *\n * @method Connection#insert\n * @param {String} type - SObject Type\n * @param {Object|Array.<Object>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method Connection#create\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.insert =\nConnection.prototype.create = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(records) ?\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\n        this._createMany(type, records, options) :\n        this._createParallel(type, records, options)) :\n      this._createSingle(type, records, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._createSingle = function(type, record, options) {\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n  if (!sobjectType) {\n    return Promise.reject(new Error('No SObject Type defined in record'));\n  }\n  record = _.clone(record);\n  delete record.Id;\n  delete record.type;\n  delete record.attributes;\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType ].join('/');\n  return this.request({\n    method : 'POST',\n    url : url,\n    body : JSON.stringify(record),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/** @private */\nConnection.prototype._createParallel = function(type, records, options) {\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    records.map(function(record) {\n      return self._createSingle(type, record, options).catch(function(err) {\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toRecordResult(null, err);\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._createMany = function(type, records, options) {\n  if (records.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._createMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._createMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  records = _.map(records, function(record) {\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n    if (!sobjectType) {\n      return Promise.reject(new Error('No SObject Type defined in record'));\n    }\n    record = _.clone(record);\n    delete record.Id;\n    delete record.type;\n    record.attributes = { type : sobjectType };\n    return record;\n  });\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\n  return this.request({\n    method : 'POST',\n    url : url,\n    body : JSON.stringify({\n      allOrNone : options.allOrNone || false,\n      records : records\n    }),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/**\n * Update records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.update = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(records) ?\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\n        this._updateMany(type, records, options) :\n        this._updateParallel(type, records, options)) :\n      this._updateSingle(type, records, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._updateSingle = function(type, record, options) {\n  var id = record.Id;\n  if (!id) {\n    return Promise.reject(new Error('Record id is not found in record.'));\n  }\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n  if (!sobjectType) {\n    return Promise.reject(new Error('No SObject Type defined in record'));\n  }\n  record = _.clone(record);\n  delete record.Id;\n  delete record.type;\n  delete record.attributes;\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType, id ].join('/');\n  return this.request({\n    method : 'PATCH',\n    url : url,\n    body : JSON.stringify(record),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  }, {\n    noContentResponse: { id : id, success : true, errors : [] }\n  });\n};\n\n/** @private */\nConnection.prototype._updateParallel = function(type, records, options) {\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    records.map(function(record) {\n      return self._updateSingle(type, record, options).catch(function(err) {\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toRecordResult(record.Id, err);\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._updateMany = function(type, records, options) {\n  if (records.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._updateMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._updateMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  records = _.map(records, function(record) {\n    var id = record.Id;\n    if (!id) {\n      throw new Error('Record id is not found in record.');\n    }\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n    if (!sobjectType) {\n      throw new Error('No SObject Type defined in record');\n    }\n    record = _.clone(record);\n    delete record.Id;\n    record.id = id;\n    delete record.type;\n    record.attributes = { type : sobjectType };\n    return record;\n  });\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\n  return this.request({\n    method : 'PATCH',\n    url : url,\n    body : JSON.stringify({\n      allOrNone : options.allOrNone || false,\n      records : records\n    }),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/**\n * Upsert records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.upsert = function(type, records, extIdField, options, callback) {\n  // You can omit \"type\" argument, when the record includes type information.\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = extIdField;\n    extIdField = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(records);\n  records = isArray ? records : [ records ];\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(records, function(record) {\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n      var extId = record[extIdField];\n      record = _.clone(record);\n      delete record[extIdField];\n      delete record.type;\n      delete record.attributes;\n\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, extIdField, extId ].join('/');\n      return self.request({\n        method : 'PATCH',\n        url : url,\n        body : JSON.stringify(record),\n        headers : _.defaults(options.headers || {}, {\n          \"Content-Type\" : \"application/json\"\n        })\n      }, {\n        noContentResponse: { success : true, errors : [] }\n      })\n      .catch(function(err) {\n        // be aware that `allOrNone` option in upsert method will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (!isArray || options.allOrNone || !err.errorCode) { throw err; }\n        return self._toRecordResult(null, err);\n      })\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#delete\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#del\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method Connection#destroy\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype[\"delete\"] =\nConnection.prototype.del =\nConnection.prototype.destroy = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(ids) ?\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\n        this._destroyMany(type, ids, options) :\n        this._destroyParallel(type, ids, options)) :\n      this._destroySingle(type, ids, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._destroySingle = function(type, id, options) {\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\n  return this.request({\n    method : 'DELETE',\n    url : url,\n    headers: options.headers || null\n  }, {\n    noContentResponse: { id : id, success : true, errors : [] }\n  });\n};\n\n/** @private */\nConnection.prototype._destroyParallel = function(type, ids, options) {\n  if (ids.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    ids.map(function(id) {\n      return self._destroySingle(type, id, options).catch(function(err) {\n        // be aware that `allOrNone` option in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toRecordResult(id, err);\n      });\n    })\n  );\n};\n\n\n/** @private */\nConnection.prototype._destroyMany = function(type, ids, options) {\n  if (ids.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (ids.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._destroyMany(type, ids.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._destroyMany(type, ids.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  var url = [ this._baseUrl(), \"composite\", \"sobjects?ids=\" ].join('/') + ids.join(',');\n  if (options.allOrNone) {\n    url += '&allOrNone=true';\n  }\n  return this.request({\n    method : 'DELETE',\n    url : url,\n    headers: options.headers || null\n  });\n};\n\n/**\n * Execute search by SOSL\n *\n * @param {String} sosl - SOSL string\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.search = function(sosl, callback) {\n  var url = this._baseUrl() + \"/search?q=\" + encodeURIComponent(sosl);\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Result returned by describeSObject call\n *\n * @typedef {Object} DescribeSObjectResult\n */\n/**\n * Synonym of Connection#describe()\n *\n * @method Connection#describeSObject\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\n/**\n * Describe SObject metadata\n *\n * @method Connection#describe\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nConnection.prototype.describe =\nConnection.prototype.describeSObject = function(type, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"describe\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Result returned by describeGlobal call\n *\n * @typedef {Object} DescribeGlobalResult\n */\n/**\n * Describe global SObjects\n *\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\n * @returns {Promise.<DescribeGlobalResult>}\n */\nConnection.prototype.describeGlobal = function(callback) {\n  var url = this._baseUrl() + \"/sobjects\";\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Get SObject instance\n *\n * @param {String} type - SObject Type\n * @returns {SObject}\n */\nConnection.prototype.sobject = function(type) {\n  this.sobjects = this.sobjects || {};\n  var sobject = this.sobjects[type] =\n    this.sobjects[type] || new SObject(this, type);\n  return sobject;\n};\n\n/**\n * Get identity information of current user\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<IdentityInfo>} [callback] - Callback function\n * @returns {Promise.<IdentityInfo>}\n */\nConnection.prototype.identity = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var idUrl = this.userInfo && this.userInfo.url;\n  return Promise.resolve(\n    idUrl ?\n    { identity: idUrl } :\n    this.request({ method: 'GET', url: this._baseUrl(), headers: options.headers })\n  ).then(function(res) {\n    var url = res.identity;\n    return self.request({ method: 'GET', url: url });\n  }).then(function(res) {\n    self.userInfo = {\n      id: res.user_id,\n      organizationId: res.organization_id,\n      url: res.id\n    };\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef UserInfo\n * @prop {String} id - User ID\n * @prop {String} organizationId - Organization ID\n * @prop {String} url - Identity URL of the user\n */\n\n/**\n * Authorize (using oauth2 web server flow)\n *\n * @param {String} code - Authorization code\n * @param {Object} [params] - Optional parameters to send in token retrieval\n * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.authorize = function(code, params, callback) {\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.requestToken(code, params).then(function(res) {\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      refreshToken : res.refresh_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n\n/**\n * Login to Salesforce\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.login = function(username, password, callback) {\n  // register refreshDelegate for session expiration\n  this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, createUsernamePasswordRefreshFn(username, password));\n  if (this.oauth2 && this.oauth2.clientId && this.oauth2.clientSecret) {\n    return this.loginByOAuth2(username, password, callback);\n  } else {\n    return this.loginBySoap(username, password, callback);\n  }\n};\n\n/** @private **/\nfunction createUsernamePasswordRefreshFn(username, password) {\n  return function(conn, callback) {\n    conn.login(username, password, function(err) {\n      if (err) { return callback(err); }\n      callback(null, conn.accessToken);\n    });\n  };\n}\n\n/**\n * Login by OAuth2 username & password flow\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginByOAuth2 = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  return this.oauth2.authenticate(username, password).then(function(res) {\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * @private\n */\nfunction esc(str) {\n  return str && String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')\n                           .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/**\n * Login by SOAP web service API\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginBySoap = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header/>',\n      '<se:Body>',\n        '<login xmlns=\"urn:partner.soap.sforce.com\">',\n          '<username>' + esc(username) + '</username>',\n          '<password>' + esc(password) + '</password>',\n        '</login>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  var soapLoginEndpoint = [ this.loginUrl, \"services/Soap/u\", this.version ].join('/');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : soapLoginEndpoint,\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    var m;\n    if (response.statusCode >= 400) {\n      m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n    logger.debug(\"SOAP response = \" + response.body);\n    m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);\n    var serverUrl = m && m[1];\n    m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);\n    var sessionId = m && m[1];\n    m = response.body.match(/<userId>([^<]+)<\\/userId>/);\n    var userId = m && m[1];\n    m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);\n    var orgId = m && m[1];\n    var idUrl = soapLoginEndpoint.split('/').slice(0, 3).join('/');\n    idUrl += \"/id/\" + orgId + \"/\" + userId;\n    var userInfo = {\n      id: userId,\n      organizationId: orgId,\n      url: idUrl\n    };\n    self.initialize({\n      serverUrl: serverUrl.split('/').slice(0, 3).join('/'),\n      sessionId: sessionId,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userId + \", org id = \" + orgId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * Logout the current session \n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logout = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n\n  if (this._sessionType === \"oauth2\") {\n    return this.logoutByOAuth2(revoke, callback);\n  } else {\n    return this.logoutBySoap(revoke, callback);\n  }\n};\n\n/**\n * Logout the current session by revoking access token via OAuth2 session revoke\n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutByOAuth2 = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.revokeToken(revoke ? this.refreshToken : this.accessToken).then(function() {\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n  }).thenCall(callback);\n};\n\n\n/**\n * Logout the session by using SOAP web service API\n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutBySoap = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n  var self = this;\n  var logger = this._logger;\n\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header>',\n        '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',\n          '<sessionId>' + esc(revoke ? this.refreshToken : this.accessToken) + '</sessionId>',\n        '</SessionHeader>',\n      '</se:Header>',\n      '<se:Body>',\n        '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : [ this.instanceUrl, \"services/Soap/u\", this.version ].join('/'),\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    logger.debug(\"SOAP statusCode = \" + response.statusCode + \", response = \" + response.body);\n    if (response.statusCode >= 400) {\n      var m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n\n  }).thenCall(callback);\n};\n\n/**\n * List recently viewed records\n *\n * @param {String} [type] - SObject type\n * @param {Number} [limit] - Limit num to fetch\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.recent = function(type, limit, callback) {\n  if (!_.isString(type)) {\n    callback = limit;\n    limit = type;\n    type = undefined;\n  }\n  if (!_.isNumber(limit)) {\n    callback = limit;\n    limit = undefined;\n  }\n  var url;\n  if (type) {\n    url = [ this._baseUrl(), \"sobjects\", type ].join('/');\n    return this.request(url).then(function(res) {\n      return limit ? res.recentItems.slice(0, limit) : res.recentItems;\n    }).thenCall(callback);\n  } else {\n    url = this._baseUrl() + \"/recent\";\n    if (limit) {\n      url += \"?limit=\" + limit;\n    }\n    return this.request(url).thenCall(callback);\n  }\n\n};\n\n/**\n * @typedef {Object} UpdatedRecordsInfo\n * @prop {String} latestDateCovered - The timestamp of the last date covered.\n * @prop {Array.<String>} ids - Updated record IDs.\n */\n\n/**\n * Retrieve updated records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nConnection.prototype.updated = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"updated\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} DeletedRecordsInfo\n * @prop {String} earliestDateAvailable - The timestamp of the earliest date available\n * @prop {String} latestDateCovered - The timestamp of the last date covered\n * @prop {Array.<Object>} deletedRecords - Updated records\n * @prop {String} deletedRecords.id - Record ID\n * @prop {String} deletedRecords.deletedDate - The timestamp when this record was deleted\n */\n\n/**\n * Retrieve deleted records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nConnection.prototype.deleted = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"deleted\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} TabsInfo - See the API document for detail structure\n */\n\n/**\n * Returns a list of all tabs\n *\n * @param {Callback.<TabsInfo>} [callback] - Callback function\n * @returns {Promise.<TabsInfo>}\n */\nConnection.prototype.tabs = function(callback) {\n  var url = [ this._baseUrl(), \"tabs\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} LimitsInfo - See the API document for detail structure\n */\n\n/**\n * Returns curren system limit in the organization\n *\n * @param {Callback.<LimitsInfo>} [callback] - Callback function\n * @returns {Promise.<LimitsInfo>}\n */\nConnection.prototype.limits = function(callback) {\n  var url = [ this._baseUrl(), \"limits\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} ThemeInfo - See the API document for detail structure\n */\n\n/**\n * Returns a theme info\n *\n * @param {Callback.<ThemeInfo>} [callback] - Callback function\n * @returns {Promise.<ThemeInfo>}\n */\nConnection.prototype.theme = function(callback) {\n  var url = [ this._baseUrl(), \"theme\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Returns all registered global quick actions\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nConnection.prototype.quickActions = function(callback) {\n  return this.request(\"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified global quick aciton\n *\n * @param {String} actionName - Name of the global quick action\n * @returns {QuickAction}\n */\nConnection.prototype.quickAction = function(actionName) {\n  return new QuickAction(this, \"/quickActions/\" + actionName);\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./cache\":8,\"./core\":10,\"./http-api\":13,\"./logger\":14,\"./oauth2\":15,\"./process\":16,\"./promise\":17,\"./query\":18,\"./quick-action\":19,\"./sobject\":24,\"./transport\":26,\"buffer\":30,\"events\":37,\"inherits\":39,\"lodash/core\":43}],10:[function(require,module,exports){\n/**\n * @file JSforce Core\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar jsforce = module.exports = new EventEmitter();\njsforce.VERSION = require('./VERSION');\njsforce.Connection = require('./connection');\njsforce.OAuth2 = require('./oauth2');\njsforce.Date = jsforce.SfDate = require(\"./date\");\njsforce.RecordStream = require('./record-stream');\njsforce.Promise = require('./promise');\njsforce.require = require('./require');\n\n},{\"./VERSION\":2,\"./connection\":9,\"./date\":12,\"./oauth2\":15,\"./promise\":17,\"./record-stream\":20,\"./require\":22,\"events\":37}],11:[function(require,module,exports){\n'use strict';\n\nvar _ = require('lodash/core'),\n    csvParse = require('csv-parse/lib/es5'),\n    csvParseSync = require('csv-parse/lib/es5/sync'),\n    csvStringify = require('csv-stringify'),\n    csvStringifySync = require('csv-stringify/lib/sync');\n\n/**\n * @private\n */\nfunction parseCSV(str, options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParseSync(str, options);\n}\n\n/**\n * @private\n */\nfunction toCSV(records, options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringifySync(records, options);\n}\n\n/**\n * @private\n */\nfunction parseCSVStream(options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParse(options);\n}\n\n/**\n * @private\n */\nfunction serializeCSVStream(options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringify(options);\n}\n\n\n/**\n * @protected\n */\nmodule.exports = {\n  parseCSV: parseCSV,\n  toCSV: toCSV,\n  parseCSVStream: parseCSVStream,\n  serializeCSVStream: serializeCSVStream\n};\n\n},{\"csv-parse/lib/es5\":33,\"csv-parse/lib/es5/sync\":34,\"csv-stringify\":35,\"csv-stringify/lib/sync\":36,\"lodash/core\":43}],12:[function(require,module,exports){\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A date object to keep Salesforce date literal\n *\n * @class\n * @constructor\n * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm\n */\nvar SfDate = module.exports = function(literal) {\n  this._literal = literal;\n};\n\n/**\n * Returns literal when converted to string\n *\n * @override\n */\nSfDate.prototype.toString =\nSfDate.prototype.toJSON = function() { return this._literal; };\n\n\n/** @private **/\nfunction zeropad(n) { return (n<10 ? \"0\" : \"\") + n; }\n\n/**\n * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 date format\n */\nSfDate.toDateLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getFullYear();\n  var mm = date.getMonth()+1;\n  var dd = date.getDate();\n  var dstr = [ yy, zeropad(mm), zeropad(dd) ].join(\"-\");\n  return new SfDate(dstr);\n};\n\n/**\n * Convert JavaScript date object to ISO8601 DateTime format\n * (e.g. 2012-10-31T12:34:56Z)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 datetime format\n */\nSfDate.toDateTimeLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getUTCFullYear();\n  var mm = date.getUTCMonth()+1;\n  var dd = date.getUTCDate();\n  var hh = date.getUTCHours();\n  var mi = date.getUTCMinutes();\n  var ss = date.getUTCSeconds();\n  var dtstr =\n    [ yy, zeropad(mm), zeropad(dd) ].join(\"-\") + \"T\" +\n    [ zeropad(hh), zeropad(mi), zeropad(ss) ].join(\":\") + \"Z\";\n  return new SfDate(dtstr);\n};\n\n/**\n * Parse IS08601 date(time) formatted string and return date instance\n *\n * @param {String} str\n * @returns {Date}\n */\nSfDate.parseDate = function(str) {\n  var d = new Date();\n  var regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([\\+\\-])([\\d]{2}):?([\\d]{2})))?$/;\n  var m = str.match(regexp);\n  if (m) {\n    d = new Date(0);\n    if (!m[4]) {\n      d.setFullYear(parseInt(m[1], 10));\n      d.setDate(parseInt(m[3], 10));\n      d.setMonth(parseInt(m[2], 10) - 1);\n      d.setHours(0);\n      d.setMinutes(0);\n      d.setSeconds(0);\n      d.setMilliseconds(0);\n    } else {\n      d.setUTCFullYear(parseInt(m[1], 10));\n      d.setUTCDate(parseInt(m[3], 10));\n      d.setUTCMonth(parseInt(m[2], 10) - 1);\n      d.setUTCHours(parseInt(m[5], 10));\n      d.setUTCMinutes(parseInt(m[6], 10));\n      d.setUTCSeconds(parseInt(m[7], 10));\n      d.setUTCMilliseconds(parseInt(m[9] || '0', 10));\n      if (m[10] && m[10] !== 'Z') {\n        var offset = parseInt(m[12],10) * 60 + parseInt(m[13], 10);\n        d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 +d.getTime());\n      }\n    }\n    return d;\n  } else {\n    throw new Error(\"Invalid date format is specified : \" + str);\n  }\n};\n\n/*\n * Pre-defined Salesforce Date Literals\n */\nvar SfDateLiterals = {\n  YESTERDAY: 1,\n  TODAY: 1,\n  TOMORROW: 1,\n  LAST_WEEK: 1,\n  THIS_WEEK: 1,\n  NEXT_WEEK: 1,\n  LAST_MONTH: 1,\n  THIS_MONTH: 1,\n  NEXT_MONTH: 1,\n  LAST_90_DAYS: 1,\n  NEXT_90_DAYS: 1,\n  LAST_N_DAYS: 2,\n  NEXT_N_DAYS: 2,\n  NEXT_N_WEEKS: 2,\n  LAST_N_WEEKS: 2,\n  NEXT_N_MONTHS: 2,\n  LAST_N_MONTHS: 2,\n  THIS_QUARTER: 1,\n  LAST_QUARTER: 1,\n  NEXT_QUARTER: 1,\n  NEXT_N_QUARTERS: 2,\n  LAST_N_QUARTERS: 2,\n  THIS_YEAR: 1,\n  LAST_YEAR: 1,\n  NEXT_YEAR: 1,\n  NEXT_N_YEARS: 2,\n  LAST_N_YEARS: 2,\n  THIS_FISCAL_QUARTER: 1,\n  LAST_FISCAL_QUARTER: 1,\n  NEXT_FISCAL_QUARTER: 1,\n  NEXT_N_FISCAL_QUARTERS:2,\n  LAST_N_FISCAL_QUARTERS:2,\n  THIS_FISCAL_YEAR:1,\n  LAST_FISCAL_YEAR:1,\n  NEXT_FISCAL_YEAR:1,\n  NEXT_N_FISCAL_YEARS: 2,\n  LAST_N_FISCAL_YEARS: 2\n};\n\nfor (var literal in SfDateLiterals) {\n  var type = SfDateLiterals[literal];\n  SfDate[literal] =\n   type === 1 ? new SfDate(literal) : createLiteralBuilder(literal);\n}\n\n/** @private **/\nfunction createLiteralBuilder(literal) {\n  return function(num) { return new SfDate(literal + \":\" + num); };\n}\n\n},{\"lodash/core\":43}],13:[function(require,module,exports){\n'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    _ = require('lodash/core'),\n    Promise = require('./promise');\n\n/**\n * HTTP based API class with authorization hook\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Connection} conn - Connection object\n * @param {Object} [options] - Http API Options\n * @param {String} [options.responseType] - Overriding content mime-type in response\n * @param {Transport} [options.transport] - Transport for http api\n * @param {Object} [options.noContentResponse] - Alternative response when no content returned in response (= HTTP 204)\n */\nvar HttpApi = function(conn, options) {\n  options = options || {};\n  this._conn = conn;\n  this.on('resume', function(err) { conn.emit('resume', err); });\n  this._responseType = options.responseType;\n  this._transport = options.transport || conn._transport;\n  this._noContentResponse = options.noContentResponse;\n};\n\ninherits(HttpApi, events.EventEmitter);\n\n/**\n * Callout to API endpoint using http\n *\n * @param {Object} request - Http Request object\n * @param {String} request.url - Endpoint URL to request\n * @param {String} request.method - Http method for request\n * @param {Object} [request.headers] - Http request headers in hash object\n * @param {Callback.<Object>} callback - Callback function\n * @returns {Promise.<Object>} -\n */\nHttpApi.prototype.request = function(request, callback) {\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  var refreshDelegate = this.getRefreshDelegate();\n  // remember previous instance url in case it changes after a refresh\n  var lastInstanceUrl = conn.instanceUrl;\n\n  var deferred = Promise.defer();\n\n  var onResume = function(err) {\n    if (err) {\n      deferred.reject(err);\n      return;\n    }\n    // check to see if the token refresh has changed the instance url\n    if(lastInstanceUrl !== conn.instanceUrl){\n      // if the instance url has changed\n      // then replace the current request urls instance url fragment\n      // with the updated instance url\n      request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);\n    }\n\n    self.request(request).then(function(response) {\n      deferred.resolve(response);\n    }, function(err) {\n      deferred.reject(err);\n    });\n  };\n\n  if (refreshDelegate && refreshDelegate._refreshing) {\n    refreshDelegate.once('resume', onResume);\n    return deferred.promise.thenCall(callback);\n  }\n\n  // hook before sending\n  self.beforeSend(request);\n\n  self.emit('request', request);\n  logger.debug(\"<request> method=\" + request.method + \", url=\" + request.url);\n  var requestTime = Date.now();\n\n  return this._transport.httpRequest(request).then(function(response) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.debug(\"<response> status=\" + response.statusCode + \", url=\" + request.url);\n\n    self.emit('response', response);\n    // Refresh token if session has been expired and requires authentication\n    // when session refresh delegate is available\n    if (self.isSessionExpired(response) && refreshDelegate) {\n      refreshDelegate.refresh(requestTime, onResume);\n      return deferred.promise;\n    }\n    if (self.isErrorResponse(response)) {\n      var err = self.getError(response);\n      throw err;\n    }\n    return self.getResponseBody(response);\n  }, function(err) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.error(err);\n    throw err;\n  })\n  .thenCall(callback);\n};\n\n/**\n * @protected\n */\nHttpApi.prototype.getRefreshDelegate = function() {\n  return this._conn._refreshDelegate;\n};\n\n/**\n *\n * @protected\n */\nHttpApi.prototype.beforeSend = function(request) {\n  request.headers = request.headers || {};\n  if (this._conn.accessToken) {\n    request.headers.Authorization = \"Bearer \" + this._conn.accessToken;\n  }\n  if (this._conn.callOptions) {\n    var callOptions = [];\n    for (var name in this._conn.callOptions) {\n      callOptions.push(name + \"=\" + this._conn.callOptions[name]);\n    }\n    request.headers[\"Sforce-Call-Options\"] = callOptions.join(', ');\n  }\n};\n\n/**\n * Detect response content mime-type\n * @protected\n */\nHttpApi.prototype.getResponseContentType = function(response) {\n  return this._responseType || response.headers && response.headers[\"content-type\"];\n};\n\n/**\n *\n */\nHttpApi.prototype.parseResponseBody = function(response) {\n  var contentType = this.getResponseContentType(response);\n  var parseBody = /^(text|application)\\/xml(;|$)/.test(contentType) ? parseXML :\n         /^application\\/json(;|$)/.test(contentType) ? parseJSON :\n         /^text\\/csv(;|$)/.test(contentType) ? parseCSV :\n         parseText;\n  try {\n    return parseBody(response.body);\n  } catch(e) {\n    return response.body;\n  }\n};\n\n/**\n * Get response body\n * @protected\n */\nHttpApi.prototype.getResponseBody = function(response) {\n  if (response.statusCode === 204) { // No Content\n    return this._noContentResponse;\n  }\n  var body = this.parseResponseBody(response);\n  var err;\n  if (this.hasErrorInResponseBody(body)) {\n    err = this.getError(response, body);\n    throw err;\n  }\n  if (response.statusCode === 300) { // Multiple Choices\n    err = new Error('Multiple records found');\n    err.name = \"MULTIPLE_CHOICES\";\n    err.content = body;\n    throw err;\n  }\n  return body;\n};\n\n/** @private */\nfunction parseJSON(str) {\n  return JSON.parse(str);\n}\n\n/** @private */\nfunction parseXML(str) {\n  var ret = {};\n  require('xml2js').parseString(str, { explicitArray: false }, function(err, result) {\n    ret = { error: err, result : result };\n  });\n  if (ret.error) { throw ret.error; }\n  return ret.result;\n}\n\n/** @private */\nfunction parseCSV(str) {\n  return require('./csv').parseCSV(str);\n}\n\n/** @private */\nfunction parseText(str) { return str; }\n\n\n/**\n * Detect session expiry\n * @protected\n */\nHttpApi.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 401;\n};\n\n/**\n * Detect error response\n * @protected\n */\nHttpApi.prototype.isErrorResponse = function(response) {\n  return response.statusCode >= 400;\n};\n\n/**\n * Detect error in response body\n * @protected\n */\nHttpApi.prototype.hasErrorInResponseBody = function(body) {\n  return false;\n};\n\n/**\n * Parsing error message in response\n * @protected\n */\nHttpApi.prototype.parseError = function(body) {\n  var errors = body;\n  return _.isArray(errors) ? errors[0] : errors;\n};\n\n/**\n * Get error message in response\n * @protected\n */\nHttpApi.prototype.getError = function(response, body) {\n  var error;\n  try {\n    error = this.parseError(body || this.parseResponseBody(response));\n  } catch(e) {}\n  error = _.isObject(error) && _.isString(error.message) ? error : {\n    errorCode: 'ERROR_HTTP_' + response.statusCode,\n    message : response.body\n  };\n  var err = new Error(error.message);\n  err.name = error.errorCode;\n  for (var key in error) { err[key] = error[key]; }\n  return err;\n};\n\n/*-------------------------------------------------------------------------*/\n\n/**\n * @protected\n */\nvar SessionRefreshDelegate = function(conn, refreshFn) {\n  this._conn = conn;\n  this._refreshFn = refreshFn;\n  this._refreshing = false;\n};\n\ninherits(SessionRefreshDelegate, events.EventEmitter);\n\n/**\n * Refresh access token\n * @private\n */\nSessionRefreshDelegate.prototype.refresh = function(since, callback) {\n  // Callback immediately When refreshed after designated time\n  if (this._lastRefreshedAt > since) { return callback(); }\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  self.once('resume', callback);\n  if (self._refreshing) { return; }\n  logger.debug(\"<refresh token>\");\n  self._refreshing = true;\n  return self._refreshFn(conn, function(err, accessToken, res) {\n    if (!err) {\n      logger.debug(\"Connection refresh completed.\");\n      conn.accessToken = accessToken;\n      conn.emit(\"refresh\", accessToken, res);\n    }\n    self._lastRefreshedAt = Date.now();\n    self._refreshing = false;\n    self.emit('resume', err);\n  });\n};\n\n\n/**\n *\n */\nHttpApi.SessionRefreshDelegate = SessionRefreshDelegate;\nmodule.exports = HttpApi;\n\n},{\"./csv\":11,\"./promise\":17,\"events\":37,\"inherits\":39,\"lodash/core\":43,\"xml2js\":78}],14:[function(require,module,exports){\n'use strict';\n\n/**\n * @protected\n * @class\n * @constructor\n * @param {String|Number} logLevel - Log level\n */\nvar Logger = module.exports = function(logLevel) {\n  if (typeof logLevel === 'string') {\n    logLevel = LogLevels[logLevel];\n  }\n  if (!logLevel) {\n    logLevel = LogLevels.INFO;\n  }\n  this._logLevel = logLevel;\n};\n\n/**\n * @memberof Logger\n */\nvar LogLevels = Logger.LogLevels = {\n  \"DEBUG\" : 1,\n  \"INFO\" : 2,\n  \"WARN\" : 3,\n  \"ERROR\" : 4,\n  \"FATAL\" : 5\n};\n\n/**\n * Output log\n *\n * @param {String} level - Logging target level\n * @param {String} message - Message to log\n */\nLogger.prototype.log = function(level, message) {\n  if (this._logLevel <= level) {\n    if (level < LogLevels.ERROR) {\n      console.log(message);\n    } else {\n      console.error(message);\n    }\n  }\n};\n\nfor (var level in LogLevels) {\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\n}\n\nfunction createLoggerFunction(level) {\n  return function(message) { this.log(level, message); };\n}\n\n},{}],15:[function(require,module,exports){\n/**\n * @file Manages Salesforce OAuth2 operations\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar querystring = require('querystring'),\n    _ = require('lodash/core'),\n    Transport = require('./transport');\n\nvar defaults = {\n  loginUrl : \"https://login.salesforce.com\"\n};\n\n/**\n * OAuth2 class\n *\n * @class\n * @constructor\n * @param {Object} options - OAuth2 config options\n * @param {String} [options.loginUrl] - Salesforce login server URL\n * @param {String} [options.authzServiceUrl] - OAuth2 authorization service URL. If not specified, it generates from default by adding to login server URL.\n * @param {String} [options.tokenServiceUrl] - OAuth2 token service URL. If not specified it generates from default by adding to login server URL.\n * @param {String} options.clientId - OAuth2 client ID.\n * @param {String} [options.clientSecret] - OAuth2 client secret (This is optional for public client).\n * @param {String} options.redirectUri - URI to be callbacked from Salesforce OAuth2 authorization service.\n */\nvar OAuth2 = module.exports = function(options) {\n  if (options.authzServiceUrl && options.tokenServiceUrl) {\n    this.loginUrl = options.authzServiceUrl.split('/').slice(0, 3).join('/');\n    this.authzServiceUrl = options.authzServiceUrl;\n    this.tokenServiceUrl = options.tokenServiceUrl;\n    this.revokeServiceUrl = options.revokeServiceUrl;\n  } else {\n    this.loginUrl = options.loginUrl || defaults.loginUrl;\n    this.authzServiceUrl = this.loginUrl + \"/services/oauth2/authorize\";\n    this.tokenServiceUrl = this.loginUrl + \"/services/oauth2/token\";\n    this.revokeServiceUrl = this.loginUrl + \"/services/oauth2/revoke\";\n  }\n  this.clientId = options.clientId;\n  this.clientSecret = options.clientSecret;\n  this.redirectUri = options.redirectUri;\n  if (options.proxyUrl) {\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\n  } else if (options.httpProxy) {\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\n  } else {\n    this._transport = new Transport();\n  }\n};\n\n\n\n/**\n *\n */\n_.extend(OAuth2.prototype, /** @lends OAuth2.prototype **/ {\n\n  /**\n   * Get Salesforce OAuth2 authorization page URL to redirect user agent.\n   *\n   * @param {Object} params - Parameters\n   * @param {String} [params.scope] - Scope values in space-separated string\n   * @param {String} [params.state] - State parameter\n   * @param {String} [params.code_challenge] - Code challenge value (RFC 7636 - Proof Key of Code Exchange)\n   * @returns {String} Authorization page URL\n   */\n  getAuthorizationUrl : function(params) {\n    params = _.extend({\n      response_type : \"code\",\n      client_id : this.clientId,\n      redirect_uri : this.redirectUri\n    }, params || {});\n    return this.authzServiceUrl +\n      (this.authzServiceUrl.indexOf('?') >= 0 ? \"&\" : \"?\") +\n      querystring.stringify(params);\n  },\n\n  /**\n   * @typedef TokenResponse\n   * @type {Object}\n   * @property {String} access_token\n   * @property {String} refresh_token\n   */\n\n  /**\n   * OAuth2 Refresh Token Flow\n   *\n   * @param {String} refreshToken - Refresh token\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  refreshToken : function(refreshToken, callback) {\n    var params = {\n      grant_type : \"refresh_token\",\n      refresh_token : refreshToken,\n      client_id : this.clientId\n    };\n    if (this.clientSecret) {\n      params.client_secret = this.clientSecret;\n    }\n    return this._postParams(params, callback);\n  },\n\n  /**\n   * OAuth2 Web Server Authentication Flow (Authorization Code)\n   * Access Token Request\n   *\n   * @param {String} code - Authorization code\n   * @param {Object} [params] - Optional parameters to send in token retrieval\n   * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  requestToken : function(code, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n    params = _.extend({\n      grant_type : \"authorization_code\",\n      code : code,\n      client_id : this.clientId,\n      redirect_uri : this.redirectUri\n    }, params || {});\n    if (this.clientSecret) {\n      params.client_secret = this.clientSecret;\n    }\n    return this._postParams(params, callback);\n  },\n\n  /**\n   * OAuth2 Username-Password Flow (Resource Owner Password Credentials)\n   *\n   * @param {String} username - Salesforce username\n   * @param {String} password - Salesforce password\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  authenticate : function(username, password, callback) {\n    return this._postParams({\n      grant_type : \"password\",\n      username : username,\n      password : password,\n      client_id : this.clientId,\n      client_secret : this.clientSecret,\n      redirect_uri : this.redirectUri\n    }, callback);\n  },\n\n  /**\n   * OAuth2 Revoke Session or API Token\n   *\n   * @param {String} token - Access or Refresh token to revoke. Passing in the Access token revokes the session. Passing in the Refresh token revokes API Access.\n   * @param {Callback.<undefined>} [callback] - Callback function\n   * @returns {Promise.<undefined>}\n   */\n  revokeToken : function(token, callback) {\n    return this._transport.httpRequest({\n      method : 'POST',\n      url : this.revokeServiceUrl,\n      body: querystring.stringify({ token: token }),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(function(response) {\n      if (response.statusCode >= 400) {\n        var res = querystring.parse(response.body);\n        if (!res || !res.error) {\n          res = { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        }\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n    }).thenCall(callback);\n  },\n\n  /**\n   * @private\n   */\n  _postParams : function(params, callback) {\n    return this._transport.httpRequest({\n      method : 'POST',\n      url : this.tokenServiceUrl,\n      body : querystring.stringify(params),\n      headers : {\n        \"content-type\" : \"application/x-www-form-urlencoded\"\n      }\n    }).then(function(response) {\n      var res;\n      try {\n        res = JSON.parse(response.body);\n      } catch(e) {}\n      if (response.statusCode >= 400) {\n        res = res || { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n      return res;\n    }).thenCall(callback);\n  }\n\n});\n\n},{\"./transport\":26,\"lodash/core\":43,\"querystring\":51}],16:[function(require,module,exports){\n/**\n * @file Process class to manage/run workflow rule and approval process\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core'),\n    Promise = require('./promise'),\n    Conneciton = require('./connection');\n\n/**\n * A class which manages process rules and approval processes\n *\n * @class\n * @param {Connection} conn - Connection object\n */\nvar Process = module.exports = function(conn) {\n  /**\n   * Object which mangages process rules\n   * @member {Process~ProcessRule} Process#rule\n   */\n  this.rule = new ProcessRule(conn);\n  /**\n   * Object which mangages approval process\n   * @member {Process~ApprovalProcess} Process#approval\n   */\n  this.approval = new ApprovalProcess(conn);\n};\n\n/**\n * A class which manages process (workflow) rules\n *\n * @class Process~ProcessRule\n * @param {Connection} conn - Connection object\n */\nvar ProcessRule = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ProcessRuleDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of process rule definition\n * @prop {String} object - SObject name which process rule is defined\n */\n\n/**\n * Get all process rule definitions registered to sobjects\n *\n * @method Process~ProcessRule#list\n * @param {Callback.<Map.<String, Array.<Process~ProcessRuleDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<Process~ProcessRuleDefinition>>>}\n */\nProcessRule.prototype.list = function(callback) {\n  return this._conn.request(\"/process/rules\").then(function(res) {\n    return res.rules;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} Process~ProcessRuleTriggerResult\n * @prop {Boolean} success - Is process rule trigger succeeded or not\n * @prop {Array.<Object>} errors - Array of errors returned if the request failed\n */\n\n/**\n * Trigger process rule for given entities\n *\n * @method Process~ProcessRule#trigger\n * @param {String|Array.<String>} contextIds - Entity ID(s) to trigger workflow process\n * @param {Callback.<Process~ProcessRuleTriggerResult>} [callback] - Callback function\n * @returns {Promise.<Process~ProcessRuleTriggerResult>}\n */\nProcessRule.prototype.trigger = function(contextIds, callback) {\n  contextIds = _.isArray(contextIds) ? contextIds : [ contextIds ];\n  return this._conn.request({\n    method: \"POST\",\n    url: \"/process/rules/\",\n    body: JSON.stringify({\n      contextIds: contextIds\n    }),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).thenCall(callback);\n};\n\n/**\n * A class which manages approval processes\n *\n * @class Process~ApprovalProcess\n * @param {Connection} conn - Connection object\n */\nvar ApprovalProcess = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of approval process definition\n * @prop {String} object - SObject name which approval process is defined\n * @prop {Number} sortOrder - Processing order of approval in SObject\n */\n/**\n * Get all approval process definitions registered to sobjects\n *\n * @method Process~ApprovalProcess#list\n * @param {Callback.<Map.<String, Array.<ApprovalProcessDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<ApprovalProcessDefinition>>>}\n */\nApprovalProcess.prototype.list = function(callback) {\n  return this._conn.request(\"/process/approvals\").then(function(res) {\n    return res.approvals;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessRequestResult\n * @prop {Boolean} success - True if processing or approval completed successfully\n * @prop {Array.<Object>} errors - The set of errors returned if the request failed\n * @prop {Array.<String>} actorIds - IDs of the users who are currently assigned to this approval step\n * @prop {String} entityId - Object being processed\n * @prop {String} instanceId - ID of the ProcessInstance associated with the object submitted for processing\n * @prop {String} instanceStatus - Status of the current process instance (not an individual object but the entire process instance)\n * @prop {Array.<String>} newWorkItemIds - Case-insensitive IDs that point to ProcessInstanceWorkitem items (the set of pending approval requests)\n */\n\n/**\n * Send bulk requests for approval process\n *\n * @method Process~ApprovalProcess#request\n * @param {Array.<ApprovalProcessRequest>} requests - Array of approval process request to send\n * @param {Callback.<Array.<ApprovalProcessRequestResult>>} - Callback function\n * @param {Promise.<Array.<ApprovalProcessRequestResult>>}\n */\nApprovalProcess.prototype.request = function(requests, callback) {\n  requests = requests.map(function(req) {\n    return req._request ? req._request : req;\n  });\n  return this._conn.request({\n    method: 'POST',\n    url: '/process/approvals',\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({ requests: requests })\n  }).thenCall(callback);\n};\n\n/**\n * Create approval process request\n *\n * @private\n */\nApprovalProcess.prototype._createRequest = function(actionType, contextId, comments, options, callback) {\n  if (typeof comments === \"function\") {\n    callback = comments;\n    options = null;\n    comments = null;\n  }\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var request = {\n    actionType: actionType,\n    contextId: contextId,\n    comments: comments\n  };\n  _.extend(request, options);\n  return new ApprovalProcessRequest(this, request).thenCall(callback);\n};\n\n/**\n * Submit approval request for an item\n *\n * @method Process~ApprovalProcess#submit\n * @param {String} contextId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.submit = function(contextId, comments, options, callback) {\n  return this._createRequest(\"Submit\", contextId, comments, options, callback);\n};\n\n/**\n * Approve approval request for an item\n *\n * @method Process~ApprovalProcess#approve\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.approve = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Approve\", workitemId, comments, options, callback);\n};\n\n/**\n * Reject approval request for an item\n *\n * @method Process~ApprovalProcess#reject\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.reject = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Reject\", workitemId, comments, options, callback);\n};\n\n/**\n * A class representing approval process request\n *\n * @protected\n * @class Process~ApprovalProcessRequest\n * @implements {Promise.<Process~ApprovalProcessRequestResult>}\n * @param {Process~ApprovalProcess} process - ApprovalProcess\n * @param {Object} request - Request parameters\n * @param {String} request.actionType - Represents the kind of action to take: Submit, Approve, or Reject\n * @param {String} request.contextId - ID of the item that is being acted upon\n * @param {String} request.comments - Comment to add to the history step associated with this request\n * @param {Array.<String>} [request.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [request.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [request.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n */\nvar ApprovalProcessRequest = function(process, request) {\n  this._process = process;\n  this._request = request;\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * @method Process~ApprovalProcessRequest#then\n */\nApprovalProcessRequest.prototype.then = function(onResolve, onReject) {\n  if (!this._promise) {\n    this._promise = this._process.request([ this ]).then(function(rets) {\n      return rets[0];\n    });\n  }\n  this._promise.then(onResolve, onReject);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @method Process~ApprovalProcessRequest#thenCall\n */\nApprovalProcessRequest.prototype.thenCall = function(callback) {\n  return callback ? this.then(function(res) {\n    callback(null, res);\n  }, function(err) {\n    callback(err);\n  }) :\n  this;\n};\n\n},{\"./connection\":9,\"./promise\":17,\"lodash/core\":43}],17:[function(require,module,exports){\n(function (process){\n/*global process*/\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * @callback ResolvedCallback\n * @param {T} result - Resolved value\n * @returns {S}\n * @template T,S\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback ResolveCallback\n * @param {T} result\n * @template T\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback PromiseCallback\n * @param {ResolveCallback.<T>} resolve\n * @param {RejectCallback} reject\n * @template T\n */\n\n/**\n * Promise class with a little extension\n *\n * @class Promise\n * @constructor\n * @param {PromiseCallback.<T>}\n * @template T\n */\nvar Promise = require('promise/lib/es6-extensions');\n\n/**\n * The \"then\" method from the Promises/A+ specification\n *\n * @method Promise#then\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\n\n/**\n * Call \"then\" using given node-style callback function.\n * This is basically same as \"nodeify\" except that it always return the original promise\n *\n * @method Promise#thenCall\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Promise}\n */\nPromise.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/**\n * A sugar method, equivalent to promise.then(undefined, onRejected).\n *\n * @method Promise#catch\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\n\n/**\n * Synonym of Promise#catch\n *\n * @method Promise#fail\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\nPromise.prototype.fail = Promise.prototype['catch'];\n\n/**\n * Returns resolving promise with given reason\n *\n * @method Promise.resolve\n * @param {*} result - Resolved value\n * @returns {Promise}\n */\n\n/**\n * Returns rejecting promise with given reason\n *\n * @method Promise.reject\n * @param {Error} reason - Rejecting reason\n * @returns {Promise}\n */\n\n/**\n * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise,\n * or is rejected with the same rejection reason as the first promise to be rejected.\n *\n * @method Promise.all\n * @param {Array.<Promise.<*>|*>} promises\n * @returns {Promise.<Array.<*>>}\n */\n\n/**\n * Returns a deferred object\n *\n * @method Promise.defer\n * @returns {Deferred}\n */\nPromise.defer = function() {\n  return new Deferred();\n};\n\n/**\n * Deferred object\n *\n * @protected\n * @constructor\n */\nvar Deferred = function() {\n  var self = this;\n  this.promise = new Promise(function(resolve, reject) {\n    self.resolve = resolve;\n    self.reject = reject;\n  });\n};\n\n/**\n * Resolve promise\n * @method Deferred#resolve\n * @param {*} result - Resolving result\n */\n\n/**\n * Reject promise\n * @method Deferred#reject\n * @param {Error} error - Rejecting reason\n */\n\n/**\n *\n */\nmodule.exports = Promise;\n\n}).call(this,require('_process'))\n\n},{\"_process\":46,\"lodash/core\":43,\"promise/lib/es6-extensions\":48}],18:[function(require,module,exports){\n(function (process){\n/*global process*/\n/**\n * @file Manages query for records in Salesforce\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    stream = require('readable-stream'),\n    _      = require('lodash/core'),\n    Promise = require('./promise'),\n    SfDate = require(\"./date\"),\n    SOQLBuilder = require(\"./soql-builder\"),\n    RecordStream = require(\"./record-stream\");\n\n/**\n * Query\n *\n * @protected\n * @class\n * @extends {stream.Readable}\n * @implements Promise.<T>\n * @template T\n * @param {Connection} conn - Connection object\n * @param {Object|String} config - Query config object or SOQL string\n * @param {Object} [options] - Default query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n */\nvar Query = module.exports = function(conn, config, options) {\n  Query.super_.call(this, { objectMode: true });\n\n  this._conn = conn;\n  if (_.isString(config)) { // if query config is string, it is given in SOQL.\n    this._soql = config;\n  } else if (config.locator && config.locator.indexOf(\"/\") >= 0) { // if locator given in url for next records\n    this._locator = config.locator.split(\"/\").pop();\n  } else {\n    this._config = config;\n    this.select(config.fields);\n    if (config.includes) {\n      this.include(config.includes);\n    }\n    if (config.sort) {\n      this.sort(config.sort);\n    }\n  }\n  this._options = _.defaults(options || {}, {\n    maxFetch: 10000,\n    autoFetch: false,\n    scanAll: false,\n    responseTarget: ResponseTargets.QueryResult\n  });\n  this._executed = false;\n  this._finished = false;\n  this._chaining = false;\n\n  this._deferred = Promise.defer();\n\n  var self = this;\n};\n\ninherits(Query, stream.Readable);\n\n/**\n * Select fields to include in the returning result\n *\n * @param {Object|Array.<String>|String} fields - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @returns {Query.<T>}\n */\nQuery.prototype.select = function(fields) {\n  if (this._soql) {\n    throw Error(\"Cannot set select fields for the query which has already built SOQL.\");\n  }\n  fields = fields || '*';\n  if (_.isString(fields)) {\n    fields = fields.split(/\\s*,\\s*/);\n  } else if (_.isObject(fields) && !_.isArray(fields)) {\n    var _fields =  [];\n    for (var k in fields) {\n      if (fields[k]) { _fields.push(k); }\n    }\n    fields = _fields;\n  }\n  this._config.fields = fields;\n  return this;\n};\n\n/**\n * Set query conditions to filter the result records\n *\n * @param {Object|String} conditions - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @returns {Query.<T>}\n */\nQuery.prototype.where = function(conditions) {\n  if (this._soql) {\n    throw Error(\"Cannot set where conditions for the query which has already built SOQL.\");\n  }\n  this._config.conditions = conditions;\n  return this;\n};\n\n/**\n * Limit the returning result\n *\n * @param {Number} limit - Maximum number of records the query will return.\n * @returns {Query.<T>}\n */\nQuery.prototype.limit = function(limit) {\n  if (this._soql) {\n    throw Error(\"Cannot set limit for the query which has already built SOQL.\");\n  }\n  this._config.limit = limit;\n  return this;\n};\n\n/**\n * Synonym of Query#offset()\n *\n * @method Query#skip\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\n/**\n * Skip records\n *\n * @method Query#offset\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\nQuery.prototype.skip =\nQuery.prototype.offset = function(offset) {\n  if (this._soql) {\n    throw Error(\"Cannot set skip/offset for the query which has already built SOQL.\");\n  }\n  this._config.offset = offset;\n  return this;\n};\n\n/**\n * Synonym of Query#sort()\n *\n * @memthod Query#orderby\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\n/**\n * Set query sort with direction\n *\n * @method Query#sort\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\nQuery.prototype.sort =\nQuery.prototype.orderby = function(sort, dir) {\n  if (this._soql) {\n    throw Error(\"Cannot set sort for the query which has already built SOQL.\");\n  }\n  if (_.isString(sort) && _.isString(dir)) {\n    sort = [ [ sort, dir ] ];\n  }\n  this._config.sort = sort;\n  return this;\n};\n\n/**\n * Include child relationship query\n *\n * @param {String} childRelName - Child relationship name to include in query result\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Optional query configulations.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @returns {Query~SubQuery}\n */\nQuery.prototype.include = function(childRelName, conditions, fields, options) {\n  if (this._soql) {\n    throw Error(\"Cannot include child relationship into the query which has already built SOQL.\");\n  }\n  if (_.isObject(childRelName)) {\n    var includes = childRelName;\n    for (var crname in includes) {\n      var config = includes[crname];\n      this.include(crname, config.conditions, config.fields, config);\n    }\n    return;\n  }\n  var childConfig = {\n    table: childRelName,\n    conditions: conditions,\n    fields: fields,\n    limit: options && options.limit,\n    offset: options && (options.offset || options.skip),\n    sort: options && options.sort\n  };\n  if (!_.isArray(this._config.includes)) this._config.includes = [];\n  this._config.includes.push(childConfig);\n  var childQuery = new SubQuery(this._conn, this, childConfig);\n  this._children = this._children || [];\n  this._children.push(childQuery);\n  return childQuery;\n};\n\n\n/**\n * Setting maxFetch query option\n *\n * @param {Number} maxFetch - Max fetching records in auto fetch mode\n * @returns {Query.<T>}\n */\nQuery.prototype.maxFetch = function(maxFetch) {\n  this._options.maxFetch = maxFetch;\n  return this;\n};\n\n/**\n * Switching auto fetch mode\n *\n * @param {Boolean} autoFetch - Using auto fetch mode or not\n * @returns {Query.<T>}\n */\nQuery.prototype.autoFetch = function(autoFetch) {\n  this._options.autoFetch = autoFetch;\n  return this;\n};\n\n/**\n * Set flag to scan all records including deleted and archived.\n *\n * @param {Boolean} scanAll - Flag whether include deleted/archived record or not. Default is false.\n * @returns {Query.<T>}\n */\nQuery.prototype.scanAll = function(scanAll) {\n  this._options.scanAll = scanAll;\n  return this;\n};\n\n/**\n * @private\n */\nvar ResponseTargets = Query.ResponseTargets = {};\n[ \"QueryResult\", \"Records\", \"SingleRecord\", \"Count\" ].forEach(function(f) {\n  ResponseTargets[f] = f;\n});\n\n/**\n * @protected\n * @param {String} responseTarget - Query response target\n * @returns {Query.<S>}\n */\nQuery.prototype.setResponseTarget = function(responseTarget) {\n  if (responseTarget in ResponseTargets) {\n    this._options.responseTarget = responseTarget;\n  }\n  return this;\n};\n\n\n/**\n * Synonym of Query#execute()\n *\n * @method Query#run\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.run =\n/**\n * Synonym of Query#execute()\n *\n * @method Query#exec\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.exec =\n/**\n * Execute query and fetch records from server.\n *\n * @method Query#execute\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.execute = function(options, callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  var deferred = this._deferred;\n\n  if (this._executed) {\n    deferred.reject(new Error(\"re-executing already executed query\"));\n    return this;\n  }\n\n  if (this._finished) {\n    deferred.reject(new Error(\"executing already closed query\"));\n    return this;\n  }\n\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  options = {\n    headers: options.headers || self._options.headers,\n    responseTarget: options.responseTarget || self._options.responseTarget,\n    autoFetch: options.autoFetch || self._options.autoFetch,\n    maxFetch: options.maxFetch || self._options.maxFetch,\n    scanAll: options.scanAll || self._options.scanAll\n  };\n\n  // callback and promise resolution;\n  var promiseCallback = function(err, res) {\n    if (_.isFunction(callback)) {\n      try {\n        res = callback(err, res);\n        err = null;\n      } catch(e) {\n        err = e;\n      }\n    }\n    if (err) {\n      deferred.reject(err);\n    } else {\n      deferred.resolve(res);\n    }\n  };\n  this.once('response', function(res) {\n    promiseCallback(null, res);\n  });\n  this.once('error', function(err) {\n    promiseCallback(err);\n  });\n\n  // collect fetched records in array\n  // only when response target is Records and\n  // either callback or chaining promises are available to this query.\n  this.once('fetch', function() {\n    if (options.responseTarget === ResponseTargets.Records && (self._chaining || callback)) {\n      logger.debug('--- collecting all fetched records ---');\n      var records = [];\n      var onRecord = function(record) {\n        records.push(record);\n      };\n      self.on('record', onRecord);\n      self.once('end', function() {\n        self.removeListener('record', onRecord);\n        self.emit('response', records, self);\n      });\n    }\n  });\n\n  // flag to prevent re-execution\n  this._executed = true;\n\n  // start actual query\n  logger.debug('>>> Query start >>>');\n  this._execute(options).then(function() {\n    logger.debug('*** Query finished ***');\n  }).fail(function(err) {\n    logger.debug('--- Query error ---');\n    self.emit('error', err);\n  });\n\n  // return Query instance for chaining\n  return this;\n};\n\n/**\n * @private\n */\nQuery.prototype._execute = function(options) {\n  var self = this;\n  var logger = this._conn._logger;\n  var responseTarget = options.responseTarget;\n  var autoFetch = options.autoFetch;\n  var maxFetch = options.maxFetch;\n  var scanAll = options.scanAll;\n\n  return Promise.resolve(\n    self._locator ?\n    self._conn._baseUrl() + \"/query/\" + self._locator :\n    self.toSOQL().then(function(soql) {\n      self.totalFetched = 0;\n      logger.debug(\"SOQL = \" + soql);\n      return self._conn._baseUrl() + \"/\" + (scanAll ? \"queryAll\" : \"query\") + \"?q=\" + encodeURIComponent(soql);\n    })\n  ).then(function(url) {\n    return self._conn.request({\n      method: 'GET',\n      url: url,\n      headers: options.headers\n    });\n  }).then(function(data) {\n    self.emit(\"fetch\");\n    self.totalSize = data.totalSize;\n    var res;\n    switch(responseTarget) {\n      case ResponseTargets.SingleRecord:\n        res = data.records && data.records.length > 0 ? data.records[0] : null;\n        break;\n      case ResponseTargets.Records:\n        res = data.records;\n        break;\n      case ResponseTargets.Count:\n        res = data.totalSize;\n        break;\n      default:\n        res = data;\n    }\n    // only fire response event when it should be notified per fetch\n    if (responseTarget !== ResponseTargets.Records) {\n      self.emit(\"response\", res, self);\n    }\n\n    // streaming record instances\n    var numRecords = (data.records && data.records.length) || 0;\n    for (var i=0; i<numRecords; i++) {\n      if (self.totalFetched >= maxFetch) {\n        self._finished = true;\n        break;\n      }\n      var record = data.records[i];\n      self.push(record);\n      self.emit('record', record, self.totalFetched++, self);\n    }\n    if (data.nextRecordsUrl) {\n      self._locator = data.nextRecordsUrl.split('/').pop();\n    }\n    self._finished = self._finished || data.done || !autoFetch;\n    if (self._finished) {\n      self.push(null);\n    } else {\n      self._execute(options);\n    }\n    return res;\n  });\n};\n\n/**\n * Readable stream implementation\n *\n * @override\n * @private\n */\nQuery.prototype._read = function(size) {\n  if (!this._finished && !this._executed) {\n    this.execute({ autoFetch: true });\n  }\n};\n\n/** @override **/\nQuery.prototype.on = function(e, fn) {\n  if (e === 'record') {\n    var self = this;\n    this.on('readable', function() {\n      while(self.read() !== null) {} // discard buffered records\n    });\n  }\n  return Query.super_.prototype.on.call(this, e, fn);\n};\n\n/** @override **/\nQuery.prototype.addListener = Query.prototype.on;\n\n\n/**\n * @private\n */\nQuery.prototype._expandFields = function() {\n  if (this._soql) {\n    return Promise.reject(new Error(\"Cannot expand fields for the query which has already built SOQL.\"));\n  }\n  var self = this;\n  var logger = self._conn._logger;\n  var conn = this._conn;\n  var table = this._config.table;\n  var fields = this._config.fields || [];\n\n  logger.debug('_expandFields: table = ' + table + ', fields = ' + fields.join(', '));\n\n  return Promise.all([\n    Promise.resolve(self._parent ? findRelationTable(table) : table)\n      .then(function(table) {\n        return Promise.all(\n          _.map(fields, function(field) { return expandAsteriskField(table, field); })\n        ).then(function(expandedFields) {\n          self._config.fields = _.flatten(expandedFields);\n        });\n      }),\n    Promise.all(\n      _.map(self._children || [], function(childQuery) {\n        return childQuery._expandFields();\n      })\n    )\n  ]);\n\n  function findRelationTable(rname) {\n    var ptable = self._parent._config.table;\n    logger.debug('finding table for relation \"' + rname + '\" in \"' + ptable + '\"...');\n    return describeCache(ptable).then(function(sobject) {\n      var upperRname = rname.toUpperCase();\n      var childRelation = _.find(sobject.childRelationships, function(cr) {\n        return (cr.relationshipName || '').toUpperCase() === upperRname;\n      });\n      return childRelation ? childRelation.childSObject :\n        Promise.reject(new Error(\"No child relationship found: \" + rname ));\n    });\n  }\n\n  function describeCache(table) {\n    logger.debug('describe cache: '+table);\n    var deferred = Promise.defer();\n    conn.describe$(table, function(err, sobject) {\n      logger.debug('... done.');\n      if (err) { deferred.reject(err); }\n      else { deferred.resolve(sobject); }\n    });\n    return deferred.promise;\n  }\n\n  function expandAsteriskField(table, field) {\n    logger.debug('expanding field \"'+ field + '\" in \"' + table + '\"...');\n    var fpath = field.split('.');\n    return fpath[fpath.length - 1] === '*' ?\n      describeCache(table).then(function(sobject) {\n        logger.debug('table '+table+'has been described');\n        if (fpath.length > 1) {\n          var rname = fpath.shift();\n          var rfield = _.find(sobject.fields, function(f) {\n            return f.relationshipName &&\n                   f.relationshipName.toUpperCase() === rname.toUpperCase();\n          });\n          if (rfield) {\n            var rtable = rfield.referenceTo.length === 1 ? rfield.referenceTo[0] : 'Name';\n            return expandAsteriskField(rtable, fpath.join('.')).then(function(fpaths) {\n              return _.map(fpaths, function(fpath) { return rname + '.' + fpath; });\n            });\n          } else {\n            return [];\n          }\n        } else {\n          return _.map(sobject.fields, function(f) { return f.name; });\n        }\n      }) :\n      Promise.resolve([ field ]);\n  }\n};\n\n/**\n * Explain plan for executing query\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nQuery.prototype.explain = function(callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  return self.toSOQL().then(function(soql) {\n    logger.debug(\"SOQL = \" + soql);\n    var url = \"/query/?explain=\" + encodeURIComponent(soql);\n    return self._conn.request(url);\n  }).thenCall(callback);\n};\n\n/**\n * Return SOQL expression for the query\n *\n * @param {Callback.<String>} [callback] - Callback function\n * @returns {Promise.<String>}\n */\nQuery.prototype.toSOQL = function(callback) {\n  var self = this;\n  return Promise.resolve(self._soql ||\n    self._expandFields().then(function() { return SOQLBuilder.createSOQL(self._config); })\n  ).thenCall(callback);\n};\n\n/**\n * Create data stream of queried records.\n * Automatically resume query if paused.\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n */\nQuery.prototype.stream = RecordStream.Serializable.prototype.stream;\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.map = RecordStream.prototype.map;\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.filter = RecordStream.prototype.map;\n\n/*\n * Default threshold num of bulk API switching\n */\nvar DEFAULT_BULK_THRESHOLD = 200;\n\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#delete\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#del\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\n/**\n * Delete queried records\n *\n * @method Query#destroy\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Object} [options] - Mass delete operation options\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype[\"delete\"] =\nQuery.prototype.del =\nQuery.prototype.destroy = function(type, options, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    options = {};\n    type = null;\n  } else if (typeof type === 'object' && type !== null) {\n    callback = options;\n    options = type;\n    type = null;\n  }\n  options = options || {};\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk delete.\");\n  }\n  // Set the threshold number to pass to bulk API\n  var thresholdNum =\n    options.allowBulk === false ?\n      -1 :\n    typeof options.bulkThreshold === 'number' ?\n      options.bulkThreshold :\n      // determine threshold if the connection version supports SObject collection API or not\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var records = [];\n    var batch = null;\n    var handleRecord = function(rec) {\n      if (!rec.Id) {\n        self.emit('error', new Error('Queried record does not include Salesforce record ID.'))\n        return;\n      }\n      var record = { Id: rec.Id };\n      if (batch) {\n        batch.write(record);\n      } else {\n        records.push(record);\n        if (thresholdNum < 0 || records.length > thresholdNum) {\n          // Use bulk delete instead of SObject REST API\n          batch =\n            self._conn.sobject(type).deleteBulk()\n              .on('response', resolve)\n              .on('error', reject);\n          records.forEach(function(record) {\n            batch.write(record);\n          });\n          records = [];\n        }\n      }\n    };\n    var handleEnd = function() {\n      if (batch) {\n        batch.end();\n      } else {\n        var ids = records.map(function (record) { return record.Id; });\n        self._conn.sobject(type).destroy(ids, { allowRecursive: true }).then(resolve, reject);\n      }\n    };\n    self.on('data', handleRecord)\n      .on('end', handleEnd)\n      .on('error', reject);\n  }).thenCall(callback);\n};\n\n/**\n * Update queried records, using given mapping function/object\n *\n * @param {Record|RecordMapFunction} mapping - Mapping record or record mapping function\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Object} [options] - Mass update operation options\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype.update = function(mapping, type, options, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    options = {};\n    type = null;\n  } else if (typeof type === 'object' && type !== null) {\n    callback = options;\n    options = type;\n    type = null;\n  }\n  options = options || {};\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk update.\");\n  }\n  var updateStream = _.isFunction(mapping) ? RecordStream.map(mapping) : RecordStream.recordMapStream(mapping);\n  // Set the threshold number to pass to bulk API\n  var thresholdNum =\n    options.allowBulk === false ?\n      -1 :\n    typeof options.bulkThreshold === 'number' ?\n      options.bulkThreshold :\n      // determine threshold if the connection version supports SObject collection API or not\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var records = [];\n    var batch = null;\n    var handleRecord = function(record) {\n      if (batch) {\n        batch.write(record);\n      } else {\n        records.push(record);\n        if (thresholdNum < 0 || records.length > thresholdNum) {\n          // Use bulk update instead of SObject REST API\n          batch =\n            self._conn.sobject(type).updateBulk()\n              .on('response', resolve)\n              .on('error', reject);\n          records.forEach(function(record) {\n            batch.write(record);\n          });\n          records = [];\n        }\n      }\n    };\n    var handleEnd = function() {\n      if (batch) {\n        batch.end();\n      } else {\n        self._conn.sobject(type).update(records, { allowRecursive: true }).then(resolve, reject);\n      }\n    };\n    self.on('error', reject)\n      .pipe(updateStream)\n      .on('data', handleRecord)\n      .on('end', handleEnd)\n      .on('error', reject);\n  }).thenCall(callback);\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * Delegate to deferred promise, return promise instance for query result\n *\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\nQuery.prototype.then = function(onResolved, onReject) {\n  this._chaining = true;\n  if (!this._finished && !this._executed) { this.execute(); }\n  return this._deferred.promise.then.apply(this._deferred.promise, arguments);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query}\n */\nQuery.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/*--------------------------------------------*/\n\n/**\n * SubQuery object for representing child relationship query\n *\n * @protected\n * @class Query~SubQuery\n * @extends Query\n * @param {Connection} conn - Connection object\n * @param {Query} parent - Parent query object\n * @param {Object} config - Sub query configuration\n */\nvar SubQuery = function(conn, parent, config) {\n  SubQuery.super_.call(this, conn, config);\n  this._parent = parent;\n};\n\ninherits(SubQuery, Query);\n\n/**\n * @method Query~SubQuery#include\n * @override\n */\nSubQuery.prototype.include = function() {\n  throw new Error(\"Not allowed to include another subquery in subquery.\");\n};\n\n/**\n * Back the context to parent query object\n *\n * @method Query~SubQuery#end\n * @returns {Query}\n */\nSubQuery.prototype.end = function() {\n  return this._parent;\n};\n\n/**\n * If execute is called in subquery context, delegate it to parent query object\n *\n * @method Query~SubQuery#execute\n * @override\n */\nSubQuery.prototype.run =\nSubQuery.prototype.exec =\nSubQuery.prototype.execute = function() {\n  return this._parent.execute.apply(this._parent, arguments);\n};\n\n}).call(this,require('_process'))\n\n},{\"./date\":12,\"./promise\":17,\"./record-stream\":20,\"./soql-builder\":25,\"_process\":46,\"events\":37,\"inherits\":39,\"lodash/core\":43,\"readable-stream\":62}],19:[function(require,module,exports){\n/**\n * @file Represents Salesforce QuickAction\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\n\n/**\n * A class for quick action\n *\n * @protected\n * @constructor\n */\nvar QuickAction = module.exports = function(conn, path) {\n  this._conn = conn;\n  this._path = path;\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionInfo\n * @prop {String} type - Type of the action (e.g. Create, Update, Post, LogACall)\n * @prop {String} name - Name of the action\n * @prop {String} label - Label of the action\n * @prop {Object} urls - Endpoint URL information of the action\n */\n/**\n * @typedef {QuickAction~QuickActionInfo} QuickAction~QuickActionDescriveInfo\n * @prop {String} contextSobjectType - Object type used for the action\n * @prop {String} targetSobjectType - Object type of the action to target\n * @prop {String} targetParentField - Field name in the target object which refers parent(context) object record ID.\n * @prop {String} targetRecordTypeId - Record type of the targeted record\n * @prop {Object} layout - Layout sections that comprise an action\n */\n\n/**\n * Describe the action's information (including layout, etc.)\n *\n * @param {Callback.<QuickAction~QuickActionDescriveInfo>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionDescriveInfo>}\n */\nQuickAction.prototype.describe = function(callback) {\n  var url = this._path + \"/describe\";\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Retrieve default field values in the action (for given record, if specified)\n *\n * @param {String} [contextId] - ID of record to get default values specific to the record\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nQuickAction.prototype.defaultValues = function(contextId, callback) {\n  if (typeof contextId === 'function') {\n    callback = contextId;\n    contextId = null;\n  }\n  var url = this._path + \"/defaultValues\";\n  if (contextId) {\n    url += \"/\" + contextId;\n  }\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionResult\n * @param {String} id - Record id of the action result\n * @param {Array.<String>} feedItemIds - List of IDs for feed item\n * @param {Boolean} success - True if the action successfully completed\n * @param {Boolean} created - True if the action yields a new record\n * @param {String} contextId - Context record ID of the action\n * @param {Array.<Object>} errors - Errors if the action failed\n */\n\n/**\n * Execute the action for given context Id and record information\n * \n * @param {String} contextId - Context record ID of the action\n * @param {Record} record - Input record information for the action\n * @param {Callback.<QuickAction~QuickActionResult>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionResult>}\n */\nQuickAction.prototype.execute = function(contextId, record, callback) {\n  var body = {\n    contextId: contextId,\n    record: record\n  };\n  return this._conn.requestPost(this._path, body).thenCall(callback);\n};\n\n},{}],20:[function(require,module,exports){\n/**\n * @file Represents stream that handles Salesforce record as stream data\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    stream = require('readable-stream'),\n    Duplex = stream.Duplex,\n    Transform = stream.Transform,\n    PassThrough = stream.PassThrough,\n    inherits = require('inherits'),\n    _      = require('lodash/core'),\n    CSV    = require('./csv');\n\n\n/**\n * Class for Record Stream\n *\n * @class\n * @constructor\n * @extends stream.Transform\n */\nvar RecordStream = module.exports = function() {\n  RecordStream.super_.call(this, { objectMode: true });\n};\n\ninherits(RecordStream, Transform);\n\n\n/*\n * @override\n */\nRecordStream.prototype._transform = function(record, enc, callback) {\n  this.emit('record', record);\n  this.push(record);\n  callback();\n};\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream}\n */\nRecordStream.prototype.map = function(fn) {\n  return this.pipe(RecordStream.map(fn));\n};\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream}\n */\nRecordStream.prototype.filter = function(fn) {\n  return this.pipe(RecordStream.filter(fn));\n};\n\n\n/**\n * @class RecordStream.Serializable\n * @extends {RecordStream}\n */\nvar Serializable = RecordStream.Serializable = function() {\n  Serializable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Serializable, RecordStream);\n\n/**\n * Create readable data stream which emits serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nSerializable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this.pipe(converter.serialize(options))\n      .pipe(this._dataStream);\n  }\n  return this._dataStream;\n};\n\n\n/**\n * @class RecordStream.Parsable\n * @extends {RecordStream}\n */\nvar Parsable = RecordStream.Parsable = function() {\n  Parsable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Parsable, RecordStream);\n\n/**\n * Create writable data stream which accepts serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nParsable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  var self = this;\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this._parserStream = converter.parse(options).on('error', function(error) { self.emit('error', error); });\n    this._parserStream.pipe(this).pipe(new PassThrough({ objectMode: true, highWaterMark: ( 500 * 1000 ) }));\n  }\n  return this._dataStream;\n};\n\n\n/* @override */\nParsable.prototype.on = function(ev, fn) {\n  if (ev === 'readable' || ev === 'record') {\n    this._dataStream.pipe(this._parserStream);\n  }\n  return Parsable.super_.prototype.on.call(this, ev, fn);\n};\n\n/* @override */\nParsable.prototype.addListener = Parsable.prototype.on;\n\n/* --------------------------------------------------- */\n\n/**\n * @callback RecordMapFunction\n * @param {Record} record - Source record to map\n * @returns {Record}\n */\n\n/**\n * Create a record stream which maps records and pass them to downstream\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.map = function(fn) {\n  var mapStream = new RecordStream.Serializable();\n  mapStream._transform = function(record, enc, callback) {\n    var rec = fn(record) || record; // if not returned record, use same record\n    this.push(rec);\n    callback();\n  };\n  return mapStream;\n};\n\n/**\n * Create mapping stream using given record template\n *\n * @param {Record} record - Mapping record object. In mapping field value, temlate notation can be used to refer field value in source record, if noeval param is not true.\n * @param {Boolean} [noeval] - Disable template evaluation in mapping record.\n * @returns {RecordStream.Serializable}\n */\nRecordStream.recordMapStream = function(record, noeval) {\n  return RecordStream.map(function(rec) {\n    var mapped = { Id: rec.Id };\n    for (var prop in record) {\n      mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);\n    }\n    return mapped;\n  });\n\n  function evalMapping(value, mapping) {\n    if (_.isString(value)) {\n      var m = /^\\$\\{(\\w+)\\}$/.exec(value);\n      if (m) { return mapping[m[1]]; }\n      return value.replace(/\\$\\{(\\w+)\\}/g, function($0, prop) {\n        var v = mapping[prop];\n        return _.isNull(v) || _.isUndefined(v) ? \"\" : String(v);\n      });\n    } else {\n      return value;\n    }\n  }\n};\n\n/**\n * @callback RecordFilterFunction\n * @param {Record} record - Source record to filter\n * @returns {Boolean}\n */\n\n/**\n * Create a record stream which filters records and pass them to downstream\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.filter = function(fn) {\n  var filterStream = new RecordStream.Serializable();\n  filterStream._transform = function(record, enc, callback) {\n    if (fn(record)) { this.push(record); }\n    callback();\n  };\n  return filterStream;\n};\n\n/**\n * @private\n */\nfunction convertRecordForSerialization(record, options) {\n  return Object.keys(record).reduce(function(rec, key) {\n    var value = rec[key];\n    var t = typeof value;\n    var urec = {};\n    if (key === 'attributes') { // 'attributes' prop will be ignored\n      rec = _.extend({}, rec);\n      delete rec[key];\n    } else if (options.nullValue && value === null) {\n      urec[key] = options.nullValue;\n      rec = _.extend({}, rec, urec);\n    } else if (value !== null && typeof value === 'object') {\n      var precord = convertRecordForSerialization(value, options);\n      rec = Object.keys(precord).reduce(function(prec, pkey) {\n        prec[key + '.' + pkey] = precord[pkey];\n        return prec;\n      }, _.extend({}, rec));\n    }\n    return rec;\n  }, record);\n}\n\n/**\n * @private\n */\nfunction createPipelineStream(s1, s2) {\n  var pipeline = new PassThrough();\n  pipeline.on('pipe', function(source) {\n    source.unpipe(pipeline);\n    source.pipe(s1).pipe(s2);\n  });\n  pipeline.pipe = function(dest, options) {\n    return s2.pipe(dest, options);\n  };\n  return pipeline;\n}\n\n/** ---------------------------------------------------------------------- **/\n\n/**\n * @private\n */\nvar CSVStreamConverter = {\n  serialize: function(options) {\n    options = options || {};\n    return createPipelineStream(\n      RecordStream.map(function(record) {\n        return convertRecordForSerialization(record, options);\n      }),\n      CSV.serializeCSVStream(options)\n    );\n  },\n  parse: function(options) {\n    return CSV.parseCSVStream(options);\n  }\n};\n\n/**\n * @private\n */\nvar DataStreamConverters = RecordStream.DataStreamConverters = {\n  csv: CSVStreamConverter\n};\n\n},{\"./csv\":11,\"events\":37,\"inherits\":39,\"lodash/core\":43,\"readable-stream\":62}],21:[function(require,module,exports){\n/**\n * @file Represents Salesforce record information\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A simple hash object including record field information\n *\n * @typedef {Object} Record\n */\n\n/**\n * Remote reference to record information\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection object\n * @param {String} type - SObject type\n * @param {String} id - Record ID\n */\nvar RecordReference = module.exports = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Retrieve record field information\n *\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nRecordReference.prototype.retrieve = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, this.id, options, callback);\n};\n\n/**\n * Update record field information\n *\n * @param {Record} record - A Record which includes fields to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.update = function(record, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  record = _.clone(record);\n  record.Id = this.id;\n  return this._conn.update(this.type, record, options, callback);\n};\n\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype[\"delete\"] =\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#del\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.del =\n/**\n * Delete record field\n *\n * @method RecordReference#destroy\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.destroy = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, this.id, options, callback);\n};\n\n/**\n * Get blob field as stream\n *\n * @param {String} fieldName - Blob field name\n * @returns {stream.Stream}\n */\nRecordReference.prototype.blob = function(fieldName) {\n  var url = [ this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName ].join('/');\n  return this._conn.request(url).stream();\n};\n\n},{\"lodash/core\":43}],22:[function(require,module,exports){\n'use strict';\n\nvar required = require('./_required');\n\nmodule.exports = function(name) {\n  if (name === './jsforce' || name === 'jsforce') {\n    name = './core';\n  }\n  var m = required[name];\n  if (typeof m === 'undefined') {\n    throw new Error(\"Cannot find module '\" + name + \"'\");\n  }\n  return m;\n};\n\n},{\"./_required\":3}],23:[function(require,module,exports){\n/**\n * @file Manages method call to SOAP endpoint\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    _ = require('lodash/core'),\n    xml2js = require('xml2js'),\n    HttpApi = require('./http-api');\n\n\n/**\n * Class for SOAP endpoint of Salesforce\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection instance\n * @param {Object} options - SOAP endpoint setting options\n * @param {String} options.endpointUrl - SOAP endpoint URL\n * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")\n */\nvar SOAP = module.exports = function(conn, options) {\n  SOAP.super_.apply(this, arguments);\n  this._endpointUrl = options.endpointUrl;\n  this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';\n};\n\ninherits(SOAP, HttpApi);\n\n/**\n * Invoke SOAP call using method and arguments\n *\n * @param {String} method - Method name\n * @param {Object} args - Arguments for the method call\n * @param {Object} [schema] - Schema definition of response message\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nSOAP.prototype.invoke = function(method, args, schema, callback) {\n  if (typeof schema === 'function') {\n    callback = schema;\n    schema = null;\n  }\n  var message = {};\n  message[method] = args;\n  return this.request({\n    method: 'POST',\n    url: this._endpointUrl,\n    headers: {\n      'Content-Type': 'text/xml',\n      'SOAPAction': '\"\"'\n    },\n    message: message\n  }).then(function(res) {\n    return schema ? convertType(res, schema) : res;\n  }).thenCall(callback);\n};\n\n/* @private */\nfunction convertType(value, schema) {\n  if (_.isArray(value)) {\n    return value.map(function(v) {\n      return convertType(v, schema && schema[0])\n    });\n  } else if (_.isObject(value)) {\n    if (value.$ && value.$['xsi:nil'] === 'true') {\n      return null;\n    } else if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else {\n      var o = {};\n      for (var key in value) {\n        o[key] = convertType(value[key], schema && schema[key]);\n      }\n      return o;\n    }\n  } else {\n    if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else if (_.isObject(schema)) {\n      return {};\n    } else {\n      switch(schema) {\n        case 'string':\n          return String(value);\n        case 'number':\n          return Number(value);\n        case 'boolean':\n          return value === 'true';\n        default:\n          return value;\n      }\n    }\n  }\n}\n\n/** @override **/\nSOAP.prototype.beforeSend = function(request) {\n  request.body = this._createEnvelope(request.message);\n};\n\n/** @override **/\nSOAP.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 500 &&\n    /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body);\n};\n\n/** @override **/\nSOAP.prototype.parseError = function(body) {\n  var error = lookupValue(body, [ /:Envelope$/, /:Body$/, /:Fault$/ ]);\n  return {\n    errorCode: error.faultcode,\n    message: error.faultstring\n  };\n};\n\n/** @override **/\nSOAP.prototype.getResponseBody = function(response) {\n  var body = SOAP.super_.prototype.getResponseBody.call(this, response);\n  return lookupValue(body, [ /:Envelope$/, /:Body$/, /.+/ ]);\n};\n\n/**\n * @private\n */\nfunction lookupValue(obj, propRegExps) {\n  var regexp = propRegExps.shift();\n  if (!regexp) {\n    return obj;\n  }\n  else {\n    for (var prop in obj) {\n      if (regexp.test(prop)) {\n        return lookupValue(obj[prop], propRegExps);\n      }\n    }\n    return null;\n  }\n}\n\n/**\n * @private\n */\nfunction toXML(name, value) {\n  if (_.isObject(name)) {\n    value = name;\n    name = null;\n  }\n  if (_.isArray(value)) {\n    return _.map(value, function(v) { return toXML(name, v); }).join('');\n  } else {\n    var attrs = [];\n    var elems = [];\n    if (_.isObject(value)) {\n      for (var k in value) {\n        var v = value[k];\n        if (k[0] === '@') {\n          k = k.substring(1);\n          attrs.push(k + '=\"' + v + '\"');\n        } else {\n          elems.push(toXML(k, v));\n        }\n      }\n      value = elems.join('');\n    } else {\n      value = String(value)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n    }\n    var startTag = name ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>' : '';\n    var endTag = name ? '</' + name + '>' : '';\n    return  startTag + value + endTag;\n  }\n}\n\n/**\n * @private\n */\nSOAP.prototype._createEnvelope = function(message) {\n  var header = {};\n  var conn = this._conn;\n  if (conn.accessToken) {\n    header.SessionHeader = { sessionId: this._conn.accessToken };\n  }\n  if (conn.callOptions) {\n    header.CallOptions = conn.callOptions;\n  }\n  return [\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\n    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',\n    ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',\n    ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',\n    '<soapenv:Header xmlns=\"' + this._xmlns + '\">',\n    toXML(header),\n    '</soapenv:Header>',\n    '<soapenv:Body xmlns=\"' + this._xmlns + '\">',\n    toXML(message),\n    '</soapenv:Body>',\n    '</soapenv:Envelope>'\n  ].join('');\n};\n\n},{\"./http-api\":13,\"inherits\":39,\"lodash/core\":43,\"xml2js\":78}],24:[function(require,module,exports){\n/**\n * @file Represents Salesforce SObject\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    Record = require('./record'),\n    Query  = require('./query'),\n    Cache  = require('./cache'),\n    QuickAction = require('./quick-action');\n\n/**\n * A class for organizing all SObject access\n *\n * @constructor\n */\nvar SObject = module.exports = function(conn, type) {\n  this._conn = conn;\n  this.type = type;\n  var cacheOptions = { key: \"describe.\" + this.type };\n  this.describe$ = conn.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = conn.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n\n  cacheOptions = { key: \"layouts.\" + this.type };\n  this.layouts$ = conn.cache.makeCacheable(this.layouts, this, cacheOptions);\n  this.layouts = conn.cache.makeResponseCacheable(this.layouts, this, cacheOptions);\n\n  cacheOptions = { key: \"compactLayouts.\" + this.type };\n  this.compactLayouts$ = conn.cache.makeCacheable(this.compactLayouts, this, cacheOptions);\n  this.compactLayouts = conn.cache.makeResponseCacheable(this.compactLayouts, this, cacheOptions);\n\n  cacheOptions = { key: \"approvalLayouts.\" + this.type };\n  this.approvalLayouts$ = conn.cache.makeCacheable(this.approvalLayouts, this, cacheOptions);\n  this.approvalLayouts = conn.cache.makeResponseCacheable(this.approvalLayouts, this, cacheOptions);\n};\n\n/**\n * Synonym of SObject#create()\n *\n * @method SObject#insert\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method SObject#create\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.insert =\nSObject.prototype.create = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.create(this.type, records, options, callback);\n};\n\n/**\n * Retrieve specified records\n *\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nSObject.prototype.retrieve = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, ids, options, callback);\n};\n\n/**\n * Update records\n *\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.update = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.update(this.type, records, options, callback);\n};\n\n/**\n * Upsert records\n *\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.upsert = function(records, extIdField, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.upsert(this.type, records, extIdField, options, callback);\n};\n\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#delete\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#del\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method SObject#destroy\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype[\"delete\"] =\nSObject.prototype.del =\nSObject.prototype.destroy = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, ids, options, callback);\n};\n\n/**\n * Describe SObject metadata\n *\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nSObject.prototype.describe = function(callback) {\n  return this._conn.describe(this.type, callback);\n};\n\n/**\n * Get record representation instance by given id\n *\n * @param {String} id - A record ID\n * @returns {RecordReference}\n */\nSObject.prototype.record = function(id) {\n  return new Record(this._conn, this.type, id);\n};\n\n/**\n * Find and fetch records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.find = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var config = {\n    fields: fields,\n    includes: options.includes,\n    table: this.type,\n    conditions: conditions,\n    limit: options.limit,\n    sort: options.sort,\n    offset: options.offset || options.skip\n  };\n  var query = new Query(this._conn, config, options);\n  query.setResponseTarget(Query.ResponseTargets.Records);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Fetch one record which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Query.<Record>}\n */\nSObject.prototype.findOne = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = _.extend(options || {}, { limit: 1 });\n  var query = this.find(conditions, fields, options);\n  query.setResponseTarget(Query.ResponseTargets.SingleRecord);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Find and fetch records only by specifying fields to fetch.\n *\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.select = function(fields, callback) {\n  return this.find(null, fields, null, callback);\n};\n\n/**\n * Count num of records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Callback.<Number>} [callback] - Callback function\n * @returns {Query.<Number>}\n */\nSObject.prototype.count = function(conditions, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n  }\n  var query = this.find(conditions, { \"count()\" : true });\n  query.setResponseTarget(\"Count\");\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n\n/**\n * Call Bulk#load() to execute bulkload, returning batch object\n *\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\n * @param {Object} [options] - Options for bulk loading operation\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.bulkload = function(operation, options, input, callback) {\n  return this._conn.bulk.load(this.type, operation, options, input, callback);\n};\n\n/**\n * Synonym of SObject#createBulk()\n *\n * @method SObject#insertBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly insert input data using bulk API\n *\n * @method SObject#createBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.insertBulk =\nSObject.prototype.createBulk = function(input, callback) {\n  return this.bulkload(\"insert\", input, callback);\n};\n\n/**\n * Bulkly update records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk update Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.updateBulk = function(input, callback) {\n  return this.bulkload(\"update\", input, callback);\n};\n\n/**\n * Bulkly upsert records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk upsert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {String} [options.extIdField] - External ID field name\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.upsertBulk = function(input, extIdField, callback) {\n  return this.bulkload(\"upsert\", { extIdField: extIdField }, input, callback);\n};\n\n/**\n * Synonym of SObject#destroyBulk()\n *\n * @method SObject#deleteBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly delete records specified by input data using bulk API\n *\n * @method SObject#destroyBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteBulk =\nSObject.prototype.destroyBulk = function(input, callback) {\n  return this.bulkload(\"delete\", input, callback);\n};\n\n/**\n * Synonym of SObject#destroyHardBulk()\n *\n * @method SObject#deleteHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly hard delete records specified in input data using bulk API\n *\n * @method SObject#destroyHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteHardBulk =\nSObject.prototype.destroyHardBulk = function(input, callback) {\n  return this.bulkload(\"hardDelete\", input, callback);\n};\n\n/**\n * Retrieve recently accessed records\n *\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nSObject.prototype.recent = function (callback) {\n  return this._conn.recent(this.type, callback);\n};\n\n/**\n * Retrieve the updated records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nSObject.prototype.updated = function (start, end, callback) {\n  return this._conn.updated(this.type, start, end, callback);\n};\n\n/**\n * Retrieve the deleted records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nSObject.prototype.deleted = function (start, end, callback) {\n  return this._conn.deleted(this.type, start, end, callback);\n};\n\n/**\n * @typedef {Object} LayoutInfo\n * @prop {Array.<Object>} layouts - Array of layouts\n * @prop {Array.<Object>} recordTypeMappings - Array of record type mappings\n */\n/**\n * Describe layout information for SObject\n *\n * @param {String} [layoutName] - Name of named layout. (e.g. UserAlt in User SObject)\n * @param {Callback.<LayoutInfo>} [callback] - Callback function\n * @returns {Promise.<LayoutInfo>}\n */\nSObject.prototype.layouts = function(layoutName, callback) {\n  if (typeof layoutName === 'function') {\n    callback = layoutName;\n    layoutName = null;\n  }\n  var url = \"/sobjects/\" + this.type + \"/describe/\" + (layoutName ? \"namedLayouts/\"+layoutName : \"layouts\");\n  return this._conn.request(url, callback);\n};\n\n/**\n * @typedef {Object} CompactLayoutInfo\n * @prop {Array.<Object>} compactLayouts - Array of compact layouts\n * @prop {String} defaultCompactLayoutId - ID of default compact layout\n * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<CompactLayoutInfo>}\n */\nSObject.prototype.compactLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/compactLayouts\";\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * @typedef {Object} ApprovalLayoutInfo\n * @prop {Array.<Object>} approvalLayouts - Array of approval layouts\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<ApprovalLayoutInfo>}\n */\nSObject.prototype.approvalLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/approvalLayouts\";\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list of list views for the SObject\n *\n * @param {Callback.<ListViewsInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewsInfo>}\n */\nSObject.prototype.listviews = function(callback) {\n  var url = this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews';\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list view info in specifed view id\n *\n * @param {String} id - List view ID\n * @returns {ListView}\n */\nSObject.prototype.listview = function(id) {\n  return new ListView(this._conn, this.type, id);\n};\n\n/**\n * Returns all registered quick actions for the SObject\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nSObject.prototype.quickActions = function(callback) {\n  return this._conn.request(\"/sobjects/\" + this.type + \"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified quick aciton in the SObject\n *\n * @param {String} actionName - Name of the quick action\n * @returns {QuickAction}\n */\nSObject.prototype.quickAction = function(actionName) {\n  return new QuickAction(this._conn, \"/sobjects/\" + this.type + \"/quickActions/\" + actionName);\n};\n\n\n/**\n * A class for organizing list view information\n *\n * @protected\n * @class ListView\n * @param {Connection} conn - Connection instance\n * @param {SObject} type - SObject type\n * @param {String} id - List view ID\n */\nvar ListView = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Executes query for the list view and returns the resulting data and presentation information.\n *\n * @param {Callback.<ListViewResultInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewResultInfo>}\n */\nListView.prototype.results = function(callback) {\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/results';\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * Returns detailed information about a list view\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<ListViewDescribeInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewDescribeInfo>}\n */\nListView.prototype.describe = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/describe';\n  return this._conn.request({ method: 'GET', url: url, headers: options.headers }, callback);\n};\n\n/**\n * Explain plan for executing list view\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nListView.prototype.explain = function(callback) {\n  var url = \"/query/?explain=\" + this.id;\n  return this._conn.request(url, callback);\n};\n\n},{\"./cache\":8,\"./query\":18,\"./quick-action\":19,\"./record\":21,\"lodash/core\":43}],25:[function(require,module,exports){\n/**\n * @file Create and build SOQL string from configuration\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    SfDate = require(\"./date\");\n\n\n/**\n * Create SOQL\n * @private\n */\nfunction createSOQL(query) {\n  var soql = [\n    \"SELECT \",\n    createFieldsClause(query.fields, query.includes),\n    \" FROM \",\n    query.table\n  ].join(\"\");\n  var cond = createConditionClause(query.conditions);\n  if (cond) {\n    soql += \" WHERE \" + cond;\n  }\n  var orderby = createOrderByClause(query.sort);\n  if (orderby) {\n    soql += \" ORDER BY \" + orderby;\n  }\n  if (query.limit) {\n    soql += \" LIMIT \" + query.limit;\n  }\n  if (query.offset) {\n    soql += \" OFFSET \" + query.offset;\n  }\n  return soql;\n}\n\n/** @private **/\nfunction createFieldsClause(fields, childQueries) {\n  childQueries = _.map(_.values(childQueries || {}), function(cquery) {\n    return '(' + createSOQL(cquery) + ')';\n  });\n  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');\n}\n\n/** @private **/\nfunction createConditionClause(conditions, operator, depth) {\n  if (_.isString(conditions)) {\n    return conditions;\n  }\n  conditions = conditions || [];\n  operator = operator || \"AND\";\n  depth = depth || 0;\n  if (!isArray(conditions)) { // if passed in hash object\n    conditions = _.keys(conditions).map(function(key) {\n      return {\n        key: key,\n        value: conditions[key]\n      };\n    });\n  } else {\n    conditions = conditions.map(function(cond) {\n      var conds = [];\n      for (var key in cond) {\n        conds.push({\n          key: key,\n          value: cond[key]\n        });\n      }\n      return conds.length>1 ? conds : conds[0];\n    });\n  }\n  conditions = conditions.map(function(cond) {\n    var d = depth+1, op;\n    switch (cond.key) {\n      case \"$or\" :\n      case \"$and\" :\n      case \"$not\" :\n        if (operator !== \"NOT\" && conditions.length === 1) {\n          d = depth; // not change tree depth\n        }\n        op = cond.key === \"$or\" ? \"OR\" :\n             cond.key === \"$and\" ? \"AND\" :\n             \"NOT\";\n        return createConditionClause(cond.value, op, d);\n      default:\n        return createFieldExpression(cond.key, cond.value);\n    }\n  }).filter(function(expr) { return expr; });\n\n  var paren;\n  if (operator === 'NOT') {\n    paren = depth > 0;\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\n  } else {\n    paren = depth > 0 && conditions.length > 1;\n    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");\n  }\n}\n\nvar opMap = {\n  \"=\"     : \"=\",\n  \"$eq\"   : \"=\",\n  \"!=\"    : \"!=\",\n  \"$ne\"   : \"!=\",\n  \">\"     : \">\",\n  \"$gt\"   : \">\",\n  \"<\"     : \"<\",\n  \"$lt\"   : \"<\",\n  \">=\"    : \">=\",\n  \"$gte\"  : \">=\",\n  \"<=\"    : \"<=\",\n  \"$lte\"  : \"<=\",\n  \"$like\" : \"LIKE\",\n  \"$nlike\" : \"NOT LIKE\",\n  \"$in\"   : \"IN\",\n  \"$nin\"  : \"NOT IN\",\n  \"$includes\" : \"INCLUDES\",\n  \"$excludes\" : \"EXCLUDES\",\n  \"$exists\" : \"EXISTS\"\n};\n\n/** @private **/\nfunction createFieldExpression(field, value) {\n  // Assume the `$in` operator if value is an array and none was supplied.\n  if (_.isArray(value)) {\n    return createOpExpression(field, \"$in\", value);\n  }\n  // Otherwise, if an object was passed then process the supplied ops.\n  else if (_.isObject(value)) {\n    var expressions = _.map(value, function (v, k) {\n      if (k[0] === \"$\") return createOpExpression(field, k, v);\n    });\n    return expressions.join(' AND ');\n  }\n  // If the value is a scalar, it's an equality condition.\n  else return createOpExpression(field, \"$eq\", value);\n}\n\n/** @private **/\nfunction createOpExpression(field, op, value) {\n  var sfop = opMap[op];\n  if (!sfop || _.isUndefined(value)) { return null; }\n  var valueExpr = createValueExpression(value);\n  if (_.isUndefined(valueExpr)) { return null; }\n  switch (sfop) {\n    case \"NOT LIKE\":\n      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";\n    case \"EXISTS\":\n      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");\n    default:\n      return [ field, sfop, valueExpr ].join(\" \");\n  }\n}\n\n/** @private **/\nfunction createValueExpression(value) {\n  if (isArray(value)) {\n    return value.length > 0 ?\n           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :\n           undefined;\n  }\n  if (value instanceof SfDate) {\n    return value.toString();\n  }\n  if (_.isString(value)) {\n    return \"'\" + escapeSOQLString(value) + \"'\";\n  }\n  if (_.isNumber(value)) {\n    return (value).toString();\n  }\n  if (_.isNull(value)) {\n    return \"null\";\n  }\n  return value;\n}\n\n/** @private **/\nfunction escapeSOQLString(str) {\n  return String(str || '').replace(/'/g, \"\\\\'\");\n}\n\n/** @private **/\nfunction isArray(a) {\n  return _.isObject(a) && _.isFunction(a.pop);\n}\n\n\n/** @private **/\nfunction createOrderByClause(sort) {\n  sort = sort || [];\n  if (_.isString(sort)) {\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\n      // must be specified in pure \"order by\" clause. Return raw config.\n      return sort;\n    }\n    // sort order in mongoose-style expression.\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\n    sort = sort.split(/\\s+/).map(function(field) {\n      var dir = \"ASC\"; // ascending\n      var flag = field[0];\n      if (flag === '-') {\n        dir = \"DESC\";\n        field = field.substring(1);\n      } else if (flag === '+') {\n        field = field.substring(1);\n      }\n      return [ field, dir ];\n    });\n  } else if (!isArray(sort)) {\n    sort = _.keys(sort).map(function(field) {\n      var dir = sort[field];\n      return [ field, dir ];\n    });\n  }\n  return sort.map(function(s) {\n    var field = s[0], dir = s[1];\n    switch (String(dir)) {\n      case \"DESC\":\n      case \"desc\":\n      case \"descending\":\n      case \"-\":\n      case \"-1\":\n        dir = \"DESC\";\n        break;\n      default:\n        dir = \"ASC\";\n    }\n    return field + \" \" + dir;\n  }).join(\", \");\n}\n\n\nexports.createSOQL = createSOQL;\n\n},{\"./date\":12,\"lodash/core\":43}],26:[function(require,module,exports){\n(function (process){\n/*global process, Sfdc */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    Promise = require('./promise');\n\n/* */\n\nvar request = require('request'),\n    canvas = require('./browser/canvas'),\n    jsonp = require('./browser/jsonp');\n\n// set options if defaults setting is available in request, which is not available in xhr module.\nif (request.defaults) {\n  var defaults = {\n    followAllRedirects: true\n  };\n  if (process.env.HTTP_PROXY) {\n    defaults.proxy = process.env.HTTP_PROXY;\n  }\n  if (parseInt(process.env.HTTP_TIMEOUT)) {\n    defaults.timeout = parseInt(process.env.HTTP_TIMEOUT);\n  }\n  request = request.defaults(defaults);\n}\n\nvar baseUrl;\nif (typeof window === 'undefined' || !window.location || !window.location.host) {\n  baseUrl = process.env.LOCATION_BASE_URL || \"\";\n} else {\n  var apiHost = normalizeApiHost(window.location.host);\n  baseUrl = apiHost ? \"https://\" + apiHost : \"\";\n}\n\n/**\n * Add stream() method to promise (and following promise chain), to access original request stream.\n * @private\n */\nfunction streamify(promise, factory) {\n  var _then = promise.then;\n  promise.then = function() {\n    factory();\n    var newPromise = _then.apply(promise, arguments);\n    return streamify(newPromise, factory);\n  };\n  promise.stream = factory;\n  return promise;\n}\n\n/**\n * Normarize Salesforce API host name\n * @private\n */\nfunction normalizeApiHost(apiHost) {\n  var m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);\n  if (m) {\n    apiHost = m[1] + \".salesforce.com\";\n  }\n  return apiHost;\n}\n\n/**\n * Class for HTTP request transport\n *\n * @class\n * @protected\n */\nvar Transport = module.exports = function() {};\n\n/**\n * Make HTTP request, returns promise instead of stream\n *\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nTransport.prototype.httpRequest = function(params, callback) {\n  var deferred = Promise.defer();\n  var req;\n  var httpRequest = this._getHttpRequestModule();\n  var createRequest = function() {\n    if (!req) {\n      req = httpRequest(params, function(err, response) {\n        if (err) {\n          deferred.reject(err);\n        } else {\n          deferred.resolve(response);\n        }\n      });\n    }\n    return req;\n  };\n  return streamify(deferred.promise, createRequest).thenCall(callback);\n};\n\n/** @protected **/\nTransport.prototype._getHttpRequestModule = function() {\n  return request;\n};\n\n\n/**\n * Class for JSONP request transport\n * @class Transport~JsonpTransport\n * @protected\n * @extends Transport\n * @param {String} jsonpParam - Callback parameter name for JSONP invokation.\n */\nvar JsonpTransport = Transport.JsonpTransport = function(jsonpParam) {\n  this._jsonpParam = jsonpParam;\n};\n\ninherits(JsonpTransport, Transport);\n\n/** @protected **/\nJsonpTransport.prototype._getHttpRequestModule = function() {\n  return jsonp.createRequest(this._jsonpParam);\n};\n\nJsonpTransport.supported = jsonp.supported;\n\n\n/**\n * Class for Sfdc Canvas request transport\n * @class Transport~CanvasTransport\n * @protected\n * @extends Transport\n * @param {Object} signedRequest - Parsed signed request object\n */\nvar CanvasTransport = Transport.CanvasTransport = function(signedRequest) {\n  this._signedRequest = signedRequest;\n};\n\ninherits(CanvasTransport, Transport);\n\n/** @protected **/\nCanvasTransport.prototype._getHttpRequestModule = function() {\n  return canvas.createRequest(this._signedRequest);\n};\n\nCanvasTransport.supported = canvas.supported;\n\n\n/**\n * Class for HTTP request transport using AJAX proxy service\n *\n * @class Transport~ProxyTransport\n * @protected\n * @extends Transport\n * @param {String} proxyUrl - AJAX Proxy server URL\n */\nvar ProxyTransport = Transport.ProxyTransport = function(proxyUrl) {\n  this._proxyUrl = proxyUrl;\n};\n\ninherits(ProxyTransport, Transport);\n\n/**\n * Make HTTP request via AJAX proxy\n *\n * @method Transport~ProxyTransport#httpRequest\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nProxyTransport.prototype.httpRequest = function(params, callback) {\n  var url = params.url;\n  if (url.indexOf(\"/\") === 0) {\n    url = baseUrl + url;\n  }\n  var proxyParams = {\n    method: params.method,\n    url: this._proxyUrl + '?' + Date.now() + \".\" + (\"\" + Math.random()).substring(2),\n    headers: {\n      'salesforceproxy-endpoint': url\n    }\n  };\n  if (params.body || params.body === \"\") {\n    proxyParams.body = params.body;\n  }\n  if (params.headers) {\n    for (var name in params.headers) {\n      proxyParams.headers[name] = params.headers[name];\n    }\n  }\n  return ProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\n};\n\n\n/**\n * Class for HTTP request transport using a proxy server\n *\n * @class Transport~HttpProxyTransport\n * @protected\n * @extends Transport\n * @param {String} httpProxy - URL of the HTTP proxy server\n */\nvar HttpProxyTransport = Transport.HttpProxyTransport = function(httpProxy) {\n  this._httpProxy = httpProxy;\n};\n\ninherits(HttpProxyTransport, Transport);\n\n/**\n * Make HTTP request via proxy server\n *\n * @method Transport~HttpProxyTransport#httpRequest\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Callback Function\n * @returns {Promise.<Object>}\n */\nHttpProxyTransport.prototype.httpRequest = function(params, callback) {\n  var url = params.url;\n  if (url.indexOf(\"/\") === 0) {\n    url = baseUrl + url;\n  }\n  var proxyParams = {\n    method: params.method,\n    url: params.url,\n    proxy: this._httpProxy,\n    headers: {}\n  };\n  if (params.body || params.body === \"\") {\n    proxyParams.body = params.body;\n  }\n  if (params.headers) {\n    for (var name in params.headers) {\n      proxyParams.headers[name] = params.headers[name];\n    }\n  }\n  return HttpProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\n};\n\n}).call(this,require('_process'))\n\n},{\"./browser/canvas\":4,\"./browser/jsonp\":6,\"./promise\":17,\"_process\":46,\"inherits\":39,\"request\":7}],27:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],28:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],29:[function(require,module,exports){\n\n},{}],30:[function(require,module,exports){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (ArrayBuffer.isView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (ArrayBuffer.isView(buf)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n},{\"base64-js\":28,\"ieee754\":38}],31:[function(require,module,exports){\n(function (Buffer){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n}).call(this,{\"isBuffer\":require(\"../../is-buffer/index.js\")})\n\n},{\"../../is-buffer/index.js\":40}],32:[function(require,module,exports){\n(function (Buffer){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ResizeableBuffer =\n/*#__PURE__*/\nfunction () {\n  function ResizeableBuffer() {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n\n    _classCallCheck(this, ResizeableBuffer);\n\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.alloc(size);\n  }\n\n  _createClass(ResizeableBuffer, [{\n    key: \"prepend\",\n    value: function prepend(val) {\n      var length = this.length++;\n\n      if (length === this.size) {\n        this.resize();\n      }\n\n      var buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf, 1, 0, length);\n    }\n  }, {\n    key: \"append\",\n    value: function append(val) {\n      var length = this.length++;\n\n      if (length === this.size) {\n        this.resize();\n      }\n\n      this.buf[length] = val;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return Buffer.from(this.buf.slice(0, this.length));\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var length = this.length;\n      this.size = this.size * 2;\n      var buf = Buffer.alloc(this.size);\n      this.buf.copy(buf, 0, 0, length);\n      this.buf = buf;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.buf.slice(0, this.length).toString();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.length = 0;\n    }\n  }]);\n\n  return ResizeableBuffer;\n}();\n\nmodule.exports = ResizeableBuffer;\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":30}],33:[function(require,module,exports){\n(function (Buffer){\n\"use strict\";\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/*\nCSV Parse\n\nPlease look at the [project documentation](https://csv.js.org/parse/) for additional\ninformation.\n*/\nvar _require = require('stream'),\n    Transform = _require.Transform;\n\nvar ResizeableBuffer = require('./ResizeableBuffer');\n\nvar cr = 13;\nvar nl = 10;\nvar space = 32;\nvar tab = 9;\nvar bom_utf8 = Buffer.from([239, 187, 191]);\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Transform) {\n  _inherits(Parser, _Transform);\n\n  function Parser() {\n    var _this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Parser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Parser).call(this, _objectSpread({}, {\n      readableObjectMode: true\n    }, {}, opts)));\n    var options = {}; // Merge with user options\n\n    for (var opt in opts) {\n      options[underscore(opt)] = opts[opt];\n    } // Normalize option `bom`\n\n\n    if (options.bom === undefined || options.bom === null || options.bom === false) {\n      options.bom = false;\n    } else if (options.bom !== true) {\n      throw new Error(\"Invalid Option: bom must be true, got \".concat(JSON.stringify(options.bom)));\n    } // Normalize option `cast`\n\n\n    var fnCastField = null;\n\n    if (options.cast === undefined || options.cast === null || options.cast === false || options.cast === '') {\n      options.cast = undefined;\n    } else if (typeof options.cast === 'function') {\n      fnCastField = options.cast;\n      options.cast = true;\n    } else if (options.cast !== true) {\n      throw new Error('Invalid Option: cast must be true or a function');\n    } // Normalize option `cast_date`\n\n\n    if (options.cast_date === undefined || options.cast_date === null || options.cast_date === false || options.cast_date === '') {\n      options.cast_date = false;\n    } else if (options.cast_date === true) {\n      options.cast_date = function (value) {\n        var date = Date.parse(value);\n        return !isNaN(date) ? new Date(date) : value;\n      };\n    } else if (typeof options.cast_date !== 'function') {\n      throw new Error('Invalid Option: cast_date must be true or a function');\n    } // Normalize option `columns`\n\n\n    var fnFirstLineToHeaders = null;\n\n    if (options.columns === true) {\n      // Fields in the first line are converted as-is to columns\n      fnFirstLineToHeaders = undefined;\n    } else if (typeof options.columns === 'function') {\n      fnFirstLineToHeaders = options.columns;\n      options.columns = true;\n    } else if (Array.isArray(options.columns)) {\n      options.columns = normalizeColumnsArray(options.columns);\n    } else if (options.columns === undefined || options.columns === null || options.columns === false) {\n      options.columns = false;\n    } else {\n      throw new Error(\"Invalid Option columns: expect an object or true, got \".concat(JSON.stringify(options.columns)));\n    } // Normalize option `comment`\n\n\n    if (options.comment === undefined || options.comment === null || options.comment === false || options.comment === '') {\n      options.comment = null;\n    } else {\n      if (typeof options.comment === 'string') {\n        options.comment = Buffer.from(options.comment);\n      }\n\n      if (!Buffer.isBuffer(options.comment)) {\n        throw new Error(\"Invalid Option: comment must be a buffer or a string, got \".concat(JSON.stringify(options.comment)));\n      }\n    } // Normalize option `delimiter`\n\n\n    if (options.delimiter === undefined || options.delimiter === null || options.delimiter === false) {\n      options.delimiter = Buffer.from(',');\n    } else if (Buffer.isBuffer(options.delimiter)) {\n      if (options.delimiter.length === 0) {\n        throw new Error(\"Invalid Option: delimiter must be a non empty buffer\");\n      } // Great, nothing to do\n\n    } else if (typeof options.delimiter === 'string') {\n      if (options.delimiter.length === 0) {\n        throw new Error(\"Invalid Option: delimiter must be a non empty string\");\n      }\n\n      options.delimiter = Buffer.from(options.delimiter);\n    } else {\n      throw new Error(\"Invalid Option: delimiter must be a string or a buffer, got \".concat(options.delimiter));\n    } // Normalize option `escape`\n\n\n    if (options.escape === undefined || options.escape === null) {\n      options.escape = Buffer.from('\"');\n    } else if (typeof options.escape === 'string') {\n      options.escape = Buffer.from(options.escape);\n    }\n\n    if (!Buffer.isBuffer(options.escape)) {\n      throw new Error(\"Invalid Option: escape must be a buffer or a string, got \".concat(JSON.stringify(options.escape)));\n    } else if (options.escape.length !== 1) {\n      throw new Error(\"Invalid Option Length: escape must be one character, got \".concat(options.escape.length));\n    } else {\n      options.escape = options.escape[0];\n    } // Normalize option `from`\n\n\n    if (options.from === undefined || options.from === null) {\n      options.from = 1;\n    } else {\n      if (typeof options.from === 'string' && /\\d+/.test(options.from)) {\n        options.from = parseInt(options.from);\n      }\n\n      if (Number.isInteger(options.from)) {\n        if (options.from < 0) {\n          throw new Error(\"Invalid Option: from must be a positive integer, got \".concat(JSON.stringify(opts.from)));\n        }\n      } else {\n        throw new Error(\"Invalid Option: from must be an integer, got \".concat(JSON.stringify(options.from)));\n      }\n    } // Normalize option `from_line`\n\n\n    if (options.from_line === undefined || options.from_line === null) {\n      options.from_line = 1;\n    } else {\n      if (typeof options.from_line === 'string' && /\\d+/.test(options.from_line)) {\n        options.from_line = parseInt(options.from_line);\n      }\n\n      if (Number.isInteger(options.from_line)) {\n        if (options.from_line <= 0) {\n          throw new Error(\"Invalid Option: from_line must be a positive integer greater than 0, got \".concat(JSON.stringify(opts.from_line)));\n        }\n      } else {\n        throw new Error(\"Invalid Option: from_line must be an integer, got \".concat(JSON.stringify(opts.from_line)));\n      }\n    } // Normalize option `info`\n\n\n    if (options.info === undefined || options.info === null || options.info === false) {\n      options.info = false;\n    } else if (options.info !== true) {\n      throw new Error(\"Invalid Option: info must be true, got \".concat(JSON.stringify(options.info)));\n    } // Normalize option `max_record_size`\n\n\n    if (options.max_record_size === undefined || options.max_record_size === null || options.max_record_size === false) {\n      options.max_record_size = 0;\n    } else if (Number.isInteger(options.max_record_size) && options.max_record_size >= 0) {// Great, nothing to do\n    } else if (typeof options.max_record_size === 'string' && /\\d+/.test(options.max_record_size)) {\n      options.max_record_size = parseInt(options.max_record_size);\n    } else {\n      throw new Error(\"Invalid Option: max_record_size must be a positive integer, got \".concat(JSON.stringify(options.max_record_size)));\n    } // Normalize option `objname`\n\n\n    if (options.objname === undefined || options.objname === null || options.objname === false) {\n      options.objname = undefined;\n    } else if (Buffer.isBuffer(options.objname)) {\n      if (options.objname.length === 0) {\n        throw new Error(\"Invalid Option: objname must be a non empty buffer\");\n      }\n\n      options.objname = options.objname.toString();\n    } else if (typeof options.objname === 'string') {\n      if (options.objname.length === 0) {\n        throw new Error(\"Invalid Option: objname must be a non empty string\");\n      } // Great, nothing to do\n\n    } else {\n      throw new Error(\"Invalid Option: objname must be a string or a buffer, got \".concat(options.objname));\n    } // Normalize option `quote`\n\n\n    if (options.quote === null || options.quote === false || options.quote === '') {\n      options.quote = null;\n    } else {\n      if (options.quote === undefined || options.quote === true) {\n        options.quote = Buffer.from('\"');\n      } else if (typeof options.quote === 'string') {\n        options.quote = Buffer.from(options.quote);\n      }\n\n      if (!Buffer.isBuffer(options.quote)) {\n        throw new Error(\"Invalid Option: quote must be a buffer or a string, got \".concat(JSON.stringify(options.quote)));\n      } else if (options.quote.length !== 1) {\n        throw new Error(\"Invalid Option Length: quote must be one character, got \".concat(options.quote.length));\n      } else {\n        options.quote = options.quote[0];\n      }\n    } // Normalize option `raw`\n\n\n    if (options.raw === undefined || options.raw === null || options.raw === false) {\n      options.raw = false;\n    } else if (options.raw !== true) {\n      throw new Error(\"Invalid Option: raw must be true, got \".concat(JSON.stringify(options.raw)));\n    } // Normalize option `record_delimiter`\n\n\n    if (!options.record_delimiter) {\n      options.record_delimiter = [];\n    } else if (!Array.isArray(options.record_delimiter)) {\n      options.record_delimiter = [options.record_delimiter];\n    }\n\n    options.record_delimiter = options.record_delimiter.map(function (rd) {\n      if (typeof rd === 'string') {\n        rd = Buffer.from(rd);\n      }\n\n      return rd;\n    }); // Normalize option `relax`\n\n    if (typeof options.relax === 'boolean') {// Great, nothing to do\n    } else if (options.relax === undefined || options.relax === null) {\n      options.relax = false;\n    } else {\n      throw new Error(\"Invalid Option: relax must be a boolean, got \".concat(JSON.stringify(options.relax)));\n    } // Normalize option `relax_column_count`\n\n\n    if (typeof options.relax_column_count === 'boolean') {// Great, nothing to do\n    } else if (options.relax_column_count === undefined || options.relax_column_count === null) {\n      options.relax_column_count = false;\n    } else {\n      throw new Error(\"Invalid Option: relax_column_count must be a boolean, got \".concat(JSON.stringify(options.relax_column_count)));\n    } // Normalize option `skip_empty_lines`\n\n\n    if (typeof options.skip_empty_lines === 'boolean') {// Great, nothing to do\n    } else if (options.skip_empty_lines === undefined || options.skip_empty_lines === null) {\n      options.skip_empty_lines = false;\n    } else {\n      throw new Error(\"Invalid Option: skip_empty_lines must be a boolean, got \".concat(JSON.stringify(options.skip_empty_lines)));\n    } // Normalize option `skip_lines_with_empty_values`\n\n\n    if (typeof options.skip_lines_with_empty_values === 'boolean') {// Great, nothing to do\n    } else if (options.skip_lines_with_empty_values === undefined || options.skip_lines_with_empty_values === null) {\n      options.skip_lines_with_empty_values = false;\n    } else {\n      throw new Error(\"Invalid Option: skip_lines_with_empty_values must be a boolean, got \".concat(JSON.stringify(options.skip_lines_with_empty_values)));\n    } // Normalize option `skip_lines_with_error`\n\n\n    if (typeof options.skip_lines_with_error === 'boolean') {// Great, nothing to do\n    } else if (options.skip_lines_with_error === undefined || options.skip_lines_with_error === null) {\n      options.skip_lines_with_error = false;\n    } else {\n      throw new Error(\"Invalid Option: skip_lines_with_error must be a boolean, got \".concat(JSON.stringify(options.skip_lines_with_error)));\n    } // Normalize option `rtrim`\n\n\n    if (options.rtrim === undefined || options.rtrim === null || options.rtrim === false) {\n      options.rtrim = false;\n    } else if (options.rtrim !== true) {\n      throw new Error(\"Invalid Option: rtrim must be a boolean, got \".concat(JSON.stringify(options.rtrim)));\n    } // Normalize option `ltrim`\n\n\n    if (options.ltrim === undefined || options.ltrim === null || options.ltrim === false) {\n      options.ltrim = false;\n    } else if (options.ltrim !== true) {\n      throw new Error(\"Invalid Option: ltrim must be a boolean, got \".concat(JSON.stringify(options.ltrim)));\n    } // Normalize option `trim`\n\n\n    if (options.trim === undefined || options.trim === null || options.trim === false) {\n      options.trim = false;\n    } else if (options.trim !== true) {\n      throw new Error(\"Invalid Option: trim must be a boolean, got \".concat(JSON.stringify(options.trim)));\n    } // Normalize options `trim`, `ltrim` and `rtrim`\n\n\n    if (options.trim === true && opts.ltrim !== false) {\n      options.ltrim = true;\n    } else if (options.ltrim !== true) {\n      options.ltrim = false;\n    }\n\n    if (options.trim === true && opts.rtrim !== false) {\n      options.rtrim = true;\n    } else if (options.rtrim !== true) {\n      options.rtrim = false;\n    } // Normalize option `to`\n\n\n    if (options.to === undefined || options.to === null) {\n      options.to = -1;\n    } else {\n      if (typeof options.to === 'string' && /\\d+/.test(options.to)) {\n        options.to = parseInt(options.to);\n      }\n\n      if (Number.isInteger(options.to)) {\n        if (options.to <= 0) {\n          throw new Error(\"Invalid Option: to must be a positive integer greater than 0, got \".concat(JSON.stringify(opts.to)));\n        }\n      } else {\n        throw new Error(\"Invalid Option: to must be an integer, got \".concat(JSON.stringify(opts.to)));\n      }\n    } // Normalize option `to_line`\n\n\n    if (options.to_line === undefined || options.to_line === null) {\n      options.to_line = -1;\n    } else {\n      if (typeof options.to_line === 'string' && /\\d+/.test(options.to_line)) {\n        options.to_line = parseInt(options.to_line);\n      }\n\n      if (Number.isInteger(options.to_line)) {\n        if (options.to_line <= 0) {\n          throw new Error(\"Invalid Option: to_line must be a positive integer greater than 0, got \".concat(JSON.stringify(opts.to_line)));\n        }\n      } else {\n        throw new Error(\"Invalid Option: to_line must be an integer, got \".concat(JSON.stringify(opts.to_line)));\n      }\n    }\n\n    _this.info = {\n      comment_lines: 0,\n      empty_lines: 0,\n      invalid_field_length: 0,\n      lines: 1,\n      records: 0\n    };\n    _this.options = options;\n    _this.state = {\n      bomSkipped: false,\n      castField: fnCastField,\n      commenting: false,\n      enabled: options.from_line === 1,\n      escaping: false,\n      escapeIsQuote: options.escape === options.quote,\n      expectedRecordLength: options.columns === null ? 0 : options.columns.length,\n      field: new ResizeableBuffer(20),\n      firstLineToHeaders: fnFirstLineToHeaders,\n      info: Object.assign({}, _this.info),\n      previousBuf: undefined,\n      quoting: false,\n      stop: false,\n      rawBuffer: new ResizeableBuffer(100),\n      record: [],\n      recordHasError: false,\n      record_length: 0,\n      recordDelimiterMaxLength: options.record_delimiter.length === 0 ? 2 : Math.max.apply(Math, _toConsumableArray(options.record_delimiter.map(function (v) {\n        return v.length;\n      }))),\n      trimChars: [Buffer.from(' ')[0], Buffer.from('\\t')[0]],\n      wasQuoting: false,\n      wasRowDelimiter: false\n    };\n    return _this;\n  } // Implementation of `Transform._transform`\n\n\n  _createClass(Parser, [{\n    key: \"_transform\",\n    value: function _transform(buf, encoding, callback) {\n      if (this.state.stop === true) {\n        return;\n      }\n\n      var err = this.__parse(buf, false);\n\n      if (err !== undefined) {\n        this.state.stop = true;\n      }\n\n      callback(err);\n    } // Implementation of `Transform._flush`\n\n  }, {\n    key: \"_flush\",\n    value: function _flush(callback) {\n      if (this.state.stop === true) {\n        return;\n      }\n\n      var err = this.__parse(undefined, true);\n\n      callback(err);\n    } // Central parser implementation\n\n  }, {\n    key: \"__parse\",\n    value: function __parse(nextBuf, end) {\n      var _this$options = this.options,\n          bom = _this$options.bom,\n          comment = _this$options.comment,\n          escape = _this$options.escape,\n          from_line = _this$options.from_line,\n          info = _this$options.info,\n          ltrim = _this$options.ltrim,\n          max_record_size = _this$options.max_record_size,\n          quote = _this$options.quote,\n          raw = _this$options.raw,\n          relax = _this$options.relax,\n          rtrim = _this$options.rtrim,\n          skip_empty_lines = _this$options.skip_empty_lines,\n          to = _this$options.to,\n          to_line = _this$options.to_line;\n      var record_delimiter = this.options.record_delimiter;\n      var _this$state = this.state,\n          bomSkipped = _this$state.bomSkipped,\n          previousBuf = _this$state.previousBuf,\n          rawBuffer = _this$state.rawBuffer,\n          escapeIsQuote = _this$state.escapeIsQuote;\n      var buf;\n\n      if (previousBuf === undefined) {\n        if (nextBuf === undefined) {\n          // Handle empty string\n          this.push(null);\n          return;\n        } else {\n          buf = nextBuf;\n        }\n      } else if (previousBuf !== undefined && nextBuf === undefined) {\n        buf = previousBuf;\n      } else {\n        buf = Buffer.concat([previousBuf, nextBuf]);\n      } // Handle UTF BOM\n\n\n      if (bomSkipped === false) {\n        if (bom === false) {\n          this.state.bomSkipped = true;\n        } else if (buf.length < 3) {\n          // No enough data\n          if (end === false) {\n            // Wait for more data\n            this.state.previousBuf = buf;\n            return;\n          } // skip BOM detect because data length < 3\n\n        } else {\n          if (bom_utf8.compare(buf, 0, 3) === 0) {\n            // Skip BOM\n            buf = buf.slice(3);\n          }\n\n          this.state.bomSkipped = true;\n        }\n      }\n\n      var bufLen = buf.length;\n      var pos;\n\n      for (pos = 0; pos < bufLen; pos++) {\n        // Ensure we get enough space to look ahead\n        // There should be a way to move this out of the loop\n        if (this.__needMoreData(pos, bufLen, end)) {\n          break;\n        }\n\n        if (this.state.wasRowDelimiter === true) {\n          this.info.lines++;\n\n          if (info === true && this.state.record.length === 0 && this.state.field.length === 0 && this.state.wasQuoting === false) {\n            this.state.info = Object.assign({}, this.info);\n          }\n\n          this.state.wasRowDelimiter = false;\n        }\n\n        if (to_line !== -1 && this.info.lines > to_line) {\n          this.state.stop = true;\n          this.push(null);\n          return;\n        } // Auto discovery of record_delimiter, unix, mac and windows supported\n\n\n        if (this.state.quoting === false && record_delimiter.length === 0) {\n          var record_delimiterCount = this.__autoDiscoverRowDelimiter(buf, pos);\n\n          if (record_delimiterCount) {\n            record_delimiter = this.options.record_delimiter;\n          }\n        }\n\n        var chr = buf[pos];\n\n        if (raw === true) {\n          rawBuffer.append(chr);\n        }\n\n        if ((chr === cr || chr === nl) && this.state.wasRowDelimiter === false) {\n          this.state.wasRowDelimiter = true;\n        } // Previous char was a valid escape char\n        // treat the current char as a regular char\n\n\n        if (this.state.escaping === true) {\n          this.state.escaping = false;\n        } else {\n          // Escape is only active inside quoted fields\n          if (this.state.quoting === true && chr === escape && pos + 1 < bufLen) {\n            // We are quoting, the char is an escape chr and there is a chr to escape\n            if (escapeIsQuote) {\n              if (buf[pos + 1] === quote) {\n                this.state.escaping = true;\n                continue;\n              }\n            } else {\n              this.state.escaping = true;\n              continue;\n            }\n          } // Not currently escaping and chr is a quote\n          // TODO: need to compare bytes instead of single char\n\n\n          if (this.state.commenting === false && chr === quote) {\n            if (this.state.quoting === true) {\n              var nextChr = buf[pos + 1];\n\n              var isNextChrTrimable = rtrim && this.__isCharTrimable(nextChr); // const isNextChrComment = nextChr === comment\n\n\n              var isNextChrComment = comment !== null && this.__compareBytes(comment, buf, pos + 1, nextChr);\n\n              var isNextChrDelimiter = this.__isDelimiter(nextChr, buf, pos + 1);\n\n              var isNextChrRowDelimiter = record_delimiter.length === 0 ? this.__autoDiscoverRowDelimiter(buf, pos + 1) : this.__isRecordDelimiter(nextChr, buf, pos + 1); // Escape a quote\n              // Treat next char as a regular character\n              // TODO: need to compare bytes instead of single char\n\n              if (chr === escape && nextChr === quote) {\n                pos++;\n              } else if (!nextChr || isNextChrDelimiter || isNextChrRowDelimiter || isNextChrComment || isNextChrTrimable) {\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                continue;\n              } else if (relax === false) {\n                var err = this.__error(new CsvError('CSV_INVALID_CLOSING_QUOTE', ['Invalid Closing Quote:', \"got \\\"\".concat(String.fromCharCode(nextChr), \"\\\"\"), \"at line \".concat(this.info.lines), 'instead of delimiter, row delimiter, trimable character', '(if activated) or comment'], this.__context()));\n\n                if (err !== undefined) return err;\n              } else {\n                this.state.quoting = false;\n                this.state.wasQuoting = true; // continue\n\n                this.state.field.prepend(quote);\n              }\n            } else {\n              if (this.state.field.length !== 0) {\n                // In relax mode, treat opening quote preceded by chrs as regular\n                if (relax === false) {\n                  var _err = this.__error(new CsvError('INVALID_OPENING_QUOTE', ['Invalid Opening Quote:', \"a quote is found inside a field at line \".concat(this.info.lines)], this.__context(), {\n                    field: this.state.field\n                  }));\n\n                  if (_err !== undefined) return _err;\n                }\n              } else {\n                this.state.quoting = true;\n                continue;\n              }\n            }\n          }\n\n          if (this.state.quoting === false) {\n            var recordDelimiterLength = this.__isRecordDelimiter(chr, buf, pos);\n\n            if (recordDelimiterLength !== 0) {\n              // Do not emit comments which take a full line\n              var skipCommentLine = this.state.commenting && this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0;\n\n              if (skipCommentLine) {\n                this.info.comment_lines++; // Skip full comment line\n              } else {\n                // Skip if line is empty and skip_empty_lines activated\n                if (skip_empty_lines === true && this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0) {\n                  this.info.empty_lines++;\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                } // Activate records emition if above from_line\n\n\n                if (this.state.enabled === false && this.info.lines + (this.state.wasRowDelimiter === true ? 1 : 0) >= from_line) {\n                  this.state.enabled = true;\n\n                  this.__resetField();\n\n                  this.__resetRow();\n\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                } else {\n                  var errField = this.__onField();\n\n                  if (errField !== undefined) return errField;\n\n                  var errRecord = this.__onRow();\n\n                  if (errRecord !== undefined) return errRecord;\n                }\n\n                if (to !== -1 && this.info.records >= to) {\n                  this.state.stop = true;\n                  this.push(null);\n                  return;\n                }\n              }\n\n              this.state.commenting = false;\n              pos += recordDelimiterLength - 1;\n              continue;\n            }\n\n            if (this.state.commenting) {\n              continue;\n            }\n\n            var commentCount = comment === null ? 0 : this.__compareBytes(comment, buf, pos, chr);\n\n            if (commentCount !== 0) {\n              this.state.commenting = true;\n              continue;\n            }\n\n            var delimiterLength = this.__isDelimiter(chr, buf, pos);\n\n            if (delimiterLength !== 0) {\n              var _errField = this.__onField();\n\n              if (_errField !== undefined) return _errField;\n              pos += delimiterLength - 1;\n              continue;\n            }\n          }\n        }\n\n        if (this.state.commenting === false) {\n          if (max_record_size !== 0 && this.state.record_length + this.state.field.length > max_record_size) {\n            var _err2 = this.__error(\"Max Record Size: record exceed the maximum number of tolerated bytes of \".concat(max_record_size, \" on line \").concat(this.info.lines));\n\n            if (_err2 !== undefined) return _err2;\n          }\n        }\n\n        var lappend = ltrim === false || this.state.quoting === true || this.state.field.length !== 0 || !this.__isCharTrimable(chr); // rtrim in non quoting is handle in __onField\n\n        var rappend = rtrim === false || this.state.wasQuoting === false;\n\n        if (lappend === true && rappend === true) {\n          this.state.field.append(chr);\n        } else if (rtrim === true && !this.__isCharTrimable(chr)) {\n          var _err3 = this.__error(\"Invalid Closing Quote: found non trimable byte after quote at line \".concat(this.info.lines));\n\n          if (_err3 !== undefined) return _err3;\n        }\n      }\n\n      if (end === true) {\n        if (this.state.quoting === true) {\n          var _err4 = this.__error(new CsvError('CSV_QUOTE_NOT_CLOSED', ['Quote Not Closed:', \"the parsing is finished with an opening quote at line \".concat(this.info.lines)], this.__context()));\n\n          if (_err4 !== undefined) return _err4;\n        } else {\n          // Skip last line if it has no characters\n          if (this.state.wasQuoting === true || this.state.record.length !== 0 || this.state.field.length !== 0) {\n            var _errField2 = this.__onField();\n\n            if (_errField2 !== undefined) return _errField2;\n\n            var _errRecord = this.__onRow();\n\n            if (_errRecord !== undefined) return _errRecord;\n          } else if (this.state.wasRowDelimiter === true) {\n            this.info.empty_lines++;\n          } else if (this.state.commenting === true) {\n            this.info.comment_lines++;\n          }\n        }\n      } else {\n        this.state.previousBuf = buf.slice(pos);\n      }\n\n      if (this.state.wasRowDelimiter === true) {\n        this.info.lines++;\n        this.state.wasRowDelimiter = false;\n      }\n    } // Helper to test if a character is a space or a line delimiter\n\n  }, {\n    key: \"__isCharTrimable\",\n    value: function __isCharTrimable(chr) {\n      return chr === space || chr === tab || chr === cr || chr === nl;\n    }\n  }, {\n    key: \"__onRow\",\n    value: function __onRow() {\n      var _this$options2 = this.options,\n          columns = _this$options2.columns,\n          info = _this$options2.info,\n          from = _this$options2.from,\n          relax_column_count = _this$options2.relax_column_count,\n          raw = _this$options2.raw,\n          skip_lines_with_empty_values = _this$options2.skip_lines_with_empty_values;\n      var _this$state2 = this.state,\n          enabled = _this$state2.enabled,\n          record = _this$state2.record; // Convert the first line into column names\n\n      if (columns === true) {\n        return this.__firstLineToColumns(record);\n      }\n\n      var recordLength = record.length;\n\n      if (columns === false && this.info.records === 0) {\n        this.state.expectedRecordLength = recordLength;\n      } else if (enabled === true) {\n        if (recordLength !== this.state.expectedRecordLength) {\n          if (relax_column_count === true) {\n            this.info.invalid_field_length++;\n          } else {\n            if (columns === false) {\n              var err = this.__error(new CsvError('CSV_INVALID_RECORD_LENGTH_DONT_PREVIOUS_RECORDS', ['Invalid Record Length:', \"expect \".concat(this.state.expectedRecordLength, \",\"), \"got \".concat(recordLength, \" on line \").concat(this.info.lines)], this.__context(), {\n                record: record\n              }));\n\n              if (err !== undefined) return err;\n            } else {\n              var _err5 = this.__error(new CsvError('CSV_INVALID_RECORD_LENGTH_DONT_MATCH_COLUMNS', ['Invalid Record Length:', \"header length is \".concat(columns.length, \",\"), \"got \".concat(recordLength, \" on line \").concat(this.info.lines)], this.__context(), {\n                record: record\n              }));\n\n              if (_err5 !== undefined) return _err5;\n            }\n          }\n        }\n      }\n\n      if (enabled === false) {\n        return this.__resetRow();\n      }\n\n      if (skip_lines_with_empty_values === true) {\n        if (record.every(function (field) {\n          return field == null || field.toString && field.toString().trim() === '';\n        })) {\n          this.__resetRow();\n\n          return;\n        }\n      }\n\n      if (this.state.recordHasError === true) {\n        this.__resetRow();\n\n        this.state.recordHasError = false;\n        return;\n      }\n\n      this.info.records++;\n\n      if (from === 1 || this.info.records >= from) {\n        if (columns !== false) {\n          var obj = {}; // Transform record array to an object\n\n          for (var i in record) {\n            if (columns[i] === undefined || columns[i].disabled) continue;\n            obj[columns[i].name] = record[i];\n          }\n\n          var objname = this.options.objname;\n\n          if (objname === undefined) {\n            if (raw === true || info === true) {\n              this.push(Object.assign({\n                record: obj\n              }, raw === true ? {\n                raw: this.state.rawBuffer.toString()\n              } : {}, info === true ? {\n                info: this.state.info\n              } : {}));\n            } else {\n              this.push(obj);\n            }\n          } else {\n            if (raw === true || info === true) {\n              this.push(Object.assign({\n                record: [obj[objname], obj]\n              }, raw === true ? {\n                raw: this.state.rawBuffer.toString()\n              } : {}, info === true ? {\n                info: this.state.info\n              } : {}));\n            } else {\n              this.push([obj[objname], obj]);\n            }\n          }\n        } else {\n          if (raw === true || info === true) {\n            this.push(Object.assign({\n              record: record\n            }, raw === true ? {\n              raw: this.state.rawBuffer.toString()\n            } : {}, info === true ? {\n              info: this.state.info\n            } : {}));\n          } else {\n            this.push(record);\n          }\n        }\n      }\n\n      this.__resetRow();\n    }\n  }, {\n    key: \"__firstLineToColumns\",\n    value: function __firstLineToColumns(record) {\n      var firstLineToHeaders = this.state.firstLineToHeaders;\n\n      try {\n        var headers = firstLineToHeaders === undefined ? record : firstLineToHeaders.call(null, record);\n\n        if (!Array.isArray(headers)) {\n          return this.__error(new CsvError('CSV_INVALID_COLUMN_MAPPING', ['Invalid Column Mapping:', 'expect an array from column function,', \"got \".concat(JSON.stringify(headers))], this.__context(), {\n            headers: headers\n          }));\n        }\n\n        var normalizedHeaders = normalizeColumnsArray(headers);\n        this.state.expectedRecordLength = normalizedHeaders.length;\n        this.options.columns = normalizedHeaders;\n\n        this.__resetRow();\n\n        return;\n      } catch (err) {\n        return err;\n      }\n    }\n  }, {\n    key: \"__resetRow\",\n    value: function __resetRow() {\n      if (this.options.raw === true) {\n        this.state.rawBuffer.reset();\n      }\n\n      this.state.record = [];\n      this.state.record_length = 0;\n    }\n  }, {\n    key: \"__onField\",\n    value: function __onField() {\n      var _this$options3 = this.options,\n          cast = _this$options3.cast,\n          rtrim = _this$options3.rtrim,\n          max_record_size = _this$options3.max_record_size;\n      var _this$state3 = this.state,\n          enabled = _this$state3.enabled,\n          wasQuoting = _this$state3.wasQuoting; // Deal with from_to options\n\n      if (this.options.columns !== true && enabled === false) {\n        return this.__resetField();\n      }\n\n      var field = this.state.field.toString();\n\n      if (rtrim === true && wasQuoting === false) {\n        field = field.trimRight();\n      }\n\n      if (cast === true) {\n        var _this$__cast = this.__cast(field),\n            _this$__cast2 = _slicedToArray(_this$__cast, 2),\n            err = _this$__cast2[0],\n            f = _this$__cast2[1];\n\n        if (err !== undefined) return err;\n        field = f;\n      }\n\n      this.state.record.push(field); // Increment record length if record size must not exceed a limit\n\n      if (max_record_size !== 0 && typeof field === 'string') {\n        this.state.record_length += field.length;\n      }\n\n      this.__resetField();\n    }\n  }, {\n    key: \"__resetField\",\n    value: function __resetField() {\n      this.state.field.reset();\n      this.state.wasQuoting = false;\n    } // Return a tuple with the error and the casted value\n\n  }, {\n    key: \"__cast\",\n    value: function __cast(field) {\n      var _this$options4 = this.options,\n          columns = _this$options4.columns,\n          relax_column_count = _this$options4.relax_column_count;\n      var isColumns = Array.isArray(columns); // Dont loose time calling cast\n      // because the final record is an object\n      // and this field can't be associated to a key present in columns\n\n      if (isColumns === true && relax_column_count && this.options.columns.length <= this.state.record.length) {\n        return [undefined, undefined];\n      }\n\n      var context = this.__context();\n\n      if (this.state.castField !== null) {\n        try {\n          return [undefined, this.state.castField.call(null, field, context)];\n        } catch (err) {\n          return [err];\n        }\n      }\n\n      if (this.__isFloat(field)) {\n        return [undefined, parseFloat(field)];\n      } else if (this.options.cast_date !== false) {\n        return [undefined, this.options.cast_date.call(null, field, context)];\n      }\n\n      return [undefined, field];\n    } // Keep it in case we implement the `cast_int` option\n    // __isInt(value){\n    //   // return Number.isInteger(parseInt(value))\n    //   // return !isNaN( parseInt( obj ) );\n    //   return /^(\\-|\\+)?[1-9][0-9]*$/.test(value)\n    // }\n\n  }, {\n    key: \"__isFloat\",\n    value: function __isFloat(value) {\n      return value - parseFloat(value) + 1 >= 0; // Borrowed from jquery\n    }\n  }, {\n    key: \"__compareBytes\",\n    value: function __compareBytes(sourceBuf, targetBuf, pos, firtByte) {\n      if (sourceBuf[0] !== firtByte) return 0;\n      var sourceLength = sourceBuf.length;\n\n      for (var i = 1; i < sourceLength; i++) {\n        if (sourceBuf[i] !== targetBuf[pos + i]) return 0;\n      }\n\n      return sourceLength;\n    }\n  }, {\n    key: \"__needMoreData\",\n    value: function __needMoreData(i, bufLen, end) {\n      if (end) {\n        return false;\n      }\n\n      var _this$options5 = this.options,\n          comment = _this$options5.comment,\n          delimiter = _this$options5.delimiter;\n      var _this$state4 = this.state,\n          quoting = _this$state4.quoting,\n          recordDelimiterMaxLength = _this$state4.recordDelimiterMaxLength;\n      var numOfCharLeft = bufLen - i - 1;\n      var requiredLength = Math.max( // Skip if the remaining buffer smaller than comment\n      comment ? comment.length : 0, // Skip if the remaining buffer smaller than row delimiter\n      recordDelimiterMaxLength, // Skip if the remaining buffer can be row delimiter following the closing quote\n      // 1 is for quote.length\n      quoting ? 1 + recordDelimiterMaxLength : 0, // Skip if the remaining buffer can be delimiter\n      delimiter.length, // Skip if the remaining buffer can be escape sequence\n      // 1 is for escape.length\n      1);\n      return numOfCharLeft < requiredLength;\n    }\n  }, {\n    key: \"__isDelimiter\",\n    value: function __isDelimiter(chr, buf, pos) {\n      var delimiter = this.options.delimiter;\n      var delLength = delimiter.length;\n      if (delimiter[0] !== chr) return 0;\n\n      for (var i = 1; i < delLength; i++) {\n        if (delimiter[i] !== buf[pos + i]) return 0;\n      }\n\n      return delimiter.length;\n    }\n  }, {\n    key: \"__isRecordDelimiter\",\n    value: function __isRecordDelimiter(chr, buf, pos) {\n      var record_delimiter = this.options.record_delimiter;\n      var recordDelimiterLength = record_delimiter.length;\n\n      loop1: for (var i = 0; i < recordDelimiterLength; i++) {\n        var rd = record_delimiter[i];\n        var rdLength = rd.length;\n\n        if (rd[0] !== chr) {\n          continue;\n        }\n\n        for (var j = 1; j < rdLength; j++) {\n          if (rd[j] !== buf[pos + j]) {\n            continue loop1;\n          }\n        }\n\n        return rd.length;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"__autoDiscoverRowDelimiter\",\n    value: function __autoDiscoverRowDelimiter(buf, pos) {\n      var chr = buf[pos];\n\n      if (chr === cr) {\n        if (buf[pos + 1] === nl) {\n          this.options.record_delimiter.push(Buffer.from('\\r\\n'));\n          this.state.recordDelimiterMaxLength = 2;\n          return 2;\n        } else {\n          this.options.record_delimiter.push(Buffer.from('\\r'));\n          this.state.recordDelimiterMaxLength = 1;\n          return 1;\n        }\n      } else if (chr === nl) {\n        this.options.record_delimiter.push(Buffer.from('\\n'));\n        this.state.recordDelimiterMaxLength = 1;\n        return 1;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"__error\",\n    value: function __error(msg) {\n      var skip_lines_with_error = this.options.skip_lines_with_error;\n      var err = typeof msg === 'string' ? new Error(msg) : msg;\n\n      if (skip_lines_with_error) {\n        this.state.recordHasError = true;\n        this.emit('skip', err);\n        return undefined;\n      } else {\n        return err;\n      }\n    }\n  }, {\n    key: \"__context\",\n    value: function __context() {\n      var columns = this.options.columns;\n      var isColumns = Array.isArray(columns);\n      return {\n        column: isColumns === true ? columns.length >= this.state.record.length ? columns[this.state.record.length].name : null : this.state.record.length,\n        empty_lines: this.info.empty_lines,\n        header: columns === true,\n        index: this.state.record.length,\n        invalid_field_length: this.info.invalid_field_length,\n        quoting: this.state.wasQuoting,\n        lines: this.info.lines,\n        records: this.info.records\n      };\n    }\n  }]);\n\n  return Parser;\n}(Transform);\n\nvar parse = function parse() {\n  var data, options, callback;\n\n  for (var i in arguments) {\n    var argument = arguments[i];\n\n    var type = _typeof(argument);\n\n    if (data === undefined && (typeof argument === 'string' || Buffer.isBuffer(argument))) {\n      data = argument;\n    } else if (options === undefined && isObject(argument)) {\n      options = argument;\n    } else if (callback === undefined && type === 'function') {\n      callback = argument;\n    } else {\n      throw new Error(\"Invalid argument: got \".concat(JSON.stringify(argument), \" at index \").concat(i));\n    }\n  }\n\n  var parser = new Parser(options);\n\n  if (callback) {\n    var records = options === undefined || options.objname === undefined ? [] : {};\n    parser.on('readable', function () {\n      var record;\n\n      while ((record = this.read()) !== null) {\n        if (options === undefined || options.objname === undefined) {\n          records.push(record);\n        } else {\n          records[record[0]] = record[1];\n        }\n      }\n    });\n    parser.on('error', function (err) {\n      callback(err, undefined, parser.info);\n    });\n    parser.on('end', function () {\n      callback(undefined, records, parser.info);\n    });\n  }\n\n  if (data !== undefined) {\n    parser.write(data);\n    parser.end();\n  }\n\n  return parser;\n};\n\nvar CsvError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(CsvError, _Error);\n\n  function CsvError(code, message) {\n    var _this2;\n\n    _classCallCheck(this, CsvError);\n\n    if (Array.isArray(message)) message = message.join(' ');\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(CsvError).call(this, [message]));\n    Error.captureStackTrace(_assertThisInitialized(_this2), CsvError);\n    _this2.code = code;\n\n    for (var _len = arguments.length, contexts = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      contexts[_key - 2] = arguments[_key];\n    }\n\n    for (var _i2 = 0, _contexts = contexts; _i2 < _contexts.length; _i2++) {\n      var context = _contexts[_i2];\n\n      for (var key in context) {\n        var value = Buffer.isBuffer(context[key]) ? context[key].toString() : context[key];\n        _this2[key] = JSON.parse(JSON.stringify(value));\n      }\n    }\n\n    return _this2;\n  }\n\n  return CsvError;\n}(_wrapNativeSuper(Error));\n\nparse.Parser = Parser;\nparse.CsvError = CsvError;\nmodule.exports = parse;\n\nvar underscore = function underscore(str) {\n  return str.replace(/([A-Z])/g, function (_, match) {\n    return '_' + match.toLowerCase();\n  });\n};\n\nvar isObject = function isObject(obj) {\n  return _typeof(obj) === 'object' && obj !== null && !Array.isArray(obj);\n};\n\nvar normalizeColumnsArray = function normalizeColumnsArray(columns) {\n  var normalizedColumns = [];\n\n  for (var i = 0; i < columns.length; i++) {\n    var column = columns[i];\n\n    if (column === undefined || column === null || column === false) {\n      normalizedColumns[i] = {\n        disabled: true\n      };\n    } else if (typeof column === 'string') {\n      normalizedColumns[i] = {\n        name: column\n      };\n    } else if (isObject(column)) {\n      if (typeof column.name !== 'string') {\n        throw new Error(\"Invalid Option columns: property \\\"name\\\" is required at position \".concat(i, \" when column is an object literal\"));\n      }\n\n      normalizedColumns[i] = column;\n    } else {\n      throw new Error(\"Invalid Option columns: expect a string or an object, got \".concat(JSON.stringify(column), \" at position \").concat(i));\n    }\n  }\n\n  return normalizedColumns;\n};\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./ResizeableBuffer\":32,\"buffer\":30,\"stream\":67}],34:[function(require,module,exports){\n(function (Buffer){\n\"use strict\";\n\nvar parse = require('.');\n\nmodule.exports = function (data) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof data === 'string') {\n    data = Buffer.from(data);\n  }\n\n  var records = options && options.objname ? {} : [];\n  var parser = new parse.Parser(options);\n\n  parser.push = function (record) {\n    if (options.objname === undefined) records.push(record);else {\n      records[record[0]] = record[1];\n    }\n  };\n\n  var err1 = parser.__parse(data, false);\n\n  if (err1 !== undefined) throw err1;\n\n  var err2 = parser.__parse(undefined, true);\n\n  if (err2 !== undefined) throw err2;\n  return records;\n};\n}).call(this,require(\"buffer\").Buffer)\n\n},{\".\":33,\"buffer\":30}],35:[function(require,module,exports){\n(function (process){\n// Generated by CoffeeScript 1.12.7\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\nStringifier = function(opts) {\n  var base, base1, base10, base11, base12, base13, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  if (opts == null) {\n    opts = {};\n  }\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  stream.Transform.call(this, options);\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedEmpty == null) {\n    base3.quotedEmpty = void 0;\n  }\n  if ((base4 = this.options).quotedString == null) {\n    base4.quotedString = false;\n  }\n  if ((base5 = this.options).eof == null) {\n    base5.eof = true;\n  }\n  if ((base6 = this.options).escape == null) {\n    base6.escape = '\"';\n  }\n  if ((base7 = this.options).columns == null) {\n    base7.columns = null;\n  }\n  if ((base8 = this.options).header == null) {\n    base8.header = false;\n  }\n  if ((base9 = this.options).formatters == null) {\n    base9.formatters = {};\n  }\n  if ((base10 = this.options.formatters).date == null) {\n    base10.date = function(value) {\n      return '' + value.getTime();\n    };\n  }\n  if ((base11 = this.options.formatters).bool == null) {\n    base11.bool = function(value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base12 = this.options.formatters).object == null) {\n    base12.object = function(value) {\n      return JSON.stringify(value);\n    };\n  }\n  if ((base13 = this.options).rowDelimiter == null) {\n    base13.rowDelimiter = '\\n';\n  }\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function() {\n  var k, label, labels;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  labels = this.options.columns;\n  if (typeof labels === 'object') {\n    labels = (function() {\n      var results;\n      results = [];\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n      return results;\n    })();\n  }\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function(chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function(chunk, encoding, callback) {\n  var base, e, preserve;\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function(line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n  if (typeof line !== 'object') {\n    return line;\n  }\n  columns = this.options.columns;\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(line)) {\n    _line = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = (typeof value === 'undefined' || value === null) ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n  if (Array.isArray(line)) {\n    newLine = '';\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n      if (typeof field === 'string') {\n\n      } else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newLine += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\n        newLine += quote + quote;\n      }\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n    line = newLine;\n  }\n  return line;\n};\n\n}).call(this,require('_process'))\n\n},{\"_process\":46,\"lodash.get\":42,\"stream\":67,\"util\":72}],36:[function(require,module,exports){\n(function (Buffer){\n// Generated by CoffeeScript 1.12.7\nvar StringDecoder, stringify;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nstringify = require('./index');\n\nmodule.exports = function(records, options) {\n  var data, decoder, i, len, record, stringifier;\n  if (options == null) {\n    options = {};\n  }\n  data = [];\n  if (records instanceof Buffer) {\n    decoder = new StringDecoder();\n    records = decoder.write(records);\n  }\n  stringifier = new stringify.Stringifier(options);\n  stringifier.push = function(record) {\n    if (record) {\n      return data.push(record.toString());\n    }\n  };\n  for (i = 0, len = records.length; i < len; i++) {\n    record = records[i];\n    stringifier.write(record);\n  }\n  stringifier.end();\n  return data.join('');\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./index\":35,\"buffer\":30,\"string_decoder\":68}],37:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n\n},{}],38:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],39:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],40:[function(require,module,exports){\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n},{}],41:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],42:[function(require,module,exports){\n(function (global){\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],43:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.14';\n\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_PARTIAL_FLAG = 32;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"']/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  var baseCreate = (function() {\n    function object() {}\n    return function(proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n      object.prototype = proto;\n      var result = new object;\n      object.prototype = undefined;\n      return result;\n    };\n  }());\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      baseAssignValue(object, key, value);\n    }\n  }\n\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function baseAssignValue(object, key, value) {\n    object[key] = value;\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    return objectToString(value);\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  var baseIsArguments = noop;\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {boolean} bitmask The bitmask flags.\n   *  1 - Unordered comparison\n   *  2 - Partial comparison\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = objIsArr ? arrayTag : baseGetTag(object),\n        othTag = othIsArr ? arrayTag : baseGetTag(other);\n\n    objTag = objTag == argsTag ? objectTag : objTag;\n    othTag = othTag == argsTag ? objectTag : othTag;\n\n    var objIsObj = objTag == objectTag,\n        othIsObj = othTag == objectTag,\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} paths The property paths to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    return setToString(overRest(func, start, identity), func + '');\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & WRAP_BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, bitmask, customizer, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseRest` which flattens the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @returns {Function} Returns the new function.\n   */\n  function flatRest(func) {\n    return setToString(overRest(func, undefined, flatten), func + '');\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n\n    return !!length &&\n      (type == 'number' ||\n        (type != 'symbol' && reIsUint.test(value))) &&\n          (value > -1 && value % 1 == 0 && value < length);\n  }\n\n  /**\n   * Checks if the given arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n   *  else `false`.\n   */\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n    var type = typeof index;\n    if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)\n        ) {\n      return eq(object[index], value);\n    }\n    return false;\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overRest(func, start, transform) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = transform(array);\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * Sets the `toString` method of `func` to return `string`.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n  var setToString = identity;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length;\n    if (!length) {\n      return [];\n    }\n    var args = Array(length - 1),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array == null ? 0 : array.length;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _.forEach([1, 2], function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, [function(o) { return o.user; }]);\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one millisecond.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n      !propertyIsEnumerable.call(value, 'callee');\n  };\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && baseGetTag(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are compared by strict equality, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && baseGetTag(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties == null ? result : assign(result, properties);\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(object, sources) {\n    object = Object(object);\n\n    var index = -1;\n    var length = sources.length;\n    var guard = length > 2 ? sources[2] : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      length = 1;\n    }\n\n    while (++index < length) {\n      var source = sources[index];\n      var props = keysIn(source);\n      var propsIndex = -1;\n      var propsLength = props.length;\n\n      while (++propsIndex < propsLength) {\n        var key = props[propsIndex];\n        var value = object[key];\n\n        if (value === undefined ||\n            (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n          object[key] = source[key];\n        }\n      }\n    }\n\n    return object;\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [paths] The property paths to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = flatRest(function(object, paths) {\n    return object == null ? {} : basePick(object, paths);\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object == null ? [] : baseValues(object, keys(object));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n   * corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],44:[function(require,module,exports){\nmodule.exports = MultiStream\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\ninherits(MultiStream, stream.Readable)\n\nfunction MultiStream (streams, opts) {\n  var self = this\n  if (!(self instanceof MultiStream)) return new MultiStream(streams, opts)\n  stream.Readable.call(self, opts)\n\n  self.destroyed = false\n\n  self._drained = false\n  self._forwarding = false\n  self._current = null\n  self._toStreams2 = (opts && opts.objectMode) ? toStreams2Obj : toStreams2Buf\n\n  if (typeof streams === 'function') {\n    self._queue = streams\n  } else {\n    self._queue = streams.map(self._toStreams2)\n    self._queue.forEach(function (stream) {\n      if (typeof stream !== 'function') self._attachErrorListener(stream)\n    })\n  }\n\n  self._next()\n}\n\nMultiStream.obj = function (streams) {\n  return new MultiStream(streams, { objectMode: true, highWaterMark: 16 })\n}\n\nMultiStream.prototype._read = function () {\n  this._drained = true\n  this._forward()\n}\n\nMultiStream.prototype._forward = function () {\n  if (this._forwarding || !this._drained || !this._current) return\n  this._forwarding = true\n\n  var chunk\n  while ((chunk = this._current.read()) !== null) {\n    this._drained = this.push(chunk)\n  }\n\n  this._forwarding = false\n}\n\nMultiStream.prototype.destroy = function (err) {\n  if (this.destroyed) return\n  this.destroyed = true\n\n  if (this._current && this._current.destroy) this._current.destroy()\n  if (typeof this._queue !== 'function') {\n    this._queue.forEach(function (stream) {\n      if (stream.destroy) stream.destroy()\n    })\n  }\n\n  if (err) this.emit('error', err)\n  this.emit('close')\n}\n\nMultiStream.prototype._next = function () {\n  var self = this\n  self._current = null\n\n  if (typeof self._queue === 'function') {\n    self._queue(function (err, stream) {\n      if (err) return self.destroy(err)\n      stream = self._toStreams2(stream)\n      self._attachErrorListener(stream)\n      self._gotNextStream(stream)\n    })\n  } else {\n    var stream = self._queue.shift()\n    if (typeof stream === 'function') {\n      stream = self._toStreams2(stream())\n      self._attachErrorListener(stream)\n    }\n    self._gotNextStream(stream)\n  }\n}\n\nMultiStream.prototype._gotNextStream = function (stream) {\n  var self = this\n\n  if (!stream) {\n    self.push(null)\n    self.destroy()\n    return\n  }\n\n  self._current = stream\n  self._forward()\n\n  stream.on('readable', onReadable)\n  stream.once('end', onEnd)\n  stream.once('close', onClose)\n\n  function onReadable () {\n    self._forward()\n  }\n\n  function onClose () {\n    if (!stream._readableState.ended) {\n      self.destroy()\n    }\n  }\n\n  function onEnd () {\n    self._current = null\n    stream.removeListener('readable', onReadable)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('close', onClose)\n    self._next()\n  }\n}\n\nMultiStream.prototype._attachErrorListener = function (stream) {\n  var self = this\n  if (!stream) return\n\n  stream.once('error', onError)\n\n  function onError (err) {\n    stream.removeListener('error', onError)\n    self.destroy(err)\n  }\n}\n\nfunction toStreams2Obj (s) {\n  return toStreams2(s, {objectMode: true, highWaterMark: 16})\n}\n\nfunction toStreams2Buf (s) {\n  return toStreams2(s)\n}\n\nfunction toStreams2 (s, opts) {\n  if (!s || typeof s === 'function' || s._readableState) return s\n\n  var wrap = new stream.Readable(opts).wrap(s)\n  if (s.destroy) {\n    wrap.destroy = s.destroy.bind(s)\n  }\n  return wrap\n}\n\n},{\"inherits\":39,\"readable-stream\":62}],45:[function(require,module,exports){\n(function (process){\n'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":46}],46:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],47:[function(require,module,exports){\n'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n},{\"asap/raw\":27}],48:[function(require,module,exports){\n'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n},{\"./core.js\":47}],49:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],50:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],51:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":49,\"./encode\":50}],52:[function(require,module,exports){\nmodule.exports = require('./lib/_stream_duplex.js');\n\n},{\"./lib/_stream_duplex.js\":53}],53:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};\n},{\"./_stream_readable\":55,\"./_stream_writable\":57,\"core-util-is\":31,\"inherits\":39,\"process-nextick-args\":45}],54:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":56,\"core-util-is\":31,\"inherits\":39}],55:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./_stream_duplex\":53,\"./internal/streams/BufferList\":58,\"./internal/streams/destroy\":59,\"./internal/streams/stream\":60,\"_process\":46,\"core-util-is\":31,\"events\":37,\"inherits\":39,\"isarray\":41,\"process-nextick-args\":45,\"safe-buffer\":65,\"string_decoder/\":68,\"util\":29}],56:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n},{\"./_stream_duplex\":53,\"core-util-is\":31,\"inherits\":39}],57:[function(require,module,exports){\n(function (process,global,setImmediate){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"timers\").setImmediate)\n\n},{\"./_stream_duplex\":53,\"./internal/streams/destroy\":59,\"./internal/streams/stream\":60,\"_process\":46,\"core-util-is\":31,\"inherits\":39,\"process-nextick-args\":45,\"safe-buffer\":65,\"timers\":69,\"util-deprecate\":70}],58:[function(require,module,exports){\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}\n},{\"safe-buffer\":65,\"util\":29}],59:[function(require,module,exports){\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n},{\"process-nextick-args\":45}],60:[function(require,module,exports){\nmodule.exports = require('events').EventEmitter;\n\n},{\"events\":37}],61:[function(require,module,exports){\nmodule.exports = require('./readable').PassThrough\n\n},{\"./readable\":62}],62:[function(require,module,exports){\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n},{\"./lib/_stream_duplex.js\":53,\"./lib/_stream_passthrough.js\":54,\"./lib/_stream_readable.js\":55,\"./lib/_stream_transform.js\":56,\"./lib/_stream_writable.js\":57}],63:[function(require,module,exports){\nmodule.exports = require('./readable').Transform\n\n},{\"./readable\":62}],64:[function(require,module,exports){\nmodule.exports = require('./lib/_stream_writable.js');\n\n},{\"./lib/_stream_writable.js\":57}],65:[function(require,module,exports){\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n},{\"buffer\":30}],66:[function(require,module,exports){\n(function (Buffer){\n;(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":30,\"stream\":67,\"string_decoder\":68}],67:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n},{\"events\":37,\"inherits\":39,\"readable-stream/duplex.js\":52,\"readable-stream/passthrough.js\":61,\"readable-stream/readable.js\":62,\"readable-stream/transform.js\":63,\"readable-stream/writable.js\":64}],68:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n},{\"safe-buffer\":65}],69:[function(require,module,exports){\n(function (setImmediate,clearImmediate){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":46,\"timers\":69}],70:[function(require,module,exports){\n(function (global){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],71:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],72:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./support/isBuffer\":71,\"_process\":46,\"inherits\":39}],73:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n\n},{}],74:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n\n},{\"./defaults\":75,\"xmlbuilder\":100}],75:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n\n},{}],76:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    return Parser;\n\n  })(events.EventEmitter);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n}).call(this);\n\n},{\"./bom\":73,\"./defaults\":75,\"./processors\":77,\"events\":37,\"sax\":66,\"timers\":69}],77:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n\n},{}],78:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n}).call(this);\n\n},{\"./builder\":74,\"./defaults\":75,\"./parser\":76,\"./processors\":77}],79:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n}).call(this);\n\n},{}],80:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute;\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.options = parent.options;\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing attribute name of element \" + parent.name);\n      }\n      if (value == null) {\n        throw new Error(\"Missing attribute value for attribute \" + name + \" of element \" + parent.name);\n      }\n      this.name = this.stringify.attName(name);\n      this.value = this.stringify.attValue(value);\n    }\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.set(options).attribute(this);\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n\n},{}],81:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text\");\n      }\n      this.text = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.set(options).cdata(this);\n    };\n\n    return XMLCData;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":92}],82:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLComment, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text\");\n      }\n      this.text = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.set(options).comment(this);\n    };\n\n    return XMLComment;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":92}],83:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":92}],84:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.eleName(name);\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdElement(this);\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":92}],85:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing entity name\");\n      }\n      if (value == null) {\n        throw new Error(\"Missing entity value\");\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.eleName(name);\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity\");\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity\");\n        }\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity\");\n        }\n      }\n    }\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdEntity(this);\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":79,\"./XMLNode\":92}],86:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing notation name\");\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity\");\n      }\n      this.name = this.stringify.eleName(name);\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdNotation(this);\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":92}],87:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.set(options).declaration(this);\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":79,\"./XMLNode\":92}],88:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var ref, ref1;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\n      }\n      if (sysID == null) {\n        ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.set(options).docType(this);\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":79,\"./XMLDTDAttList\":83,\"./XMLDTDElement\":84,\"./XMLDTDEntity\":85,\"./XMLDTDNotation\":86,\"./XMLNode\":92}],89:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n      this.isDocument = true;\n    }\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer.set(writerOptions);\n      }\n      return writer.document(this);\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.set(options).document(this);\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":79,\"./XMLNode\":92,\"./XMLStringWriter\":96,\"./XMLStringifier\":97}],90:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject;\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter(options);\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter(writerOptions);\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node\");\n      }\n      this.openCurrent();\n      name = name.valueOf();\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.dtdElement.apply(this, arguments);\n      } else {\n        return this.node(name, attributes, text);\n      }\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode\");\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\n          this.root = node;\n        }\n        this.onData(this.writer.openNode(node, this.currentLevel));\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      if (!node.isClosed) {\n        this.onData(this.writer.closeNode(node, this.currentLevel));\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n\n},{\"./Utility\":79,\"./XMLAttribute\":80,\"./XMLCData\":81,\"./XMLComment\":82,\"./XMLDTDAttList\":83,\"./XMLDTDElement\":84,\"./XMLDTDEntity\":85,\"./XMLDTDNotation\":86,\"./XMLDeclaration\":87,\"./XMLDocType\":88,\"./XMLElement\":91,\"./XMLProcessingInstruction\":93,\"./XMLRaw\":94,\"./XMLStringWriter\":96,\"./XMLStringifier\":97,\"./XMLText\":98}],91:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, i, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      name = name.valueOf();\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":79,\"./XMLAttribute\":80,\"./XMLNode\":92}],92:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.children = [];\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      }\n    }\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if ((isObject(val)) && (isEmpty(val))) {\n            val = null;\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            lastChild = this.element(key);\n            lastChild.element(val);\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref1;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      attributes || (attributes = {});\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children[0] instanceof XMLDeclaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.doctype = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref1 = doc.children;\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n        child = ref1[i];\n        if (child instanceof XMLDocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref2 = doc.children;\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n        child = ref2[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n\n},{\"./Utility\":79,\"./XMLCData\":81,\"./XMLComment\":82,\"./XMLDeclaration\":87,\"./XMLDocType\":88,\"./XMLElement\":91,\"./XMLProcessingInstruction\":93,\"./XMLRaw\":94,\"./XMLText\":98}],93:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n      this.target = this.stringify.insTarget(target);\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.set(options).processingInstruction(this);\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":92}],94:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text\");\n      }\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.set(options).raw(this);\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":92}],95:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      XMLStreamWriter.__super__.constructor.call(this, options);\n      this.stream = stream;\n    }\n\n    XMLStreamWriter.prototype.document = function(doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write(this.spacebeforeslash + '?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write(this.spacebeforeslash + '>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write(this.spacebeforeslash + '/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function(node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n\n},{\"./XMLCData\":81,\"./XMLComment\":82,\"./XMLDTDAttList\":83,\"./XMLDTDElement\":84,\"./XMLDTDEntity\":85,\"./XMLDTDNotation\":86,\"./XMLDeclaration\":87,\"./XMLDocType\":88,\"./XMLElement\":91,\"./XMLProcessingInstruction\":93,\"./XMLRaw\":94,\"./XMLText\":98,\"./XMLWriterBase\":99}],96:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n\n},{\"./XMLCData\":81,\"./XMLComment\":82,\"./XMLDTDAttList\":83,\"./XMLDTDElement\":84,\"./XMLDTDEntity\":85,\"./XMLDTDNotation\":86,\"./XMLDeclaration\":87,\"./XMLDocType\":88,\"./XMLElement\":91,\"./XMLProcessingInstruction\":93,\"./XMLRaw\":94,\"./XMLText\":98,\"./XMLWriterBase\":99}],97:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n\n},{}],98:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text\");\n      }\n      this.value = this.stringify.eleText(text);\n    }\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.set(options).text(this);\n    };\n\n    return XMLText;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":92}],99:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref6 = options.writer || {};\n      for (key in ref6) {\n        if (!hasProp.call(ref6, key)) continue;\n        value = ref6[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function(options) {\n      var key, ref, value;\n      options || (options = {});\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function(level) {\n      var indent;\n      if (this.pretty) {\n        indent = (level || 0) + this.offset + 1;\n        if (indent > 0) {\n          return new Array(indent).join(this.indent);\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n\n},{}],100:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.doctype(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n}).call(this);\n\n},{\"./Utility\":79,\"./XMLDocument\":89,\"./XMLDocumentCB\":90,\"./XMLStreamWriter\":95,\"./XMLStringWriter\":96}]},{},[1])(1)\n});\n\n","'use strict';\nmodule.exports = '1.9.3';\n","// This file content is dynamically created in build script\n\"use strict\";\nmodule.exports = {\n  'inherits': require('inherits'),\n  'util': require('util'),\n  'events': require('events'),\n  'lodash/core': require('lodash/core'),\n  'readable-stream': require('readable-stream'),\n  'multistream': require('multistream'),\n  './VERSION': require('./VERSION'),\n  './cache': require('./cache'),\n  './connection': require('./connection'),\n  './core': require('./core'),\n  './csv': require('./csv'),\n  './date': require('./date'),\n  './http-api': require('./http-api'),\n  './logger': require('./logger'),\n  './oauth2': require('./oauth2'),\n  './process': require('./process'),\n  './promise': require('./promise'),\n  './query': require('./query'),\n  './quick-action': require('./quick-action'),\n  './record-stream': require('./record-stream'),\n  './record': require('./record'),\n  './soap': require('./soap'),\n  './sobject': require('./sobject'),\n  './soql-builder': require('./soql-builder'),\n  './transport': require('./transport')\n};","/*global Sfdc */\n'use strict';\n\nvar Duplex = require('readable-stream').Duplex,\n    _ = require('lodash/core');\n\nfunction parseHeaders(hs) {\n  var headers = {};\n  hs.split(/\\n/).forEach(function(line) {\n    var pair = line.split(/\\s*:\\s*/);\n    var name = pair[0].toLowerCase();\n    var value = pair[1];\n    headers[name] = value;\n  });\n  return headers;\n}\n\nmodule.exports = {\n\n  supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',\n\n  createRequest: function(signedRequest) {\n    return function(params, callback) {\n      var response;\n      var str = new Duplex();\n      str._read = function(size) {\n        if (response) {\n          str.push(response.body);\n        }\n      };\n      var bufs = [];\n      var sent = false;\n      str._write = function(chunk, encoding, callback) {\n        bufs.push(chunk.toString(encoding));\n        callback();\n      };\n      str.on('finish', function() {\n        if (!sent) {\n          send(bufs.join(''));\n          sent = true;\n        }\n      });\n      if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n        send(params.body);\n        sent = true;\n      }\n\n      function send(body) {\n        var settings = {\n          client: signedRequest.client,\n          method: params.method,\n          data: body\n        };\n        if (params.headers) {\n          settings.headers = {};\n          for (var name in params.headers) {\n            if (name.toLowerCase() === 'content-type') {\n              settings.contentType = params.headers[name];\n            } else {\n              settings.headers[name] = params.headers[name];\n            }\n          }\n        }\n        settings.success = function(data) {\n          var headers = parseHeaders(data.responseHeaders);\n          var body = data.payload;\n          if (!_.isString(body)) {\n            body = JSON.stringify(body);\n          }\n          response = {\n            statusCode : data.status,\n            headers: headers,\n            body: body\n          };\n          if (callback) {\n            callback(null, response, response.body);\n          }\n          str.end();\n        };\n        settings.failure = function(err) {\n          if (callback) {\n            callback(err);\n          }\n        };\n        Sfdc.canvas.client.ajax(params.url, settings);\n      }\n      return str;\n    };\n  }\n};\n","/**\n * @file Browser client connection management class\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    qs = require('querystring'),\n    _ = require('lodash/core'),\n    Connection = require('../connection'),\n    OAuth2 = require('../oauth2');\n\n/**\n * @private\n */\nfunction popupWin(url, w, h) {\n  var left = (screen.width/2)-(w/2);\n  var top = (screen.height/2)-(h/2);\n  return window.open(url, null, 'location=yes,toolbar=no,status=no,menubar=no,width='+w+',height='+h+',top='+top+',left='+left);\n}\n\nfunction handleCallbackResponse() {\n  var res = checkCallbackResponse();\n  var state = localStorage.getItem('jsforce_state');\n  if (res && state && res.body.state === state) {\n    localStorage.removeItem('jsforce_state');\n    var states = state.split('.');\n    var prefix = states[0], promptType = states[1];\n    var cli = new Client(prefix);\n    if (res.success) {\n      cli._storeTokens(res.body);\n      location.hash = '';\n    } else {\n      cli._storeError(res.body);\n    }\n    if (promptType === 'popup') { window.close(); }\n    return true;\n  }\n}\n\n/**\n * @private\n */\nfunction checkCallbackResponse() {\n  var params;\n  if (window.location.hash) {\n    params = qs.parse(window.location.hash.substring(1));\n    if (params.access_token) {\n      return { success: true, body: params };\n    }\n  } else if (window.location.search) {\n    params = qs.parse(window.location.search.substring(1));\n    if (params.error) {\n      return { success: false, body: params };\n    }\n  }\n}\n\n/** @private **/\nvar clientIdx = 0;\n\n\n/**\n * @class\n * @todo add document\n */\nvar Client = function(prefix) {\n  this._prefix = prefix || 'jsforce' + clientIdx++;\n  this.connection = null;\n};\n\ninherits(Client, events.EventEmitter);\n\n/**\n *\n */\nClient.prototype.init = function(config) {\n  if (handleCallbackResponse()) { return; }\n  this.config = config;\n  this.connection = new Connection(config);\n  var tokens = this._getTokens();\n  if (tokens) {\n    this.connection.initialize(tokens);\n    var self = this;\n    setTimeout(function() {\n      self.emit('connect', self.connection);\n    }, 10);\n  }\n};\n\n/**\n *\n */\nClient.prototype.login = function(options, callback) {\n  if (_.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  callback = callback || function(){ };\n  _.extend(options, this.config);\n  var self = this;\n  this._prompt(options, callback);\n};\n\n\nClient.prototype._prompt = function(options, callback) {\n  var self = this;\n  var oauth2 = new OAuth2(options);\n  var rand = Math.random().toString(36).substring(2);\n  var state = [ this._prefix, \"popup\", rand ].join('.');\n  localStorage.setItem(\"jsforce_state\", state);\n  var authzUrl = oauth2.getAuthorizationUrl({\n    response_type: 'token',\n    scope : options.scope,\n    state: state\n  });\n  var size = options.size || {};\n  var pw = popupWin(authzUrl, size.width || 912, size.height || 513);\n  if (!pw) {\n    state = [ this._prefix, \"redirect\", rand ].join('.');\n    localStorage.setItem(\"jsforce_state\", state);\n    authzUrl = oauth2.getAuthorizationUrl({\n      response_type: 'token',\n      scope : options.scope,\n      state: state\n    });\n    location.href = authzUrl;\n    return;\n  }\n  self._removeTokens();\n  var pid = setInterval(function() {\n    try {\n      if (!pw || pw.closed) {\n        clearInterval(pid);\n        var tokens = self._getTokens();\n        if (tokens) {\n          self.connection.initialize(tokens);\n          self.emit('connect', self.connection);\n          callback(null, { status: 'connect' });\n        } else {\n          var err = self._getError();\n          if (err) {\n            callback(new Error(err.error + \": \" + err.error_description));\n          } else {\n            callback(null, { status: 'cancel' });\n          }\n        }\n      }\n    } catch(e) {}\n  }, 1000);\n};\n\n/**\n *\n */\nClient.prototype.isLoggedIn = function() {\n  return !!(this.connection && this.connection.accessToken);\n};\n\n/**\n *\n */\nClient.prototype.logout = function() {\n  this.connection.logout();\n  this._removeTokens();\n  this.emit('disconnect');\n};\n\n/**\n * @private\n */\nClient.prototype._getTokens = function() {\n  var regexp = new RegExp(\"(^|;\\\\s*)\"+this._prefix+\"_loggedin=true(;|$)\");\n  if (document.cookie.match(regexp)) {\n    var issuedAt = Number(localStorage.getItem(this._prefix+'_issued_at'));\n    if (Date.now() < issuedAt + 2 * 60 * 60 * 1000) { // 2 hours\n      var userInfo;\n      var idUrl = localStorage.getItem(this._prefix + '_id');\n      if (idUrl) {\n        var ids = idUrl.split('/');\n        userInfo = { id: ids.pop(), organizationId: ids.pop(), url: idUrl };\n      }\n      return {\n        accessToken: localStorage.getItem(this._prefix + '_access_token'),\n        instanceUrl: localStorage.getItem(this._prefix + '_instance_url'),\n        userInfo: userInfo\n      };\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n */\nClient.prototype._storeTokens = function(params) {\n  localStorage.setItem(this._prefix + '_access_token', params.access_token);\n  localStorage.setItem(this._prefix + '_instance_url', params.instance_url);\n  localStorage.setItem(this._prefix + '_issued_at', params.issued_at);\n  localStorage.setItem(this._prefix + '_id', params.id);\n  document.cookie = this._prefix + '_loggedin=true;';\n};\n\n/**\n * @private\n */\nClient.prototype._removeTokens = function() {\n  localStorage.removeItem(this._prefix + '_access_token');\n  localStorage.removeItem(this._prefix + '_instance_url');\n  localStorage.removeItem(this._prefix + '_issued_at');\n  localStorage.removeItem(this._prefix + '_id');\n  document.cookie = this._prefix + '_loggedin=';\n};\n\n/**\n * @private\n */\nClient.prototype._getError = function() {\n  try {\n    var err = JSON.parse(localStorage.getItem(this._prefix + '_error'));\n    localStorage.removeItem(this._prefix + '_error');\n    return err;\n  } catch(e) {}\n};\n\n/**\n * @private\n */\nClient.prototype._storeError = function(err) {\n  localStorage.setItem(this._prefix + '_error', JSON.stringify(err));\n};\n\n/**\n *\n */\nmodule.exports = new Client();\n\nmodule.exports.Client = Client;\n","/*global window, document */\n'use strict';\n\nvar _index = 0;\n\nmodule.exports = {\n\n  supported: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n  createRequest: function(jsonpParam, timeout) {\n    jsonpParam = jsonpParam || 'callback';\n    timeout = timeout || 10000;\n\n    return function(params, callback) {\n      if (params.method.toUpperCase() !== 'GET') {\n        return callback(new Error('JSONP only supports GET request.'));\n      }\n      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);\n      var callbacks = window;\n      var url = params.url;\n      url += url.indexOf('?')>0 ? '&' : '?';\n      url += jsonpParam + '=' + cbFuncName;\n\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = url;\n      document.documentElement.appendChild(script);\n\n      var pid = setTimeout(function() {\n        cleanup();\n        callback(new Error(\"JSONP call time out.\"));\n      }, timeout);\n\n      callbacks[cbFuncName] = function(res) {\n        cleanup();\n        callback(null, {\n          statusCode: 200,\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify(res)\n        });\n      };\n\n      var cleanup = function() {\n        clearTimeout(pid);\n        document.documentElement.removeChild(script);\n        delete callbacks[cbFuncName];\n      };\n    };\n\n  }\n\n};","'use strict';\n\nvar Duplex = require('readable-stream').Duplex;\nvar _ = require('lodash/core');\n\nmodule.exports = function(params, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(params.method, params.url);\n  if (params.headers) {\n    for (var header in params.headers) {\n      xhr.setRequestHeader(header, params.headers[header]);\n    }\n  }\n  xhr.setRequestHeader(\"Accept\", \"*/*\");\n  var response;\n  var str = new Duplex();\n  str._read = function(size) {\n    if (response) {\n      str.push(response.body);\n    }\n  };\n  var bufs = [];\n  var sent = false;\n  str._write = function(chunk, encoding, callback) {\n    bufs.push(chunk.toString(encoding === \"buffer\" ? \"binary\" : encoding));\n    callback();\n  };\n  str.on('finish', function() {\n    if (!sent) {\n      xhr.send(bufs.join(''));\n      sent = true;\n    }\n  });\n  if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n    xhr.send(params.body);\n    sent = true;\n  }\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState === 4) {\n      var headerNames = getResponseHeaderNames(xhr);\n      var headers = {};\n      _.forEach(headerNames, function(headerName) {\n        if (headerName) {\n          headers[headerName] = xhr.getResponseHeader(headerName);\n        }\n      });\n      response = {\n        statusCode: xhr.status,\n        headers: headers,\n        body: xhr.response\n      };\n      if (!response.statusCode) {\n        response.statusCode = 400;\n        response.body = \"Access Declined\";\n      }\n      if (callback) {\n        callback(null, response, response.body);\n      }\n      str.end();\n    }\n  };\n  return str;\n};\n\nfunction getResponseHeaderNames(xhr) {\n  var headerLines = (xhr.getAllResponseHeaders() || \"\").split(/[\\r\\n]+/);\n  return _.map(headerLines, function(headerLine) {\n    return headerLine.split(/\\s*:/)[0].toLowerCase();\n  });\n}\n","/**\n * @file Manages asynchronous method response cache\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    _      = require('lodash/core');\n\n/**\n * Class for managing cache entry\n *\n * @private\n * @class\n * @constructor\n * @template T\n */\nvar CacheEntry = function() {\n  this.fetching = false;\n};\n\ninherits(CacheEntry, events.EventEmitter);\n\n/**\n * Get value in the cache entry\n *\n * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated\n * @returns {T|undefined}\n */\nCacheEntry.prototype.get = function(callback) {\n  if (!callback) {\n    return this._value;\n  } else {\n    this.once('value', callback);\n    if (!_.isUndefined(this._value)) {\n      this.emit('value', this._value);\n    }\n  }\n};\n\n/**\n * Set value in the cache entry\n *\n * @param {T} [value] - A value for caching\n */\nCacheEntry.prototype.set = function(value) {\n  this._value = value;\n  this.emit('value', this._value);\n};\n\n/**\n * Clear cached value\n */\nCacheEntry.prototype.clear = function() {\n  this.fetching = false;\n  delete this._value;\n};\n\n\n/**\n * Caching manager for async methods\n *\n * @class\n * @constructor\n */\nvar Cache = function() {\n  this._entries = {};\n};\n\n/**\n * retrive cache entry, or create if not exists.\n *\n * @param {String} [key] - Key of cache entry\n * @returns {CacheEntry}\n */\nCache.prototype.get = function(key) {\n  if (key && this._entries[key]) {\n    return this._entries[key];\n  } else {\n    var entry = new CacheEntry();\n    this._entries[key] = entry;\n    return entry;\n  }\n};\n\n/**\n * clear cache entries prefix matching given key\n * @param {String} [key] - Key prefix of cache entry to clear\n */\nCache.prototype.clear = function(key) {\n  for (var k in this._entries) {\n    if (!key || k.indexOf(key) === 0) {\n      this._entries[k].clear();\n    }\n  }\n};\n\n/**\n * create and return cache key from namespace and serialized arguments.\n * @private\n */\nfunction createCacheKey(namespace, args) {\n  args = Array.prototype.slice.apply(args);\n  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';\n}\n\n/**\n * Enable caching for async call fn to intercept the response and store it to cache.\n * The original async calll fn is always invoked.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeResponseCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  return function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n      callback = null;\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    entry.fetching = true;\n    if (callback) {\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n        callback(err, result);\n      });\n    }\n    var ret, error;\n    try {\n      ret = fn.apply(scope || this, args);\n    } catch(e) {\n      error = e;\n    }\n    if (ret && _.isFunction(ret.then)) { // if the returned value is promise\n      if (!callback) {\n        return ret.then(function(result) {\n          entry.set({ error: undefined, result: result });\n          return result;\n        }, function(err) {\n          entry.set({ error: err, result: undefined });\n          throw err;\n        });\n      } else {\n        return ret;\n      }\n    } else {\n      entry.set({ error: error, result: ret });\n      if (error) { throw error; }\n      return ret;\n    }\n  };\n};\n\n/**\n * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  var $fn = function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).\n      var value = entry.get();\n      if (!value) { throw new Error('Function call result is not cached yet.'); }\n      if (value.error) { throw value.error; }\n      return value.result;\n    }\n    entry.get(function(value) {\n      callback(value.error, value.result);\n    });\n    if (!entry.fetching) { // only when no other client is calling function\n      entry.fetching = true;\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n      });\n      fn.apply(scope || this, args);\n    }\n  };\n  $fn.clear = function() {\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, arguments) :\n              createCacheKey(options.namespace, arguments);\n    cache.clear(key);\n  };\n  return $fn;\n};\n\n\nmodule.exports = Cache;\n","/*global Buffer */\n/**\n * @file Connection class to keep the API session information and manage requests\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events  = require('events'),\n    inherits = require('inherits'),\n    _       = require('lodash/core'),\n    Promise = require('./promise'),\n    Logger  = require('./logger'),\n    OAuth2  = require('./oauth2'),\n    Query   = require('./query'),\n    SObject = require('./sobject'),\n    QuickAction = require('./quick-action'),\n    HttpApi = require('./http-api'),\n    Transport = require('./transport'),\n    Process = require('./process'),\n    Cache   = require('./cache');\n\nvar defaults = {\n  loginUrl: \"https://login.salesforce.com\",\n  instanceUrl: \"\",\n  version: \"42.0\"\n};\n\n/*\n * Constant of maximum records num in DML operation (update/delete)\n */\nvar MAX_DML_COUNT = 200;\n\n\n/**\n * Connection class to keep the API session information and manage requests\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Object} [options] - Connection options\n * @param {OAuth2|Object} [options.oauth2] - OAuth2 instance or options to be passed to OAuth2 constructor\n * @param {String} [options.logLevel] - Output logging level (DEBUG|INFO|WARN|ERROR|FATAL)\n * @param {String} [options.version] - Salesforce API Version (without \"v\" prefix)\n * @param {Number} [options.maxRequest] - Max number of requests allowed in parallel call\n * @param {String} [options.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {String} [options.proxyUrl] - Cross-domain proxy server URL, used in browser client, non Visualforce app.\n * @param {String} [options.httpProxy] - URL of HTTP proxy server, used in server client.\n * @param {Object} [options.callOptions] - Call options used in each SOAP/REST API request. See manual.\n */\nvar Connection = module.exports = function(options) {\n  options = options || {};\n\n  this._logger = new Logger(options.logLevel);\n\n  var oauth2 = options.oauth2 || {\n    loginUrl : options.loginUrl,\n    clientId : options.clientId,\n    clientSecret : options.clientSecret,\n    redirectUri : options.redirectUri,\n    proxyUrl: options.proxyUrl,\n    httpProxy: options.httpProxy\n  };\n\n  /**\n   * OAuth2 object\n   * @member {OAuth2} Connection#oauth2\n   */\n  this.oauth2 = oauth2 = oauth2 instanceof OAuth2 ? oauth2 : new OAuth2(oauth2);\n\n  this.loginUrl = options.loginUrl || oauth2.loginUrl || defaults.loginUrl;\n  this.version = options.version || defaults.version;\n  this.maxRequest = options.maxRequest || this.maxRequest || 10;\n\n  /** @private */\n  if (options.proxyUrl) {\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\n  } else if (options.httpProxy) {\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\n  } else {\n    this._transport = new Transport();\n  }\n\n  this.callOptions = options.callOptions;\n\n  /*\n   * Fire connection:new event to notify jsforce plugin modules\n   */\n  var jsforce = require('./core');\n  jsforce.emit('connection:new', this);\n\n  /**\n   * Streaming API object\n   * @member {Streaming} Connection#streaming\n   */\n  // this.streaming = new Streaming(this);\n  /**\n   * Bulk API object\n   * @member {Bulk} Connection#bulk\n   */\n  // this.bulk = new Bulk(this);\n  /**\n   * Tooling API object\n   * @member {Tooling} Connection#tooling\n   */\n  // this.tooling = new Tooling(this);\n  /**\n   * Analytics API object\n   * @member {Analytics} Connection#analytics\n   */\n  // this.analytics = new Analytics(this);\n  /**\n   * Chatter API object\n   * @member {Chatter} Connection#chatter\n   */\n  // this.chatter = new Chatter(this);\n  /**\n   * Metadata API object\n   * @member {Metadata} Connection#metadata\n   */\n  // this.metadata = new Metadata(this);\n\n  /**\n   * SOAP API object\n   * @member {SoapApi} Connection#soap\n   */\n  // this.soap = new SoapApi(this);\n\n  /**\n   * Apex REST API object\n   * @member {Apex} Connection#apex\n   */\n  // this.apex = new Apex(this);\n\n  /**\n   * @member {Process} Connection#process\n   */\n  this.process = new Process(this);\n\n  /**\n   * Cache object for result\n   * @member {Cache} Connection#cache\n   */\n  this.cache = new Cache();\n\n  // Allow to delegate connection refresh to outer function\n  var self = this;\n  var refreshFn = options.refreshFn;\n  if (!refreshFn && this.oauth2.clientId) {\n    refreshFn = oauthRefreshFn;\n  }\n  if (refreshFn) {\n    this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, refreshFn);\n  }\n\n  var cacheOptions = {\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\n  };\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n  this.describeSObject$ = this.describe$;\n  this.describeSObject = this.describe;\n\n  cacheOptions = { key: 'describeGlobal' };\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\n\n  this.initialize(options);\n};\n\ninherits(Connection, events.EventEmitter);\n\n/**\n * Initialize connection.\n *\n * @protected\n * @param {Object} options - Initialization options\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {UserInfo} [options.userInfo] - Logged in user information\n */\nConnection.prototype.initialize = function(options) {\n  if (!options.instanceUrl && options.serverUrl) {\n    options.instanceUrl = options.serverUrl.split('/').slice(0, 3).join('/');\n  }\n  this.instanceUrl = options.instanceUrl || options.serverUrl || this.instanceUrl || defaults.instanceUrl;\n\n  this.accessToken = options.sessionId || options.accessToken || this.accessToken;\n  this.refreshToken = options.refreshToken || this.refreshToken;\n  if (this.refreshToken && !this._refreshDelegate) {\n    throw new Error(\"Refresh token is specified without oauth2 client information or refresh function\");\n  }\n\n  this.signedRequest = options.signedRequest && parseSignedRequest(options.signedRequest);\n  if (this.signedRequest) {\n    this.accessToken = this.signedRequest.client.oauthToken;\n    if (Transport.CanvasTransport.supported) {\n      this._transport = new Transport.CanvasTransport(this.signedRequest);\n    }\n  }\n\n  if (options.userInfo) {\n    this.userInfo = options.userInfo;\n  }\n\n  this.limitInfo = {};\n\n  this.sobjects = {};\n  this.cache.clear();\n  this.cache.get('describeGlobal').removeAllListeners('value');\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\n    if (res.result) {\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\n      types.forEach(this.sobject, this);\n    }\n  }, this));\n\n  if (this.tooling) {\n    this.tooling.initialize();\n  }\n\n  this._sessionType = options.sessionId ? \"soap\" : \"oauth2\";\n\n};\n\n/** @private **/\nfunction oauthRefreshFn(conn, callback) {\n  conn.oauth2.refreshToken(conn.refreshToken, function(err, res) {\n    if (err) { return callback(err); }\n    var userInfo = parseIdUrl(res.id);\n    conn.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo : userInfo\n    });\n    callback(null, res.access_token, res);\n  });\n}\n\n/** @private **/\nfunction parseSignedRequest(sr) {\n  if (_.isString(sr)) {\n    if (sr[0] === '{') { // might be JSON\n      return JSON.parse(sr);\n    } else { // might be original base64-encoded signed request\n      var msg = sr.split('.').pop(); // retrieve latter part\n      var json = Buffer.from(msg, 'base64').toString('utf-8');\n      return JSON.parse(json);\n    }\n    return null;\n  }\n  return sr;\n}\n\n\n/** @private **/\nConnection.prototype._baseUrl = function() {\n  return [ this.instanceUrl, \"services/data\", \"v\" + this.version ].join('/');\n};\n\n/**\n * Convert path to absolute url\n * @private\n */\nConnection.prototype._normalizeUrl = function(url) {\n  if (url[0] === '/') {\n    if (url.indexOf('/services/') === 0) {\n      return this.instanceUrl + url;\n    } else {\n      return this._baseUrl() + url;\n    }\n  } else {\n    return url;\n  }\n};\n\n/**\n * Send REST API request with given HTTP request info, with connected session information.\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String|Object} request - HTTP request object or URL to GET request\n * @param {String} request.method - HTTP method URL to send HTTP request\n * @param {String} request.url - URL to send HTTP request\n * @param {Object} [request.headers] - HTTP request headers in hash object (key-value)\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.request = function(request, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var self = this;\n\n  // if request is simple string, regard it as url in GET method\n  if (_.isString(request)) {\n    request = { method: 'GET', url: request };\n  }\n  // if url is given in relative path, prepend base url or instance url before.\n  request.url = this._normalizeUrl(request.url);\n\n  var httpApi = new HttpApi(this, options);\n\n  // log api usage and its quota\n  httpApi.on('response', function(response) {\n    if (response.headers && response.headers[\"sforce-limit-info\"]) {\n      var apiUsage = response.headers[\"sforce-limit-info\"].match(/api\\-usage=(\\d+)\\/(\\d+)/);\n      if (apiUsage) {\n        self.limitInfo = {\n          apiUsage: {\n            used: parseInt(apiUsage[1], 10),\n            limit: parseInt(apiUsage[2], 10)\n          }\n        };\n      }\n    }\n  });\n  return httpApi.request(request).thenCall(callback);\n};\n\n/**\n * Send HTTP GET request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP GET\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestGet = function(url, options, callback) {\n  var request = {\n    method: \"GET\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/**\n * Send HTTP POST request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP POST\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPost = function(url, body, options, callback) {\n  var request = {\n    method: \"POST\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PUT request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PUT\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPut = function(url, body, options, callback) {\n  var request = {\n    method: \"PUT\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PATCH request with JSON body\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PATCH\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPatch = function(url, body, options, callback) {\n  var request = {\n    method: \"PATCH\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP DELETE request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP DELETE\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestDelete = function(url, options, callback) {\n  var request = {\n    method: \"DELETE\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/** @private */\nfunction formatDate(date) {\n  function pad(number) {\n    if (number < 10) {\n      return '0' + number;\n    }\n    return number;\n  }\n\n  return date.getUTCFullYear() +\n    '-' + pad(date.getUTCMonth() + 1) +\n    '-' + pad(date.getUTCDate()) +\n    'T' + pad(date.getUTCHours()) +\n    ':' + pad(date.getUTCMinutes()) +\n    ':' + pad(date.getUTCSeconds()) +\n    '+00:00';\n}\n\n\n/** @private **/\nfunction parseIdUrl(idUrl) {\n  var idUrls = idUrl.split(\"/\");\n  var userId = idUrls.pop(), orgId = idUrls.pop();\n  return {\n    id: userId,\n    organizationId: orgId,\n    url: idUrl\n  };\n}\n\n/**\n * @callback Callback\n * @type {Function}\n * @param {Error} err - Callback error\n * @param {T} response - Callback response\n * @template T\n */\n\n/**\n * @typedef {Object} QueryResult\n * @prop {Boolean} done - Flag if the query is fetched all records or not\n * @prop {String} [nextRecordsUrl] - URL locator for next record set, (available when done = false)\n * @prop {Number} totalSize - Total size for query\n * @prop {Array.<Record>} [records] - Array of records fetched\n */\n\n/**\n * Execute query by using SOQL\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.query = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Execute query by using SOQL, including deleted records\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryAll = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  query.scanAll(true);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Query next record set by using query locator\n *\n * @param {String} locator - Next record set locator\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryMore = function(locator, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, { locator: locator }, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/** @private */\nConnection.prototype._ensureVersion = function(majorVersion) {\n  var versions = this.version.split('.');\n  return parseInt(versions[0], 10) >= majorVersion;\n}\n\n/** @private */\nConnection.prototype._supports = function(feature) {\n  switch (feature) {\n    case 'sobject-collection':\n      return this._ensureVersion(42);\n    default:\n      return false;\n  }\n}\n\n/**\n * Retrieve specified records\n *\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Array.<String>} [options.fields] - Fetching field names in retrieving record\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nConnection.prototype.retrieve = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(ids) ?\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\n        this._retrieveMany(type, ids, options) :\n        this._retrieveParallel(type, ids, options)) :\n      this._retrieveSingle(type, ids, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._retrieveSingle = function(type, id, options) {\n  if (!id) {\n    return Promise.reject(new Error('Invalid record ID. Specify valid record ID value'));\n  }\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\n  if (options.fields) {\n    url += '?fields=' + options.fields.join(',');\n  }\n  return this.request({\n    method: 'GET',\n    url: url,\n    headers: options.headers,\n  });\n};\n\n/** @private */\nConnection.prototype._retrieveParallel = function(type, ids, options) {\n  if (ids.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    ids.map(function(id) {\n      return self._retrieveSingle(type, id, options).catch(function(err) {\n        if (options.allOrNone || err.errorCode !== 'NOT_FOUND') {\n          throw err;\n        }\n        return null;\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._retrieveMany = function(type, ids, options) {\n  if (ids.length === 0) {\n    return Promise.resolve([]);\n  }\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\", type ].join('/');\n  var self = this;\n  return (\n    options.fields ?\n      Promise.resolve(options.fields) :\n      new Promise(function(resolve, reject) {\n        self.describe$(type, function(err, so) {\n          if (err) {\n            reject(err);\n          } else {\n            var fields = so.fields.map(function(field) {\n              return field.name;\n            });\n            resolve(fields);\n          }\n        });\n      })\n  ).then(function(fields) {\n    return self.request({\n      method : 'POST',\n      url : url,\n      body : JSON.stringify({\n        ids : ids,\n        fields : fields\n      }),\n      headers : _.defaults(options.headers || {}, {\n        \"Content-Type\" : \"application/json\"\n      })\n    });\n  });\n};\n\n\n/**\n * @typedef RecordResult\n * @prop {Boolean} success - The result is succeessful or not\n * @prop {String} [id] - Record ID\n * @prop {Array.<Object>} [errors] - Errors (available when success = false)\n */\n\n/** @private */\nConnection.prototype._toRecordResult = function(id, err) {\n  var error = {\n    statusCode: err.errorCode,\n    message: err.message\n  };\n  if (err.content) { error.content = err.content; } // preserve External id duplication message\n  if (err.fields) { error.fields = err.fields; } // preserve DML exception occurred fields\n  var result = {\n    success: false,\n    errors: [error]\n  };\n  if (id) { result.id = id; }\n  return result;\n};\n\n/**\n * Synonym of Connection#create()\n *\n * @method Connection#insert\n * @param {String} type - SObject Type\n * @param {Object|Array.<Object>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method Connection#create\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.insert =\nConnection.prototype.create = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(records) ?\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\n        this._createMany(type, records, options) :\n        this._createParallel(type, records, options)) :\n      this._createSingle(type, records, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._createSingle = function(type, record, options) {\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n  if (!sobjectType) {\n    return Promise.reject(new Error('No SObject Type defined in record'));\n  }\n  record = _.clone(record);\n  delete record.Id;\n  delete record.type;\n  delete record.attributes;\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType ].join('/');\n  return this.request({\n    method : 'POST',\n    url : url,\n    body : JSON.stringify(record),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/** @private */\nConnection.prototype._createParallel = function(type, records, options) {\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    records.map(function(record) {\n      return self._createSingle(type, record, options).catch(function(err) {\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toRecordResult(null, err);\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._createMany = function(type, records, options) {\n  if (records.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._createMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._createMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  records = _.map(records, function(record) {\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n    if (!sobjectType) {\n      return Promise.reject(new Error('No SObject Type defined in record'));\n    }\n    record = _.clone(record);\n    delete record.Id;\n    delete record.type;\n    record.attributes = { type : sobjectType };\n    return record;\n  });\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\n  return this.request({\n    method : 'POST',\n    url : url,\n    body : JSON.stringify({\n      allOrNone : options.allOrNone || false,\n      records : records\n    }),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/**\n * Update records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.update = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(records) ?\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\n        this._updateMany(type, records, options) :\n        this._updateParallel(type, records, options)) :\n      this._updateSingle(type, records, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._updateSingle = function(type, record, options) {\n  var id = record.Id;\n  if (!id) {\n    return Promise.reject(new Error('Record id is not found in record.'));\n  }\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n  if (!sobjectType) {\n    return Promise.reject(new Error('No SObject Type defined in record'));\n  }\n  record = _.clone(record);\n  delete record.Id;\n  delete record.type;\n  delete record.attributes;\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType, id ].join('/');\n  return this.request({\n    method : 'PATCH',\n    url : url,\n    body : JSON.stringify(record),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  }, {\n    noContentResponse: { id : id, success : true, errors : [] }\n  });\n};\n\n/** @private */\nConnection.prototype._updateParallel = function(type, records, options) {\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    records.map(function(record) {\n      return self._updateSingle(type, record, options).catch(function(err) {\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toRecordResult(record.Id, err);\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._updateMany = function(type, records, options) {\n  if (records.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._updateMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._updateMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  records = _.map(records, function(record) {\n    var id = record.Id;\n    if (!id) {\n      throw new Error('Record id is not found in record.');\n    }\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n    if (!sobjectType) {\n      throw new Error('No SObject Type defined in record');\n    }\n    record = _.clone(record);\n    delete record.Id;\n    record.id = id;\n    delete record.type;\n    record.attributes = { type : sobjectType };\n    return record;\n  });\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\n  return this.request({\n    method : 'PATCH',\n    url : url,\n    body : JSON.stringify({\n      allOrNone : options.allOrNone || false,\n      records : records\n    }),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/**\n * Upsert records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.upsert = function(type, records, extIdField, options, callback) {\n  // You can omit \"type\" argument, when the record includes type information.\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = extIdField;\n    extIdField = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(records);\n  records = isArray ? records : [ records ];\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(records, function(record) {\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n      var extId = record[extIdField];\n      record = _.clone(record);\n      delete record[extIdField];\n      delete record.type;\n      delete record.attributes;\n\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, extIdField, extId ].join('/');\n      return self.request({\n        method : 'PATCH',\n        url : url,\n        body : JSON.stringify(record),\n        headers : _.defaults(options.headers || {}, {\n          \"Content-Type\" : \"application/json\"\n        })\n      }, {\n        noContentResponse: { success : true, errors : [] }\n      })\n      .catch(function(err) {\n        // be aware that `allOrNone` option in upsert method will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (!isArray || options.allOrNone || !err.errorCode) { throw err; }\n        return self._toRecordResult(null, err);\n      })\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#delete\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#del\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method Connection#destroy\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype[\"delete\"] =\nConnection.prototype.del =\nConnection.prototype.destroy = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(ids) ?\n      (this._supports('sobject-collection') ? // check whether SObject collection API is supported\n        this._destroyMany(type, ids, options) :\n        this._destroyParallel(type, ids, options)) :\n      this._destroySingle(type, ids, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._destroySingle = function(type, id, options) {\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\n  return this.request({\n    method : 'DELETE',\n    url : url,\n    headers: options.headers || null\n  }, {\n    noContentResponse: { id : id, success : true, errors : [] }\n  });\n};\n\n/** @private */\nConnection.prototype._destroyParallel = function(type, ids, options) {\n  if (ids.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    ids.map(function(id) {\n      return self._destroySingle(type, id, options).catch(function(err) {\n        // be aware that `allOrNone` option in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toRecordResult(id, err);\n      });\n    })\n  );\n};\n\n\n/** @private */\nConnection.prototype._destroyMany = function(type, ids, options) {\n  if (ids.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (ids.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._destroyMany(type, ids.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._destroyMany(type, ids.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  var url = [ this._baseUrl(), \"composite\", \"sobjects?ids=\" ].join('/') + ids.join(',');\n  if (options.allOrNone) {\n    url += '&allOrNone=true';\n  }\n  return this.request({\n    method : 'DELETE',\n    url : url,\n    headers: options.headers || null\n  });\n};\n\n/**\n * Execute search by SOSL\n *\n * @param {String} sosl - SOSL string\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.search = function(sosl, callback) {\n  var url = this._baseUrl() + \"/search?q=\" + encodeURIComponent(sosl);\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Result returned by describeSObject call\n *\n * @typedef {Object} DescribeSObjectResult\n */\n/**\n * Synonym of Connection#describe()\n *\n * @method Connection#describeSObject\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\n/**\n * Describe SObject metadata\n *\n * @method Connection#describe\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nConnection.prototype.describe =\nConnection.prototype.describeSObject = function(type, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"describe\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Result returned by describeGlobal call\n *\n * @typedef {Object} DescribeGlobalResult\n */\n/**\n * Describe global SObjects\n *\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\n * @returns {Promise.<DescribeGlobalResult>}\n */\nConnection.prototype.describeGlobal = function(callback) {\n  var url = this._baseUrl() + \"/sobjects\";\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Get SObject instance\n *\n * @param {String} type - SObject Type\n * @returns {SObject}\n */\nConnection.prototype.sobject = function(type) {\n  this.sobjects = this.sobjects || {};\n  var sobject = this.sobjects[type] =\n    this.sobjects[type] || new SObject(this, type);\n  return sobject;\n};\n\n/**\n * Get identity information of current user\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<IdentityInfo>} [callback] - Callback function\n * @returns {Promise.<IdentityInfo>}\n */\nConnection.prototype.identity = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var idUrl = this.userInfo && this.userInfo.url;\n  return Promise.resolve(\n    idUrl ?\n    { identity: idUrl } :\n    this.request({ method: 'GET', url: this._baseUrl(), headers: options.headers })\n  ).then(function(res) {\n    var url = res.identity;\n    return self.request({ method: 'GET', url: url });\n  }).then(function(res) {\n    self.userInfo = {\n      id: res.user_id,\n      organizationId: res.organization_id,\n      url: res.id\n    };\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef UserInfo\n * @prop {String} id - User ID\n * @prop {String} organizationId - Organization ID\n * @prop {String} url - Identity URL of the user\n */\n\n/**\n * Authorize (using oauth2 web server flow)\n *\n * @param {String} code - Authorization code\n * @param {Object} [params] - Optional parameters to send in token retrieval\n * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.authorize = function(code, params, callback) {\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.requestToken(code, params).then(function(res) {\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      refreshToken : res.refresh_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n\n/**\n * Login to Salesforce\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.login = function(username, password, callback) {\n  // register refreshDelegate for session expiration\n  this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, createUsernamePasswordRefreshFn(username, password));\n  if (this.oauth2 && this.oauth2.clientId && this.oauth2.clientSecret) {\n    return this.loginByOAuth2(username, password, callback);\n  } else {\n    return this.loginBySoap(username, password, callback);\n  }\n};\n\n/** @private **/\nfunction createUsernamePasswordRefreshFn(username, password) {\n  return function(conn, callback) {\n    conn.login(username, password, function(err) {\n      if (err) { return callback(err); }\n      callback(null, conn.accessToken);\n    });\n  };\n}\n\n/**\n * Login by OAuth2 username & password flow\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginByOAuth2 = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  return this.oauth2.authenticate(username, password).then(function(res) {\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * @private\n */\nfunction esc(str) {\n  return str && String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')\n                           .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/**\n * Login by SOAP web service API\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginBySoap = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header/>',\n      '<se:Body>',\n        '<login xmlns=\"urn:partner.soap.sforce.com\">',\n          '<username>' + esc(username) + '</username>',\n          '<password>' + esc(password) + '</password>',\n        '</login>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  var soapLoginEndpoint = [ this.loginUrl, \"services/Soap/u\", this.version ].join('/');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : soapLoginEndpoint,\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    var m;\n    if (response.statusCode >= 400) {\n      m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n    logger.debug(\"SOAP response = \" + response.body);\n    m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);\n    var serverUrl = m && m[1];\n    m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);\n    var sessionId = m && m[1];\n    m = response.body.match(/<userId>([^<]+)<\\/userId>/);\n    var userId = m && m[1];\n    m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);\n    var orgId = m && m[1];\n    var idUrl = soapLoginEndpoint.split('/').slice(0, 3).join('/');\n    idUrl += \"/id/\" + orgId + \"/\" + userId;\n    var userInfo = {\n      id: userId,\n      organizationId: orgId,\n      url: idUrl\n    };\n    self.initialize({\n      serverUrl: serverUrl.split('/').slice(0, 3).join('/'),\n      sessionId: sessionId,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userId + \", org id = \" + orgId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * Logout the current session \n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logout = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n\n  if (this._sessionType === \"oauth2\") {\n    return this.logoutByOAuth2(revoke, callback);\n  } else {\n    return this.logoutBySoap(revoke, callback);\n  }\n};\n\n/**\n * Logout the current session by revoking access token via OAuth2 session revoke\n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutByOAuth2 = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.revokeToken(revoke ? this.refreshToken : this.accessToken).then(function() {\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n  }).thenCall(callback);\n};\n\n\n/**\n * Logout the session by using SOAP web service API\n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutBySoap = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n  var self = this;\n  var logger = this._logger;\n\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header>',\n        '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',\n          '<sessionId>' + esc(revoke ? this.refreshToken : this.accessToken) + '</sessionId>',\n        '</SessionHeader>',\n      '</se:Header>',\n      '<se:Body>',\n        '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : [ this.instanceUrl, \"services/Soap/u\", this.version ].join('/'),\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    logger.debug(\"SOAP statusCode = \" + response.statusCode + \", response = \" + response.body);\n    if (response.statusCode >= 400) {\n      var m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n\n  }).thenCall(callback);\n};\n\n/**\n * List recently viewed records\n *\n * @param {String} [type] - SObject type\n * @param {Number} [limit] - Limit num to fetch\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.recent = function(type, limit, callback) {\n  if (!_.isString(type)) {\n    callback = limit;\n    limit = type;\n    type = undefined;\n  }\n  if (!_.isNumber(limit)) {\n    callback = limit;\n    limit = undefined;\n  }\n  var url;\n  if (type) {\n    url = [ this._baseUrl(), \"sobjects\", type ].join('/');\n    return this.request(url).then(function(res) {\n      return limit ? res.recentItems.slice(0, limit) : res.recentItems;\n    }).thenCall(callback);\n  } else {\n    url = this._baseUrl() + \"/recent\";\n    if (limit) {\n      url += \"?limit=\" + limit;\n    }\n    return this.request(url).thenCall(callback);\n  }\n\n};\n\n/**\n * @typedef {Object} UpdatedRecordsInfo\n * @prop {String} latestDateCovered - The timestamp of the last date covered.\n * @prop {Array.<String>} ids - Updated record IDs.\n */\n\n/**\n * Retrieve updated records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nConnection.prototype.updated = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"updated\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} DeletedRecordsInfo\n * @prop {String} earliestDateAvailable - The timestamp of the earliest date available\n * @prop {String} latestDateCovered - The timestamp of the last date covered\n * @prop {Array.<Object>} deletedRecords - Updated records\n * @prop {String} deletedRecords.id - Record ID\n * @prop {String} deletedRecords.deletedDate - The timestamp when this record was deleted\n */\n\n/**\n * Retrieve deleted records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nConnection.prototype.deleted = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"deleted\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} TabsInfo - See the API document for detail structure\n */\n\n/**\n * Returns a list of all tabs\n *\n * @param {Callback.<TabsInfo>} [callback] - Callback function\n * @returns {Promise.<TabsInfo>}\n */\nConnection.prototype.tabs = function(callback) {\n  var url = [ this._baseUrl(), \"tabs\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} LimitsInfo - See the API document for detail structure\n */\n\n/**\n * Returns curren system limit in the organization\n *\n * @param {Callback.<LimitsInfo>} [callback] - Callback function\n * @returns {Promise.<LimitsInfo>}\n */\nConnection.prototype.limits = function(callback) {\n  var url = [ this._baseUrl(), \"limits\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} ThemeInfo - See the API document for detail structure\n */\n\n/**\n * Returns a theme info\n *\n * @param {Callback.<ThemeInfo>} [callback] - Callback function\n * @returns {Promise.<ThemeInfo>}\n */\nConnection.prototype.theme = function(callback) {\n  var url = [ this._baseUrl(), \"theme\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Returns all registered global quick actions\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nConnection.prototype.quickActions = function(callback) {\n  return this.request(\"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified global quick aciton\n *\n * @param {String} actionName - Name of the global quick action\n * @returns {QuickAction}\n */\nConnection.prototype.quickAction = function(actionName) {\n  return new QuickAction(this, \"/quickActions/\" + actionName);\n};\n","/**\n * @file JSforce Core\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar jsforce = module.exports = new EventEmitter();\njsforce.VERSION = require('./VERSION');\njsforce.Connection = require('./connection');\njsforce.OAuth2 = require('./oauth2');\njsforce.Date = jsforce.SfDate = require(\"./date\");\njsforce.RecordStream = require('./record-stream');\njsforce.Promise = require('./promise');\njsforce.require = require('./require');\n","'use strict';\n\nvar _ = require('lodash/core'),\n    csvParse = require('csv-parse/lib/es5'),\n    csvParseSync = require('csv-parse/lib/es5/sync'),\n    csvStringify = require('csv-stringify'),\n    csvStringifySync = require('csv-stringify/lib/sync');\n\n/**\n * @private\n */\nfunction parseCSV(str, options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParseSync(str, options);\n}\n\n/**\n * @private\n */\nfunction toCSV(records, options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringifySync(records, options);\n}\n\n/**\n * @private\n */\nfunction parseCSVStream(options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParse(options);\n}\n\n/**\n * @private\n */\nfunction serializeCSVStream(options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringify(options);\n}\n\n\n/**\n * @protected\n */\nmodule.exports = {\n  parseCSV: parseCSV,\n  toCSV: toCSV,\n  parseCSVStream: parseCSVStream,\n  serializeCSVStream: serializeCSVStream\n};\n","'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A date object to keep Salesforce date literal\n *\n * @class\n * @constructor\n * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm\n */\nvar SfDate = module.exports = function(literal) {\n  this._literal = literal;\n};\n\n/**\n * Returns literal when converted to string\n *\n * @override\n */\nSfDate.prototype.toString =\nSfDate.prototype.toJSON = function() { return this._literal; };\n\n\n/** @private **/\nfunction zeropad(n) { return (n<10 ? \"0\" : \"\") + n; }\n\n/**\n * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 date format\n */\nSfDate.toDateLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getFullYear();\n  var mm = date.getMonth()+1;\n  var dd = date.getDate();\n  var dstr = [ yy, zeropad(mm), zeropad(dd) ].join(\"-\");\n  return new SfDate(dstr);\n};\n\n/**\n * Convert JavaScript date object to ISO8601 DateTime format\n * (e.g. 2012-10-31T12:34:56Z)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 datetime format\n */\nSfDate.toDateTimeLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getUTCFullYear();\n  var mm = date.getUTCMonth()+1;\n  var dd = date.getUTCDate();\n  var hh = date.getUTCHours();\n  var mi = date.getUTCMinutes();\n  var ss = date.getUTCSeconds();\n  var dtstr =\n    [ yy, zeropad(mm), zeropad(dd) ].join(\"-\") + \"T\" +\n    [ zeropad(hh), zeropad(mi), zeropad(ss) ].join(\":\") + \"Z\";\n  return new SfDate(dtstr);\n};\n\n/**\n * Parse IS08601 date(time) formatted string and return date instance\n *\n * @param {String} str\n * @returns {Date}\n */\nSfDate.parseDate = function(str) {\n  var d = new Date();\n  var regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([\\+\\-])([\\d]{2}):?([\\d]{2})))?$/;\n  var m = str.match(regexp);\n  if (m) {\n    d = new Date(0);\n    if (!m[4]) {\n      d.setFullYear(parseInt(m[1], 10));\n      d.setDate(parseInt(m[3], 10));\n      d.setMonth(parseInt(m[2], 10) - 1);\n      d.setHours(0);\n      d.setMinutes(0);\n      d.setSeconds(0);\n      d.setMilliseconds(0);\n    } else {\n      d.setUTCFullYear(parseInt(m[1], 10));\n      d.setUTCDate(parseInt(m[3], 10));\n      d.setUTCMonth(parseInt(m[2], 10) - 1);\n      d.setUTCHours(parseInt(m[5], 10));\n      d.setUTCMinutes(parseInt(m[6], 10));\n      d.setUTCSeconds(parseInt(m[7], 10));\n      d.setUTCMilliseconds(parseInt(m[9] || '0', 10));\n      if (m[10] && m[10] !== 'Z') {\n        var offset = parseInt(m[12],10) * 60 + parseInt(m[13], 10);\n        d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 +d.getTime());\n      }\n    }\n    return d;\n  } else {\n    throw new Error(\"Invalid date format is specified : \" + str);\n  }\n};\n\n/*\n * Pre-defined Salesforce Date Literals\n */\nvar SfDateLiterals = {\n  YESTERDAY: 1,\n  TODAY: 1,\n  TOMORROW: 1,\n  LAST_WEEK: 1,\n  THIS_WEEK: 1,\n  NEXT_WEEK: 1,\n  LAST_MONTH: 1,\n  THIS_MONTH: 1,\n  NEXT_MONTH: 1,\n  LAST_90_DAYS: 1,\n  NEXT_90_DAYS: 1,\n  LAST_N_DAYS: 2,\n  NEXT_N_DAYS: 2,\n  NEXT_N_WEEKS: 2,\n  LAST_N_WEEKS: 2,\n  NEXT_N_MONTHS: 2,\n  LAST_N_MONTHS: 2,\n  THIS_QUARTER: 1,\n  LAST_QUARTER: 1,\n  NEXT_QUARTER: 1,\n  NEXT_N_QUARTERS: 2,\n  LAST_N_QUARTERS: 2,\n  THIS_YEAR: 1,\n  LAST_YEAR: 1,\n  NEXT_YEAR: 1,\n  NEXT_N_YEARS: 2,\n  LAST_N_YEARS: 2,\n  THIS_FISCAL_QUARTER: 1,\n  LAST_FISCAL_QUARTER: 1,\n  NEXT_FISCAL_QUARTER: 1,\n  NEXT_N_FISCAL_QUARTERS:2,\n  LAST_N_FISCAL_QUARTERS:2,\n  THIS_FISCAL_YEAR:1,\n  LAST_FISCAL_YEAR:1,\n  NEXT_FISCAL_YEAR:1,\n  NEXT_N_FISCAL_YEARS: 2,\n  LAST_N_FISCAL_YEARS: 2\n};\n\nfor (var literal in SfDateLiterals) {\n  var type = SfDateLiterals[literal];\n  SfDate[literal] =\n   type === 1 ? new SfDate(literal) : createLiteralBuilder(literal);\n}\n\n/** @private **/\nfunction createLiteralBuilder(literal) {\n  return function(num) { return new SfDate(literal + \":\" + num); };\n}\n","'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    _ = require('lodash/core'),\n    Promise = require('./promise');\n\n/**\n * HTTP based API class with authorization hook\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Connection} conn - Connection object\n * @param {Object} [options] - Http API Options\n * @param {String} [options.responseType] - Overriding content mime-type in response\n * @param {Transport} [options.transport] - Transport for http api\n * @param {Object} [options.noContentResponse] - Alternative response when no content returned in response (= HTTP 204)\n */\nvar HttpApi = function(conn, options) {\n  options = options || {};\n  this._conn = conn;\n  this.on('resume', function(err) { conn.emit('resume', err); });\n  this._responseType = options.responseType;\n  this._transport = options.transport || conn._transport;\n  this._noContentResponse = options.noContentResponse;\n};\n\ninherits(HttpApi, events.EventEmitter);\n\n/**\n * Callout to API endpoint using http\n *\n * @param {Object} request - Http Request object\n * @param {String} request.url - Endpoint URL to request\n * @param {String} request.method - Http method for request\n * @param {Object} [request.headers] - Http request headers in hash object\n * @param {Callback.<Object>} callback - Callback function\n * @returns {Promise.<Object>} -\n */\nHttpApi.prototype.request = function(request, callback) {\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  var refreshDelegate = this.getRefreshDelegate();\n  // remember previous instance url in case it changes after a refresh\n  var lastInstanceUrl = conn.instanceUrl;\n\n  var deferred = Promise.defer();\n\n  var onResume = function(err) {\n    if (err) {\n      deferred.reject(err);\n      return;\n    }\n    // check to see if the token refresh has changed the instance url\n    if(lastInstanceUrl !== conn.instanceUrl){\n      // if the instance url has changed\n      // then replace the current request urls instance url fragment\n      // with the updated instance url\n      request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);\n    }\n\n    self.request(request).then(function(response) {\n      deferred.resolve(response);\n    }, function(err) {\n      deferred.reject(err);\n    });\n  };\n\n  if (refreshDelegate && refreshDelegate._refreshing) {\n    refreshDelegate.once('resume', onResume);\n    return deferred.promise.thenCall(callback);\n  }\n\n  // hook before sending\n  self.beforeSend(request);\n\n  self.emit('request', request);\n  logger.debug(\"<request> method=\" + request.method + \", url=\" + request.url);\n  var requestTime = Date.now();\n\n  return this._transport.httpRequest(request).then(function(response) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.debug(\"<response> status=\" + response.statusCode + \", url=\" + request.url);\n\n    self.emit('response', response);\n    // Refresh token if session has been expired and requires authentication\n    // when session refresh delegate is available\n    if (self.isSessionExpired(response) && refreshDelegate) {\n      refreshDelegate.refresh(requestTime, onResume);\n      return deferred.promise;\n    }\n    if (self.isErrorResponse(response)) {\n      var err = self.getError(response);\n      throw err;\n    }\n    return self.getResponseBody(response);\n  }, function(err) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.error(err);\n    throw err;\n  })\n  .thenCall(callback);\n};\n\n/**\n * @protected\n */\nHttpApi.prototype.getRefreshDelegate = function() {\n  return this._conn._refreshDelegate;\n};\n\n/**\n *\n * @protected\n */\nHttpApi.prototype.beforeSend = function(request) {\n  request.headers = request.headers || {};\n  if (this._conn.accessToken) {\n    request.headers.Authorization = \"Bearer \" + this._conn.accessToken;\n  }\n  if (this._conn.callOptions) {\n    var callOptions = [];\n    for (var name in this._conn.callOptions) {\n      callOptions.push(name + \"=\" + this._conn.callOptions[name]);\n    }\n    request.headers[\"Sforce-Call-Options\"] = callOptions.join(', ');\n  }\n};\n\n/**\n * Detect response content mime-type\n * @protected\n */\nHttpApi.prototype.getResponseContentType = function(response) {\n  return this._responseType || response.headers && response.headers[\"content-type\"];\n};\n\n/**\n *\n */\nHttpApi.prototype.parseResponseBody = function(response) {\n  var contentType = this.getResponseContentType(response);\n  var parseBody = /^(text|application)\\/xml(;|$)/.test(contentType) ? parseXML :\n         /^application\\/json(;|$)/.test(contentType) ? parseJSON :\n         /^text\\/csv(;|$)/.test(contentType) ? parseCSV :\n         parseText;\n  try {\n    return parseBody(response.body);\n  } catch(e) {\n    return response.body;\n  }\n};\n\n/**\n * Get response body\n * @protected\n */\nHttpApi.prototype.getResponseBody = function(response) {\n  if (response.statusCode === 204) { // No Content\n    return this._noContentResponse;\n  }\n  var body = this.parseResponseBody(response);\n  var err;\n  if (this.hasErrorInResponseBody(body)) {\n    err = this.getError(response, body);\n    throw err;\n  }\n  if (response.statusCode === 300) { // Multiple Choices\n    err = new Error('Multiple records found');\n    err.name = \"MULTIPLE_CHOICES\";\n    err.content = body;\n    throw err;\n  }\n  return body;\n};\n\n/** @private */\nfunction parseJSON(str) {\n  return JSON.parse(str);\n}\n\n/** @private */\nfunction parseXML(str) {\n  var ret = {};\n  require('xml2js').parseString(str, { explicitArray: false }, function(err, result) {\n    ret = { error: err, result : result };\n  });\n  if (ret.error) { throw ret.error; }\n  return ret.result;\n}\n\n/** @private */\nfunction parseCSV(str) {\n  return require('./csv').parseCSV(str);\n}\n\n/** @private */\nfunction parseText(str) { return str; }\n\n\n/**\n * Detect session expiry\n * @protected\n */\nHttpApi.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 401;\n};\n\n/**\n * Detect error response\n * @protected\n */\nHttpApi.prototype.isErrorResponse = function(response) {\n  return response.statusCode >= 400;\n};\n\n/**\n * Detect error in response body\n * @protected\n */\nHttpApi.prototype.hasErrorInResponseBody = function(body) {\n  return false;\n};\n\n/**\n * Parsing error message in response\n * @protected\n */\nHttpApi.prototype.parseError = function(body) {\n  var errors = body;\n  return _.isArray(errors) ? errors[0] : errors;\n};\n\n/**\n * Get error message in response\n * @protected\n */\nHttpApi.prototype.getError = function(response, body) {\n  var error;\n  try {\n    error = this.parseError(body || this.parseResponseBody(response));\n  } catch(e) {}\n  error = _.isObject(error) && _.isString(error.message) ? error : {\n    errorCode: 'ERROR_HTTP_' + response.statusCode,\n    message : response.body\n  };\n  var err = new Error(error.message);\n  err.name = error.errorCode;\n  for (var key in error) { err[key] = error[key]; }\n  return err;\n};\n\n/*-------------------------------------------------------------------------*/\n\n/**\n * @protected\n */\nvar SessionRefreshDelegate = function(conn, refreshFn) {\n  this._conn = conn;\n  this._refreshFn = refreshFn;\n  this._refreshing = false;\n};\n\ninherits(SessionRefreshDelegate, events.EventEmitter);\n\n/**\n * Refresh access token\n * @private\n */\nSessionRefreshDelegate.prototype.refresh = function(since, callback) {\n  // Callback immediately When refreshed after designated time\n  if (this._lastRefreshedAt > since) { return callback(); }\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  self.once('resume', callback);\n  if (self._refreshing) { return; }\n  logger.debug(\"<refresh token>\");\n  self._refreshing = true;\n  return self._refreshFn(conn, function(err, accessToken, res) {\n    if (!err) {\n      logger.debug(\"Connection refresh completed.\");\n      conn.accessToken = accessToken;\n      conn.emit(\"refresh\", accessToken, res);\n    }\n    self._lastRefreshedAt = Date.now();\n    self._refreshing = false;\n    self.emit('resume', err);\n  });\n};\n\n\n/**\n *\n */\nHttpApi.SessionRefreshDelegate = SessionRefreshDelegate;\nmodule.exports = HttpApi;\n","'use strict';\n\n/**\n * @protected\n * @class\n * @constructor\n * @param {String|Number} logLevel - Log level\n */\nvar Logger = module.exports = function(logLevel) {\n  if (typeof logLevel === 'string') {\n    logLevel = LogLevels[logLevel];\n  }\n  if (!logLevel) {\n    logLevel = LogLevels.INFO;\n  }\n  this._logLevel = logLevel;\n};\n\n/**\n * @memberof Logger\n */\nvar LogLevels = Logger.LogLevels = {\n  \"DEBUG\" : 1,\n  \"INFO\" : 2,\n  \"WARN\" : 3,\n  \"ERROR\" : 4,\n  \"FATAL\" : 5\n};\n\n/**\n * Output log\n *\n * @param {String} level - Logging target level\n * @param {String} message - Message to log\n */\nLogger.prototype.log = function(level, message) {\n  if (this._logLevel <= level) {\n    if (level < LogLevels.ERROR) {\n      console.log(message);\n    } else {\n      console.error(message);\n    }\n  }\n};\n\nfor (var level in LogLevels) {\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\n}\n\nfunction createLoggerFunction(level) {\n  return function(message) { this.log(level, message); };\n}\n","/**\n * @file Manages Salesforce OAuth2 operations\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar querystring = require('querystring'),\n    _ = require('lodash/core'),\n    Transport = require('./transport');\n\nvar defaults = {\n  loginUrl : \"https://login.salesforce.com\"\n};\n\n/**\n * OAuth2 class\n *\n * @class\n * @constructor\n * @param {Object} options - OAuth2 config options\n * @param {String} [options.loginUrl] - Salesforce login server URL\n * @param {String} [options.authzServiceUrl] - OAuth2 authorization service URL. If not specified, it generates from default by adding to login server URL.\n * @param {String} [options.tokenServiceUrl] - OAuth2 token service URL. If not specified it generates from default by adding to login server URL.\n * @param {String} options.clientId - OAuth2 client ID.\n * @param {String} [options.clientSecret] - OAuth2 client secret (This is optional for public client).\n * @param {String} options.redirectUri - URI to be callbacked from Salesforce OAuth2 authorization service.\n */\nvar OAuth2 = module.exports = function(options) {\n  if (options.authzServiceUrl && options.tokenServiceUrl) {\n    this.loginUrl = options.authzServiceUrl.split('/').slice(0, 3).join('/');\n    this.authzServiceUrl = options.authzServiceUrl;\n    this.tokenServiceUrl = options.tokenServiceUrl;\n    this.revokeServiceUrl = options.revokeServiceUrl;\n  } else {\n    this.loginUrl = options.loginUrl || defaults.loginUrl;\n    this.authzServiceUrl = this.loginUrl + \"/services/oauth2/authorize\";\n    this.tokenServiceUrl = this.loginUrl + \"/services/oauth2/token\";\n    this.revokeServiceUrl = this.loginUrl + \"/services/oauth2/revoke\";\n  }\n  this.clientId = options.clientId;\n  this.clientSecret = options.clientSecret;\n  this.redirectUri = options.redirectUri;\n  if (options.proxyUrl) {\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\n  } else if (options.httpProxy) {\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\n  } else {\n    this._transport = new Transport();\n  }\n};\n\n\n\n/**\n *\n */\n_.extend(OAuth2.prototype, /** @lends OAuth2.prototype **/ {\n\n  /**\n   * Get Salesforce OAuth2 authorization page URL to redirect user agent.\n   *\n   * @param {Object} params - Parameters\n   * @param {String} [params.scope] - Scope values in space-separated string\n   * @param {String} [params.state] - State parameter\n   * @param {String} [params.code_challenge] - Code challenge value (RFC 7636 - Proof Key of Code Exchange)\n   * @returns {String} Authorization page URL\n   */\n  getAuthorizationUrl : function(params) {\n    params = _.extend({\n      response_type : \"code\",\n      client_id : this.clientId,\n      redirect_uri : this.redirectUri\n    }, params || {});\n    return this.authzServiceUrl +\n      (this.authzServiceUrl.indexOf('?') >= 0 ? \"&\" : \"?\") +\n      querystring.stringify(params);\n  },\n\n  /**\n   * @typedef TokenResponse\n   * @type {Object}\n   * @property {String} access_token\n   * @property {String} refresh_token\n   */\n\n  /**\n   * OAuth2 Refresh Token Flow\n   *\n   * @param {String} refreshToken - Refresh token\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  refreshToken : function(refreshToken, callback) {\n    var params = {\n      grant_type : \"refresh_token\",\n      refresh_token : refreshToken,\n      client_id : this.clientId\n    };\n    if (this.clientSecret) {\n      params.client_secret = this.clientSecret;\n    }\n    return this._postParams(params, callback);\n  },\n\n  /**\n   * OAuth2 Web Server Authentication Flow (Authorization Code)\n   * Access Token Request\n   *\n   * @param {String} code - Authorization code\n   * @param {Object} [params] - Optional parameters to send in token retrieval\n   * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  requestToken : function(code, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n    params = _.extend({\n      grant_type : \"authorization_code\",\n      code : code,\n      client_id : this.clientId,\n      redirect_uri : this.redirectUri\n    }, params || {});\n    if (this.clientSecret) {\n      params.client_secret = this.clientSecret;\n    }\n    return this._postParams(params, callback);\n  },\n\n  /**\n   * OAuth2 Username-Password Flow (Resource Owner Password Credentials)\n   *\n   * @param {String} username - Salesforce username\n   * @param {String} password - Salesforce password\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  authenticate : function(username, password, callback) {\n    return this._postParams({\n      grant_type : \"password\",\n      username : username,\n      password : password,\n      client_id : this.clientId,\n      client_secret : this.clientSecret,\n      redirect_uri : this.redirectUri\n    }, callback);\n  },\n\n  /**\n   * OAuth2 Revoke Session or API Token\n   *\n   * @param {String} token - Access or Refresh token to revoke. Passing in the Access token revokes the session. Passing in the Refresh token revokes API Access.\n   * @param {Callback.<undefined>} [callback] - Callback function\n   * @returns {Promise.<undefined>}\n   */\n  revokeToken : function(token, callback) {\n    return this._transport.httpRequest({\n      method : 'POST',\n      url : this.revokeServiceUrl,\n      body: querystring.stringify({ token: token }),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(function(response) {\n      if (response.statusCode >= 400) {\n        var res = querystring.parse(response.body);\n        if (!res || !res.error) {\n          res = { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        }\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n    }).thenCall(callback);\n  },\n\n  /**\n   * @private\n   */\n  _postParams : function(params, callback) {\n    return this._transport.httpRequest({\n      method : 'POST',\n      url : this.tokenServiceUrl,\n      body : querystring.stringify(params),\n      headers : {\n        \"content-type\" : \"application/x-www-form-urlencoded\"\n      }\n    }).then(function(response) {\n      var res;\n      try {\n        res = JSON.parse(response.body);\n      } catch(e) {}\n      if (response.statusCode >= 400) {\n        res = res || { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n      return res;\n    }).thenCall(callback);\n  }\n\n});\n","/**\n * @file Process class to manage/run workflow rule and approval process\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core'),\n    Promise = require('./promise'),\n    Conneciton = require('./connection');\n\n/**\n * A class which manages process rules and approval processes\n *\n * @class\n * @param {Connection} conn - Connection object\n */\nvar Process = module.exports = function(conn) {\n  /**\n   * Object which mangages process rules\n   * @member {Process~ProcessRule} Process#rule\n   */\n  this.rule = new ProcessRule(conn);\n  /**\n   * Object which mangages approval process\n   * @member {Process~ApprovalProcess} Process#approval\n   */\n  this.approval = new ApprovalProcess(conn);\n};\n\n/**\n * A class which manages process (workflow) rules\n *\n * @class Process~ProcessRule\n * @param {Connection} conn - Connection object\n */\nvar ProcessRule = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ProcessRuleDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of process rule definition\n * @prop {String} object - SObject name which process rule is defined\n */\n\n/**\n * Get all process rule definitions registered to sobjects\n *\n * @method Process~ProcessRule#list\n * @param {Callback.<Map.<String, Array.<Process~ProcessRuleDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<Process~ProcessRuleDefinition>>>}\n */\nProcessRule.prototype.list = function(callback) {\n  return this._conn.request(\"/process/rules\").then(function(res) {\n    return res.rules;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} Process~ProcessRuleTriggerResult\n * @prop {Boolean} success - Is process rule trigger succeeded or not\n * @prop {Array.<Object>} errors - Array of errors returned if the request failed\n */\n\n/**\n * Trigger process rule for given entities\n *\n * @method Process~ProcessRule#trigger\n * @param {String|Array.<String>} contextIds - Entity ID(s) to trigger workflow process\n * @param {Callback.<Process~ProcessRuleTriggerResult>} [callback] - Callback function\n * @returns {Promise.<Process~ProcessRuleTriggerResult>}\n */\nProcessRule.prototype.trigger = function(contextIds, callback) {\n  contextIds = _.isArray(contextIds) ? contextIds : [ contextIds ];\n  return this._conn.request({\n    method: \"POST\",\n    url: \"/process/rules/\",\n    body: JSON.stringify({\n      contextIds: contextIds\n    }),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).thenCall(callback);\n};\n\n/**\n * A class which manages approval processes\n *\n * @class Process~ApprovalProcess\n * @param {Connection} conn - Connection object\n */\nvar ApprovalProcess = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of approval process definition\n * @prop {String} object - SObject name which approval process is defined\n * @prop {Number} sortOrder - Processing order of approval in SObject\n */\n/**\n * Get all approval process definitions registered to sobjects\n *\n * @method Process~ApprovalProcess#list\n * @param {Callback.<Map.<String, Array.<ApprovalProcessDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<ApprovalProcessDefinition>>>}\n */\nApprovalProcess.prototype.list = function(callback) {\n  return this._conn.request(\"/process/approvals\").then(function(res) {\n    return res.approvals;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessRequestResult\n * @prop {Boolean} success - True if processing or approval completed successfully\n * @prop {Array.<Object>} errors - The set of errors returned if the request failed\n * @prop {Array.<String>} actorIds - IDs of the users who are currently assigned to this approval step\n * @prop {String} entityId - Object being processed\n * @prop {String} instanceId - ID of the ProcessInstance associated with the object submitted for processing\n * @prop {String} instanceStatus - Status of the current process instance (not an individual object but the entire process instance)\n * @prop {Array.<String>} newWorkItemIds - Case-insensitive IDs that point to ProcessInstanceWorkitem items (the set of pending approval requests)\n */\n\n/**\n * Send bulk requests for approval process\n *\n * @method Process~ApprovalProcess#request\n * @param {Array.<ApprovalProcessRequest>} requests - Array of approval process request to send\n * @param {Callback.<Array.<ApprovalProcessRequestResult>>} - Callback function\n * @param {Promise.<Array.<ApprovalProcessRequestResult>>}\n */\nApprovalProcess.prototype.request = function(requests, callback) {\n  requests = requests.map(function(req) {\n    return req._request ? req._request : req;\n  });\n  return this._conn.request({\n    method: 'POST',\n    url: '/process/approvals',\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({ requests: requests })\n  }).thenCall(callback);\n};\n\n/**\n * Create approval process request\n *\n * @private\n */\nApprovalProcess.prototype._createRequest = function(actionType, contextId, comments, options, callback) {\n  if (typeof comments === \"function\") {\n    callback = comments;\n    options = null;\n    comments = null;\n  }\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var request = {\n    actionType: actionType,\n    contextId: contextId,\n    comments: comments\n  };\n  _.extend(request, options);\n  return new ApprovalProcessRequest(this, request).thenCall(callback);\n};\n\n/**\n * Submit approval request for an item\n *\n * @method Process~ApprovalProcess#submit\n * @param {String} contextId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.submit = function(contextId, comments, options, callback) {\n  return this._createRequest(\"Submit\", contextId, comments, options, callback);\n};\n\n/**\n * Approve approval request for an item\n *\n * @method Process~ApprovalProcess#approve\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.approve = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Approve\", workitemId, comments, options, callback);\n};\n\n/**\n * Reject approval request for an item\n *\n * @method Process~ApprovalProcess#reject\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.reject = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Reject\", workitemId, comments, options, callback);\n};\n\n/**\n * A class representing approval process request\n *\n * @protected\n * @class Process~ApprovalProcessRequest\n * @implements {Promise.<Process~ApprovalProcessRequestResult>}\n * @param {Process~ApprovalProcess} process - ApprovalProcess\n * @param {Object} request - Request parameters\n * @param {String} request.actionType - Represents the kind of action to take: Submit, Approve, or Reject\n * @param {String} request.contextId - ID of the item that is being acted upon\n * @param {String} request.comments - Comment to add to the history step associated with this request\n * @param {Array.<String>} [request.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [request.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [request.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n */\nvar ApprovalProcessRequest = function(process, request) {\n  this._process = process;\n  this._request = request;\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * @method Process~ApprovalProcessRequest#then\n */\nApprovalProcessRequest.prototype.then = function(onResolve, onReject) {\n  if (!this._promise) {\n    this._promise = this._process.request([ this ]).then(function(rets) {\n      return rets[0];\n    });\n  }\n  this._promise.then(onResolve, onReject);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @method Process~ApprovalProcessRequest#thenCall\n */\nApprovalProcessRequest.prototype.thenCall = function(callback) {\n  return callback ? this.then(function(res) {\n    callback(null, res);\n  }, function(err) {\n    callback(err);\n  }) :\n  this;\n};\n","/*global process*/\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * @callback ResolvedCallback\n * @param {T} result - Resolved value\n * @returns {S}\n * @template T,S\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback ResolveCallback\n * @param {T} result\n * @template T\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback PromiseCallback\n * @param {ResolveCallback.<T>} resolve\n * @param {RejectCallback} reject\n * @template T\n */\n\n/**\n * Promise class with a little extension\n *\n * @class Promise\n * @constructor\n * @param {PromiseCallback.<T>}\n * @template T\n */\nvar Promise = require('promise/lib/es6-extensions');\n\n/**\n * The \"then\" method from the Promises/A+ specification\n *\n * @method Promise#then\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\n\n/**\n * Call \"then\" using given node-style callback function.\n * This is basically same as \"nodeify\" except that it always return the original promise\n *\n * @method Promise#thenCall\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Promise}\n */\nPromise.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/**\n * A sugar method, equivalent to promise.then(undefined, onRejected).\n *\n * @method Promise#catch\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\n\n/**\n * Synonym of Promise#catch\n *\n * @method Promise#fail\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\nPromise.prototype.fail = Promise.prototype['catch'];\n\n/**\n * Returns resolving promise with given reason\n *\n * @method Promise.resolve\n * @param {*} result - Resolved value\n * @returns {Promise}\n */\n\n/**\n * Returns rejecting promise with given reason\n *\n * @method Promise.reject\n * @param {Error} reason - Rejecting reason\n * @returns {Promise}\n */\n\n/**\n * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise,\n * or is rejected with the same rejection reason as the first promise to be rejected.\n *\n * @method Promise.all\n * @param {Array.<Promise.<*>|*>} promises\n * @returns {Promise.<Array.<*>>}\n */\n\n/**\n * Returns a deferred object\n *\n * @method Promise.defer\n * @returns {Deferred}\n */\nPromise.defer = function() {\n  return new Deferred();\n};\n\n/**\n * Deferred object\n *\n * @protected\n * @constructor\n */\nvar Deferred = function() {\n  var self = this;\n  this.promise = new Promise(function(resolve, reject) {\n    self.resolve = resolve;\n    self.reject = reject;\n  });\n};\n\n/**\n * Resolve promise\n * @method Deferred#resolve\n * @param {*} result - Resolving result\n */\n\n/**\n * Reject promise\n * @method Deferred#reject\n * @param {Error} error - Rejecting reason\n */\n\n/**\n *\n */\nmodule.exports = Promise;\n","/*global process*/\n/**\n * @file Manages query for records in Salesforce\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    stream = require('readable-stream'),\n    _      = require('lodash/core'),\n    Promise = require('./promise'),\n    SfDate = require(\"./date\"),\n    SOQLBuilder = require(\"./soql-builder\"),\n    RecordStream = require(\"./record-stream\");\n\n/**\n * Query\n *\n * @protected\n * @class\n * @extends {stream.Readable}\n * @implements Promise.<T>\n * @template T\n * @param {Connection} conn - Connection object\n * @param {Object|String} config - Query config object or SOQL string\n * @param {Object} [options] - Default query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n */\nvar Query = module.exports = function(conn, config, options) {\n  Query.super_.call(this, { objectMode: true });\n\n  this._conn = conn;\n  if (_.isString(config)) { // if query config is string, it is given in SOQL.\n    this._soql = config;\n  } else if (config.locator && config.locator.indexOf(\"/\") >= 0) { // if locator given in url for next records\n    this._locator = config.locator.split(\"/\").pop();\n  } else {\n    this._config = config;\n    this.select(config.fields);\n    if (config.includes) {\n      this.include(config.includes);\n    }\n    if (config.sort) {\n      this.sort(config.sort);\n    }\n  }\n  this._options = _.defaults(options || {}, {\n    maxFetch: 10000,\n    autoFetch: false,\n    scanAll: false,\n    responseTarget: ResponseTargets.QueryResult\n  });\n  this._executed = false;\n  this._finished = false;\n  this._chaining = false;\n\n  this._deferred = Promise.defer();\n\n  var self = this;\n};\n\ninherits(Query, stream.Readable);\n\n/**\n * Select fields to include in the returning result\n *\n * @param {Object|Array.<String>|String} fields - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @returns {Query.<T>}\n */\nQuery.prototype.select = function(fields) {\n  if (this._soql) {\n    throw Error(\"Cannot set select fields for the query which has already built SOQL.\");\n  }\n  fields = fields || '*';\n  if (_.isString(fields)) {\n    fields = fields.split(/\\s*,\\s*/);\n  } else if (_.isObject(fields) && !_.isArray(fields)) {\n    var _fields =  [];\n    for (var k in fields) {\n      if (fields[k]) { _fields.push(k); }\n    }\n    fields = _fields;\n  }\n  this._config.fields = fields;\n  return this;\n};\n\n/**\n * Set query conditions to filter the result records\n *\n * @param {Object|String} conditions - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @returns {Query.<T>}\n */\nQuery.prototype.where = function(conditions) {\n  if (this._soql) {\n    throw Error(\"Cannot set where conditions for the query which has already built SOQL.\");\n  }\n  this._config.conditions = conditions;\n  return this;\n};\n\n/**\n * Limit the returning result\n *\n * @param {Number} limit - Maximum number of records the query will return.\n * @returns {Query.<T>}\n */\nQuery.prototype.limit = function(limit) {\n  if (this._soql) {\n    throw Error(\"Cannot set limit for the query which has already built SOQL.\");\n  }\n  this._config.limit = limit;\n  return this;\n};\n\n/**\n * Synonym of Query#offset()\n *\n * @method Query#skip\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\n/**\n * Skip records\n *\n * @method Query#offset\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\nQuery.prototype.skip =\nQuery.prototype.offset = function(offset) {\n  if (this._soql) {\n    throw Error(\"Cannot set skip/offset for the query which has already built SOQL.\");\n  }\n  this._config.offset = offset;\n  return this;\n};\n\n/**\n * Synonym of Query#sort()\n *\n * @memthod Query#orderby\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\n/**\n * Set query sort with direction\n *\n * @method Query#sort\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\nQuery.prototype.sort =\nQuery.prototype.orderby = function(sort, dir) {\n  if (this._soql) {\n    throw Error(\"Cannot set sort for the query which has already built SOQL.\");\n  }\n  if (_.isString(sort) && _.isString(dir)) {\n    sort = [ [ sort, dir ] ];\n  }\n  this._config.sort = sort;\n  return this;\n};\n\n/**\n * Include child relationship query\n *\n * @param {String} childRelName - Child relationship name to include in query result\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Optional query configulations.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @returns {Query~SubQuery}\n */\nQuery.prototype.include = function(childRelName, conditions, fields, options) {\n  if (this._soql) {\n    throw Error(\"Cannot include child relationship into the query which has already built SOQL.\");\n  }\n  if (_.isObject(childRelName)) {\n    var includes = childRelName;\n    for (var crname in includes) {\n      var config = includes[crname];\n      this.include(crname, config.conditions, config.fields, config);\n    }\n    return;\n  }\n  var childConfig = {\n    table: childRelName,\n    conditions: conditions,\n    fields: fields,\n    limit: options && options.limit,\n    offset: options && (options.offset || options.skip),\n    sort: options && options.sort\n  };\n  if (!_.isArray(this._config.includes)) this._config.includes = [];\n  this._config.includes.push(childConfig);\n  var childQuery = new SubQuery(this._conn, this, childConfig);\n  this._children = this._children || [];\n  this._children.push(childQuery);\n  return childQuery;\n};\n\n\n/**\n * Setting maxFetch query option\n *\n * @param {Number} maxFetch - Max fetching records in auto fetch mode\n * @returns {Query.<T>}\n */\nQuery.prototype.maxFetch = function(maxFetch) {\n  this._options.maxFetch = maxFetch;\n  return this;\n};\n\n/**\n * Switching auto fetch mode\n *\n * @param {Boolean} autoFetch - Using auto fetch mode or not\n * @returns {Query.<T>}\n */\nQuery.prototype.autoFetch = function(autoFetch) {\n  this._options.autoFetch = autoFetch;\n  return this;\n};\n\n/**\n * Set flag to scan all records including deleted and archived.\n *\n * @param {Boolean} scanAll - Flag whether include deleted/archived record or not. Default is false.\n * @returns {Query.<T>}\n */\nQuery.prototype.scanAll = function(scanAll) {\n  this._options.scanAll = scanAll;\n  return this;\n};\n\n/**\n * @private\n */\nvar ResponseTargets = Query.ResponseTargets = {};\n[ \"QueryResult\", \"Records\", \"SingleRecord\", \"Count\" ].forEach(function(f) {\n  ResponseTargets[f] = f;\n});\n\n/**\n * @protected\n * @param {String} responseTarget - Query response target\n * @returns {Query.<S>}\n */\nQuery.prototype.setResponseTarget = function(responseTarget) {\n  if (responseTarget in ResponseTargets) {\n    this._options.responseTarget = responseTarget;\n  }\n  return this;\n};\n\n\n/**\n * Synonym of Query#execute()\n *\n * @method Query#run\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.run =\n/**\n * Synonym of Query#execute()\n *\n * @method Query#exec\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.exec =\n/**\n * Execute query and fetch records from server.\n *\n * @method Query#execute\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.execute = function(options, callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  var deferred = this._deferred;\n\n  if (this._executed) {\n    deferred.reject(new Error(\"re-executing already executed query\"));\n    return this;\n  }\n\n  if (this._finished) {\n    deferred.reject(new Error(\"executing already closed query\"));\n    return this;\n  }\n\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  options = {\n    headers: options.headers || self._options.headers,\n    responseTarget: options.responseTarget || self._options.responseTarget,\n    autoFetch: options.autoFetch || self._options.autoFetch,\n    maxFetch: options.maxFetch || self._options.maxFetch,\n    scanAll: options.scanAll || self._options.scanAll\n  };\n\n  // callback and promise resolution;\n  var promiseCallback = function(err, res) {\n    if (_.isFunction(callback)) {\n      try {\n        res = callback(err, res);\n        err = null;\n      } catch(e) {\n        err = e;\n      }\n    }\n    if (err) {\n      deferred.reject(err);\n    } else {\n      deferred.resolve(res);\n    }\n  };\n  this.once('response', function(res) {\n    promiseCallback(null, res);\n  });\n  this.once('error', function(err) {\n    promiseCallback(err);\n  });\n\n  // collect fetched records in array\n  // only when response target is Records and\n  // either callback or chaining promises are available to this query.\n  this.once('fetch', function() {\n    if (options.responseTarget === ResponseTargets.Records && (self._chaining || callback)) {\n      logger.debug('--- collecting all fetched records ---');\n      var records = [];\n      var onRecord = function(record) {\n        records.push(record);\n      };\n      self.on('record', onRecord);\n      self.once('end', function() {\n        self.removeListener('record', onRecord);\n        self.emit('response', records, self);\n      });\n    }\n  });\n\n  // flag to prevent re-execution\n  this._executed = true;\n\n  // start actual query\n  logger.debug('>>> Query start >>>');\n  this._execute(options).then(function() {\n    logger.debug('*** Query finished ***');\n  }).fail(function(err) {\n    logger.debug('--- Query error ---');\n    self.emit('error', err);\n  });\n\n  // return Query instance for chaining\n  return this;\n};\n\n/**\n * @private\n */\nQuery.prototype._execute = function(options) {\n  var self = this;\n  var logger = this._conn._logger;\n  var responseTarget = options.responseTarget;\n  var autoFetch = options.autoFetch;\n  var maxFetch = options.maxFetch;\n  var scanAll = options.scanAll;\n\n  return Promise.resolve(\n    self._locator ?\n    self._conn._baseUrl() + \"/query/\" + self._locator :\n    self.toSOQL().then(function(soql) {\n      self.totalFetched = 0;\n      logger.debug(\"SOQL = \" + soql);\n      return self._conn._baseUrl() + \"/\" + (scanAll ? \"queryAll\" : \"query\") + \"?q=\" + encodeURIComponent(soql);\n    })\n  ).then(function(url) {\n    return self._conn.request({\n      method: 'GET',\n      url: url,\n      headers: options.headers\n    });\n  }).then(function(data) {\n    self.emit(\"fetch\");\n    self.totalSize = data.totalSize;\n    var res;\n    switch(responseTarget) {\n      case ResponseTargets.SingleRecord:\n        res = data.records && data.records.length > 0 ? data.records[0] : null;\n        break;\n      case ResponseTargets.Records:\n        res = data.records;\n        break;\n      case ResponseTargets.Count:\n        res = data.totalSize;\n        break;\n      default:\n        res = data;\n    }\n    // only fire response event when it should be notified per fetch\n    if (responseTarget !== ResponseTargets.Records) {\n      self.emit(\"response\", res, self);\n    }\n\n    // streaming record instances\n    var numRecords = (data.records && data.records.length) || 0;\n    for (var i=0; i<numRecords; i++) {\n      if (self.totalFetched >= maxFetch) {\n        self._finished = true;\n        break;\n      }\n      var record = data.records[i];\n      self.push(record);\n      self.emit('record', record, self.totalFetched++, self);\n    }\n    if (data.nextRecordsUrl) {\n      self._locator = data.nextRecordsUrl.split('/').pop();\n    }\n    self._finished = self._finished || data.done || !autoFetch;\n    if (self._finished) {\n      self.push(null);\n    } else {\n      self._execute(options);\n    }\n    return res;\n  });\n};\n\n/**\n * Readable stream implementation\n *\n * @override\n * @private\n */\nQuery.prototype._read = function(size) {\n  if (!this._finished && !this._executed) {\n    this.execute({ autoFetch: true });\n  }\n};\n\n/** @override **/\nQuery.prototype.on = function(e, fn) {\n  if (e === 'record') {\n    var self = this;\n    this.on('readable', function() {\n      while(self.read() !== null) {} // discard buffered records\n    });\n  }\n  return Query.super_.prototype.on.call(this, e, fn);\n};\n\n/** @override **/\nQuery.prototype.addListener = Query.prototype.on;\n\n\n/**\n * @private\n */\nQuery.prototype._expandFields = function() {\n  if (this._soql) {\n    return Promise.reject(new Error(\"Cannot expand fields for the query which has already built SOQL.\"));\n  }\n  var self = this;\n  var logger = self._conn._logger;\n  var conn = this._conn;\n  var table = this._config.table;\n  var fields = this._config.fields || [];\n\n  logger.debug('_expandFields: table = ' + table + ', fields = ' + fields.join(', '));\n\n  return Promise.all([\n    Promise.resolve(self._parent ? findRelationTable(table) : table)\n      .then(function(table) {\n        return Promise.all(\n          _.map(fields, function(field) { return expandAsteriskField(table, field); })\n        ).then(function(expandedFields) {\n          self._config.fields = _.flatten(expandedFields);\n        });\n      }),\n    Promise.all(\n      _.map(self._children || [], function(childQuery) {\n        return childQuery._expandFields();\n      })\n    )\n  ]);\n\n  function findRelationTable(rname) {\n    var ptable = self._parent._config.table;\n    logger.debug('finding table for relation \"' + rname + '\" in \"' + ptable + '\"...');\n    return describeCache(ptable).then(function(sobject) {\n      var upperRname = rname.toUpperCase();\n      var childRelation = _.find(sobject.childRelationships, function(cr) {\n        return (cr.relationshipName || '').toUpperCase() === upperRname;\n      });\n      return childRelation ? childRelation.childSObject :\n        Promise.reject(new Error(\"No child relationship found: \" + rname ));\n    });\n  }\n\n  function describeCache(table) {\n    logger.debug('describe cache: '+table);\n    var deferred = Promise.defer();\n    conn.describe$(table, function(err, sobject) {\n      logger.debug('... done.');\n      if (err) { deferred.reject(err); }\n      else { deferred.resolve(sobject); }\n    });\n    return deferred.promise;\n  }\n\n  function expandAsteriskField(table, field) {\n    logger.debug('expanding field \"'+ field + '\" in \"' + table + '\"...');\n    var fpath = field.split('.');\n    return fpath[fpath.length - 1] === '*' ?\n      describeCache(table).then(function(sobject) {\n        logger.debug('table '+table+'has been described');\n        if (fpath.length > 1) {\n          var rname = fpath.shift();\n          var rfield = _.find(sobject.fields, function(f) {\n            return f.relationshipName &&\n                   f.relationshipName.toUpperCase() === rname.toUpperCase();\n          });\n          if (rfield) {\n            var rtable = rfield.referenceTo.length === 1 ? rfield.referenceTo[0] : 'Name';\n            return expandAsteriskField(rtable, fpath.join('.')).then(function(fpaths) {\n              return _.map(fpaths, function(fpath) { return rname + '.' + fpath; });\n            });\n          } else {\n            return [];\n          }\n        } else {\n          return _.map(sobject.fields, function(f) { return f.name; });\n        }\n      }) :\n      Promise.resolve([ field ]);\n  }\n};\n\n/**\n * Explain plan for executing query\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nQuery.prototype.explain = function(callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  return self.toSOQL().then(function(soql) {\n    logger.debug(\"SOQL = \" + soql);\n    var url = \"/query/?explain=\" + encodeURIComponent(soql);\n    return self._conn.request(url);\n  }).thenCall(callback);\n};\n\n/**\n * Return SOQL expression for the query\n *\n * @param {Callback.<String>} [callback] - Callback function\n * @returns {Promise.<String>}\n */\nQuery.prototype.toSOQL = function(callback) {\n  var self = this;\n  return Promise.resolve(self._soql ||\n    self._expandFields().then(function() { return SOQLBuilder.createSOQL(self._config); })\n  ).thenCall(callback);\n};\n\n/**\n * Create data stream of queried records.\n * Automatically resume query if paused.\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n */\nQuery.prototype.stream = RecordStream.Serializable.prototype.stream;\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.map = RecordStream.prototype.map;\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.filter = RecordStream.prototype.map;\n\n/*\n * Default threshold num of bulk API switching\n */\nvar DEFAULT_BULK_THRESHOLD = 200;\n\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#delete\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#del\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\n/**\n * Delete queried records\n *\n * @method Query#destroy\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Object} [options] - Mass delete operation options\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype[\"delete\"] =\nQuery.prototype.del =\nQuery.prototype.destroy = function(type, options, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    options = {};\n    type = null;\n  } else if (typeof type === 'object' && type !== null) {\n    callback = options;\n    options = type;\n    type = null;\n  }\n  options = options || {};\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk delete.\");\n  }\n  // Set the threshold number to pass to bulk API\n  var thresholdNum =\n    options.allowBulk === false ?\n      -1 :\n    typeof options.bulkThreshold === 'number' ?\n      options.bulkThreshold :\n      // determine threshold if the connection version supports SObject collection API or not\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var records = [];\n    var batch = null;\n    var handleRecord = function(rec) {\n      if (!rec.Id) {\n        self.emit('error', new Error('Queried record does not include Salesforce record ID.'))\n        return;\n      }\n      var record = { Id: rec.Id };\n      if (batch) {\n        batch.write(record);\n      } else {\n        records.push(record);\n        if (thresholdNum < 0 || records.length > thresholdNum) {\n          // Use bulk delete instead of SObject REST API\n          batch =\n            self._conn.sobject(type).deleteBulk()\n              .on('response', resolve)\n              .on('error', reject);\n          records.forEach(function(record) {\n            batch.write(record);\n          });\n          records = [];\n        }\n      }\n    };\n    var handleEnd = function() {\n      if (batch) {\n        batch.end();\n      } else {\n        var ids = records.map(function (record) { return record.Id; });\n        self._conn.sobject(type).destroy(ids, { allowRecursive: true }).then(resolve, reject);\n      }\n    };\n    self.on('data', handleRecord)\n      .on('end', handleEnd)\n      .on('error', reject);\n  }).thenCall(callback);\n};\n\n/**\n * Update queried records, using given mapping function/object\n *\n * @param {Record|RecordMapFunction} mapping - Mapping record or record mapping function\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Object} [options] - Mass update operation options\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype.update = function(mapping, type, options, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    options = {};\n    type = null;\n  } else if (typeof type === 'object' && type !== null) {\n    callback = options;\n    options = type;\n    type = null;\n  }\n  options = options || {};\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk update.\");\n  }\n  var updateStream = _.isFunction(mapping) ? RecordStream.map(mapping) : RecordStream.recordMapStream(mapping);\n  // Set the threshold number to pass to bulk API\n  var thresholdNum =\n    options.allowBulk === false ?\n      -1 :\n    typeof options.bulkThreshold === 'number' ?\n      options.bulkThreshold :\n      // determine threshold if the connection version supports SObject collection API or not\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var records = [];\n    var batch = null;\n    var handleRecord = function(record) {\n      if (batch) {\n        batch.write(record);\n      } else {\n        records.push(record);\n        if (thresholdNum < 0 || records.length > thresholdNum) {\n          // Use bulk update instead of SObject REST API\n          batch =\n            self._conn.sobject(type).updateBulk()\n              .on('response', resolve)\n              .on('error', reject);\n          records.forEach(function(record) {\n            batch.write(record);\n          });\n          records = [];\n        }\n      }\n    };\n    var handleEnd = function() {\n      if (batch) {\n        batch.end();\n      } else {\n        self._conn.sobject(type).update(records, { allowRecursive: true }).then(resolve, reject);\n      }\n    };\n    self.on('error', reject)\n      .pipe(updateStream)\n      .on('data', handleRecord)\n      .on('end', handleEnd)\n      .on('error', reject);\n  }).thenCall(callback);\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * Delegate to deferred promise, return promise instance for query result\n *\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\nQuery.prototype.then = function(onResolved, onReject) {\n  this._chaining = true;\n  if (!this._finished && !this._executed) { this.execute(); }\n  return this._deferred.promise.then.apply(this._deferred.promise, arguments);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query}\n */\nQuery.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/*--------------------------------------------*/\n\n/**\n * SubQuery object for representing child relationship query\n *\n * @protected\n * @class Query~SubQuery\n * @extends Query\n * @param {Connection} conn - Connection object\n * @param {Query} parent - Parent query object\n * @param {Object} config - Sub query configuration\n */\nvar SubQuery = function(conn, parent, config) {\n  SubQuery.super_.call(this, conn, config);\n  this._parent = parent;\n};\n\ninherits(SubQuery, Query);\n\n/**\n * @method Query~SubQuery#include\n * @override\n */\nSubQuery.prototype.include = function() {\n  throw new Error(\"Not allowed to include another subquery in subquery.\");\n};\n\n/**\n * Back the context to parent query object\n *\n * @method Query~SubQuery#end\n * @returns {Query}\n */\nSubQuery.prototype.end = function() {\n  return this._parent;\n};\n\n/**\n * If execute is called in subquery context, delegate it to parent query object\n *\n * @method Query~SubQuery#execute\n * @override\n */\nSubQuery.prototype.run =\nSubQuery.prototype.exec =\nSubQuery.prototype.execute = function() {\n  return this._parent.execute.apply(this._parent, arguments);\n};\n","/**\n * @file Represents Salesforce QuickAction\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\n\n/**\n * A class for quick action\n *\n * @protected\n * @constructor\n */\nvar QuickAction = module.exports = function(conn, path) {\n  this._conn = conn;\n  this._path = path;\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionInfo\n * @prop {String} type - Type of the action (e.g. Create, Update, Post, LogACall)\n * @prop {String} name - Name of the action\n * @prop {String} label - Label of the action\n * @prop {Object} urls - Endpoint URL information of the action\n */\n/**\n * @typedef {QuickAction~QuickActionInfo} QuickAction~QuickActionDescriveInfo\n * @prop {String} contextSobjectType - Object type used for the action\n * @prop {String} targetSobjectType - Object type of the action to target\n * @prop {String} targetParentField - Field name in the target object which refers parent(context) object record ID.\n * @prop {String} targetRecordTypeId - Record type of the targeted record\n * @prop {Object} layout - Layout sections that comprise an action\n */\n\n/**\n * Describe the action's information (including layout, etc.)\n *\n * @param {Callback.<QuickAction~QuickActionDescriveInfo>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionDescriveInfo>}\n */\nQuickAction.prototype.describe = function(callback) {\n  var url = this._path + \"/describe\";\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Retrieve default field values in the action (for given record, if specified)\n *\n * @param {String} [contextId] - ID of record to get default values specific to the record\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nQuickAction.prototype.defaultValues = function(contextId, callback) {\n  if (typeof contextId === 'function') {\n    callback = contextId;\n    contextId = null;\n  }\n  var url = this._path + \"/defaultValues\";\n  if (contextId) {\n    url += \"/\" + contextId;\n  }\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionResult\n * @param {String} id - Record id of the action result\n * @param {Array.<String>} feedItemIds - List of IDs for feed item\n * @param {Boolean} success - True if the action successfully completed\n * @param {Boolean} created - True if the action yields a new record\n * @param {String} contextId - Context record ID of the action\n * @param {Array.<Object>} errors - Errors if the action failed\n */\n\n/**\n * Execute the action for given context Id and record information\n * \n * @param {String} contextId - Context record ID of the action\n * @param {Record} record - Input record information for the action\n * @param {Callback.<QuickAction~QuickActionResult>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionResult>}\n */\nQuickAction.prototype.execute = function(contextId, record, callback) {\n  var body = {\n    contextId: contextId,\n    record: record\n  };\n  return this._conn.requestPost(this._path, body).thenCall(callback);\n};\n","/**\n * @file Represents stream that handles Salesforce record as stream data\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    stream = require('readable-stream'),\n    Duplex = stream.Duplex,\n    Transform = stream.Transform,\n    PassThrough = stream.PassThrough,\n    inherits = require('inherits'),\n    _      = require('lodash/core'),\n    CSV    = require('./csv');\n\n\n/**\n * Class for Record Stream\n *\n * @class\n * @constructor\n * @extends stream.Transform\n */\nvar RecordStream = module.exports = function() {\n  RecordStream.super_.call(this, { objectMode: true });\n};\n\ninherits(RecordStream, Transform);\n\n\n/*\n * @override\n */\nRecordStream.prototype._transform = function(record, enc, callback) {\n  this.emit('record', record);\n  this.push(record);\n  callback();\n};\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream}\n */\nRecordStream.prototype.map = function(fn) {\n  return this.pipe(RecordStream.map(fn));\n};\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream}\n */\nRecordStream.prototype.filter = function(fn) {\n  return this.pipe(RecordStream.filter(fn));\n};\n\n\n/**\n * @class RecordStream.Serializable\n * @extends {RecordStream}\n */\nvar Serializable = RecordStream.Serializable = function() {\n  Serializable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Serializable, RecordStream);\n\n/**\n * Create readable data stream which emits serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nSerializable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this.pipe(converter.serialize(options))\n      .pipe(this._dataStream);\n  }\n  return this._dataStream;\n};\n\n\n/**\n * @class RecordStream.Parsable\n * @extends {RecordStream}\n */\nvar Parsable = RecordStream.Parsable = function() {\n  Parsable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Parsable, RecordStream);\n\n/**\n * Create writable data stream which accepts serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nParsable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  var self = this;\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this._parserStream = converter.parse(options).on('error', function(error) { self.emit('error', error); });\n    this._parserStream.pipe(this).pipe(new PassThrough({ objectMode: true, highWaterMark: ( 500 * 1000 ) }));\n  }\n  return this._dataStream;\n};\n\n\n/* @override */\nParsable.prototype.on = function(ev, fn) {\n  if (ev === 'readable' || ev === 'record') {\n    this._dataStream.pipe(this._parserStream);\n  }\n  return Parsable.super_.prototype.on.call(this, ev, fn);\n};\n\n/* @override */\nParsable.prototype.addListener = Parsable.prototype.on;\n\n/* --------------------------------------------------- */\n\n/**\n * @callback RecordMapFunction\n * @param {Record} record - Source record to map\n * @returns {Record}\n */\n\n/**\n * Create a record stream which maps records and pass them to downstream\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.map = function(fn) {\n  var mapStream = new RecordStream.Serializable();\n  mapStream._transform = function(record, enc, callback) {\n    var rec = fn(record) || record; // if not returned record, use same record\n    this.push(rec);\n    callback();\n  };\n  return mapStream;\n};\n\n/**\n * Create mapping stream using given record template\n *\n * @param {Record} record - Mapping record object. In mapping field value, temlate notation can be used to refer field value in source record, if noeval param is not true.\n * @param {Boolean} [noeval] - Disable template evaluation in mapping record.\n * @returns {RecordStream.Serializable}\n */\nRecordStream.recordMapStream = function(record, noeval) {\n  return RecordStream.map(function(rec) {\n    var mapped = { Id: rec.Id };\n    for (var prop in record) {\n      mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);\n    }\n    return mapped;\n  });\n\n  function evalMapping(value, mapping) {\n    if (_.isString(value)) {\n      var m = /^\\$\\{(\\w+)\\}$/.exec(value);\n      if (m) { return mapping[m[1]]; }\n      return value.replace(/\\$\\{(\\w+)\\}/g, function($0, prop) {\n        var v = mapping[prop];\n        return _.isNull(v) || _.isUndefined(v) ? \"\" : String(v);\n      });\n    } else {\n      return value;\n    }\n  }\n};\n\n/**\n * @callback RecordFilterFunction\n * @param {Record} record - Source record to filter\n * @returns {Boolean}\n */\n\n/**\n * Create a record stream which filters records and pass them to downstream\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.filter = function(fn) {\n  var filterStream = new RecordStream.Serializable();\n  filterStream._transform = function(record, enc, callback) {\n    if (fn(record)) { this.push(record); }\n    callback();\n  };\n  return filterStream;\n};\n\n/**\n * @private\n */\nfunction convertRecordForSerialization(record, options) {\n  return Object.keys(record).reduce(function(rec, key) {\n    var value = rec[key];\n    var t = typeof value;\n    var urec = {};\n    if (key === 'attributes') { // 'attributes' prop will be ignored\n      rec = _.extend({}, rec);\n      delete rec[key];\n    } else if (options.nullValue && value === null) {\n      urec[key] = options.nullValue;\n      rec = _.extend({}, rec, urec);\n    } else if (value !== null && typeof value === 'object') {\n      var precord = convertRecordForSerialization(value, options);\n      rec = Object.keys(precord).reduce(function(prec, pkey) {\n        prec[key + '.' + pkey] = precord[pkey];\n        return prec;\n      }, _.extend({}, rec));\n    }\n    return rec;\n  }, record);\n}\n\n/**\n * @private\n */\nfunction createPipelineStream(s1, s2) {\n  var pipeline = new PassThrough();\n  pipeline.on('pipe', function(source) {\n    source.unpipe(pipeline);\n    source.pipe(s1).pipe(s2);\n  });\n  pipeline.pipe = function(dest, options) {\n    return s2.pipe(dest, options);\n  };\n  return pipeline;\n}\n\n/** ---------------------------------------------------------------------- **/\n\n/**\n * @private\n */\nvar CSVStreamConverter = {\n  serialize: function(options) {\n    options = options || {};\n    return createPipelineStream(\n      RecordStream.map(function(record) {\n        return convertRecordForSerialization(record, options);\n      }),\n      CSV.serializeCSVStream(options)\n    );\n  },\n  parse: function(options) {\n    return CSV.parseCSVStream(options);\n  }\n};\n\n/**\n * @private\n */\nvar DataStreamConverters = RecordStream.DataStreamConverters = {\n  csv: CSVStreamConverter\n};\n","/**\n * @file Represents Salesforce record information\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A simple hash object including record field information\n *\n * @typedef {Object} Record\n */\n\n/**\n * Remote reference to record information\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection object\n * @param {String} type - SObject type\n * @param {String} id - Record ID\n */\nvar RecordReference = module.exports = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Retrieve record field information\n *\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nRecordReference.prototype.retrieve = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, this.id, options, callback);\n};\n\n/**\n * Update record field information\n *\n * @param {Record} record - A Record which includes fields to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.update = function(record, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  record = _.clone(record);\n  record.Id = this.id;\n  return this._conn.update(this.type, record, options, callback);\n};\n\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype[\"delete\"] =\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#del\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.del =\n/**\n * Delete record field\n *\n * @method RecordReference#destroy\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.destroy = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, this.id, options, callback);\n};\n\n/**\n * Get blob field as stream\n *\n * @param {String} fieldName - Blob field name\n * @returns {stream.Stream}\n */\nRecordReference.prototype.blob = function(fieldName) {\n  var url = [ this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName ].join('/');\n  return this._conn.request(url).stream();\n};\n","'use strict';\n\nvar required = require('./_required');\n\nmodule.exports = function(name) {\n  if (name === './jsforce' || name === 'jsforce') {\n    name = './core';\n  }\n  var m = required[name];\n  if (typeof m === 'undefined') {\n    throw new Error(\"Cannot find module '\" + name + \"'\");\n  }\n  return m;\n};\n","/**\n * @file Manages method call to SOAP endpoint\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    _ = require('lodash/core'),\n    xml2js = require('xml2js'),\n    HttpApi = require('./http-api');\n\n\n/**\n * Class for SOAP endpoint of Salesforce\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection instance\n * @param {Object} options - SOAP endpoint setting options\n * @param {String} options.endpointUrl - SOAP endpoint URL\n * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")\n */\nvar SOAP = module.exports = function(conn, options) {\n  SOAP.super_.apply(this, arguments);\n  this._endpointUrl = options.endpointUrl;\n  this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';\n};\n\ninherits(SOAP, HttpApi);\n\n/**\n * Invoke SOAP call using method and arguments\n *\n * @param {String} method - Method name\n * @param {Object} args - Arguments for the method call\n * @param {Object} [schema] - Schema definition of response message\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nSOAP.prototype.invoke = function(method, args, schema, callback) {\n  if (typeof schema === 'function') {\n    callback = schema;\n    schema = null;\n  }\n  var message = {};\n  message[method] = args;\n  return this.request({\n    method: 'POST',\n    url: this._endpointUrl,\n    headers: {\n      'Content-Type': 'text/xml',\n      'SOAPAction': '\"\"'\n    },\n    message: message\n  }).then(function(res) {\n    return schema ? convertType(res, schema) : res;\n  }).thenCall(callback);\n};\n\n/* @private */\nfunction convertType(value, schema) {\n  if (_.isArray(value)) {\n    return value.map(function(v) {\n      return convertType(v, schema && schema[0])\n    });\n  } else if (_.isObject(value)) {\n    if (value.$ && value.$['xsi:nil'] === 'true') {\n      return null;\n    } else if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else {\n      var o = {};\n      for (var key in value) {\n        o[key] = convertType(value[key], schema && schema[key]);\n      }\n      return o;\n    }\n  } else {\n    if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else if (_.isObject(schema)) {\n      return {};\n    } else {\n      switch(schema) {\n        case 'string':\n          return String(value);\n        case 'number':\n          return Number(value);\n        case 'boolean':\n          return value === 'true';\n        default:\n          return value;\n      }\n    }\n  }\n}\n\n/** @override **/\nSOAP.prototype.beforeSend = function(request) {\n  request.body = this._createEnvelope(request.message);\n};\n\n/** @override **/\nSOAP.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 500 &&\n    /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body);\n};\n\n/** @override **/\nSOAP.prototype.parseError = function(body) {\n  var error = lookupValue(body, [ /:Envelope$/, /:Body$/, /:Fault$/ ]);\n  return {\n    errorCode: error.faultcode,\n    message: error.faultstring\n  };\n};\n\n/** @override **/\nSOAP.prototype.getResponseBody = function(response) {\n  var body = SOAP.super_.prototype.getResponseBody.call(this, response);\n  return lookupValue(body, [ /:Envelope$/, /:Body$/, /.+/ ]);\n};\n\n/**\n * @private\n */\nfunction lookupValue(obj, propRegExps) {\n  var regexp = propRegExps.shift();\n  if (!regexp) {\n    return obj;\n  }\n  else {\n    for (var prop in obj) {\n      if (regexp.test(prop)) {\n        return lookupValue(obj[prop], propRegExps);\n      }\n    }\n    return null;\n  }\n}\n\n/**\n * @private\n */\nfunction toXML(name, value) {\n  if (_.isObject(name)) {\n    value = name;\n    name = null;\n  }\n  if (_.isArray(value)) {\n    return _.map(value, function(v) { return toXML(name, v); }).join('');\n  } else {\n    var attrs = [];\n    var elems = [];\n    if (_.isObject(value)) {\n      for (var k in value) {\n        var v = value[k];\n        if (k[0] === '@') {\n          k = k.substring(1);\n          attrs.push(k + '=\"' + v + '\"');\n        } else {\n          elems.push(toXML(k, v));\n        }\n      }\n      value = elems.join('');\n    } else {\n      value = String(value)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n    }\n    var startTag = name ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>' : '';\n    var endTag = name ? '</' + name + '>' : '';\n    return  startTag + value + endTag;\n  }\n}\n\n/**\n * @private\n */\nSOAP.prototype._createEnvelope = function(message) {\n  var header = {};\n  var conn = this._conn;\n  if (conn.accessToken) {\n    header.SessionHeader = { sessionId: this._conn.accessToken };\n  }\n  if (conn.callOptions) {\n    header.CallOptions = conn.callOptions;\n  }\n  return [\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\n    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',\n    ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',\n    ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',\n    '<soapenv:Header xmlns=\"' + this._xmlns + '\">',\n    toXML(header),\n    '</soapenv:Header>',\n    '<soapenv:Body xmlns=\"' + this._xmlns + '\">',\n    toXML(message),\n    '</soapenv:Body>',\n    '</soapenv:Envelope>'\n  ].join('');\n};\n","/**\n * @file Represents Salesforce SObject\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    Record = require('./record'),\n    Query  = require('./query'),\n    Cache  = require('./cache'),\n    QuickAction = require('./quick-action');\n\n/**\n * A class for organizing all SObject access\n *\n * @constructor\n */\nvar SObject = module.exports = function(conn, type) {\n  this._conn = conn;\n  this.type = type;\n  var cacheOptions = { key: \"describe.\" + this.type };\n  this.describe$ = conn.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = conn.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n\n  cacheOptions = { key: \"layouts.\" + this.type };\n  this.layouts$ = conn.cache.makeCacheable(this.layouts, this, cacheOptions);\n  this.layouts = conn.cache.makeResponseCacheable(this.layouts, this, cacheOptions);\n\n  cacheOptions = { key: \"compactLayouts.\" + this.type };\n  this.compactLayouts$ = conn.cache.makeCacheable(this.compactLayouts, this, cacheOptions);\n  this.compactLayouts = conn.cache.makeResponseCacheable(this.compactLayouts, this, cacheOptions);\n\n  cacheOptions = { key: \"approvalLayouts.\" + this.type };\n  this.approvalLayouts$ = conn.cache.makeCacheable(this.approvalLayouts, this, cacheOptions);\n  this.approvalLayouts = conn.cache.makeResponseCacheable(this.approvalLayouts, this, cacheOptions);\n};\n\n/**\n * Synonym of SObject#create()\n *\n * @method SObject#insert\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method SObject#create\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.insert =\nSObject.prototype.create = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.create(this.type, records, options, callback);\n};\n\n/**\n * Retrieve specified records\n *\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nSObject.prototype.retrieve = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, ids, options, callback);\n};\n\n/**\n * Update records\n *\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.update = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.update(this.type, records, options, callback);\n};\n\n/**\n * Upsert records\n *\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.upsert = function(records, extIdField, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.upsert(this.type, records, extIdField, options, callback);\n};\n\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#delete\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#del\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method SObject#destroy\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype[\"delete\"] =\nSObject.prototype.del =\nSObject.prototype.destroy = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, ids, options, callback);\n};\n\n/**\n * Describe SObject metadata\n *\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nSObject.prototype.describe = function(callback) {\n  return this._conn.describe(this.type, callback);\n};\n\n/**\n * Get record representation instance by given id\n *\n * @param {String} id - A record ID\n * @returns {RecordReference}\n */\nSObject.prototype.record = function(id) {\n  return new Record(this._conn, this.type, id);\n};\n\n/**\n * Find and fetch records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.find = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var config = {\n    fields: fields,\n    includes: options.includes,\n    table: this.type,\n    conditions: conditions,\n    limit: options.limit,\n    sort: options.sort,\n    offset: options.offset || options.skip\n  };\n  var query = new Query(this._conn, config, options);\n  query.setResponseTarget(Query.ResponseTargets.Records);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Fetch one record which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Query.<Record>}\n */\nSObject.prototype.findOne = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = _.extend(options || {}, { limit: 1 });\n  var query = this.find(conditions, fields, options);\n  query.setResponseTarget(Query.ResponseTargets.SingleRecord);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Find and fetch records only by specifying fields to fetch.\n *\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.select = function(fields, callback) {\n  return this.find(null, fields, null, callback);\n};\n\n/**\n * Count num of records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Callback.<Number>} [callback] - Callback function\n * @returns {Query.<Number>}\n */\nSObject.prototype.count = function(conditions, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n  }\n  var query = this.find(conditions, { \"count()\" : true });\n  query.setResponseTarget(\"Count\");\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n\n/**\n * Call Bulk#load() to execute bulkload, returning batch object\n *\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\n * @param {Object} [options] - Options for bulk loading operation\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.bulkload = function(operation, options, input, callback) {\n  return this._conn.bulk.load(this.type, operation, options, input, callback);\n};\n\n/**\n * Synonym of SObject#createBulk()\n *\n * @method SObject#insertBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly insert input data using bulk API\n *\n * @method SObject#createBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.insertBulk =\nSObject.prototype.createBulk = function(input, callback) {\n  return this.bulkload(\"insert\", input, callback);\n};\n\n/**\n * Bulkly update records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk update Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.updateBulk = function(input, callback) {\n  return this.bulkload(\"update\", input, callback);\n};\n\n/**\n * Bulkly upsert records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk upsert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {String} [options.extIdField] - External ID field name\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.upsertBulk = function(input, extIdField, callback) {\n  return this.bulkload(\"upsert\", { extIdField: extIdField }, input, callback);\n};\n\n/**\n * Synonym of SObject#destroyBulk()\n *\n * @method SObject#deleteBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly delete records specified by input data using bulk API\n *\n * @method SObject#destroyBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteBulk =\nSObject.prototype.destroyBulk = function(input, callback) {\n  return this.bulkload(\"delete\", input, callback);\n};\n\n/**\n * Synonym of SObject#destroyHardBulk()\n *\n * @method SObject#deleteHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly hard delete records specified in input data using bulk API\n *\n * @method SObject#destroyHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteHardBulk =\nSObject.prototype.destroyHardBulk = function(input, callback) {\n  return this.bulkload(\"hardDelete\", input, callback);\n};\n\n/**\n * Retrieve recently accessed records\n *\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nSObject.prototype.recent = function (callback) {\n  return this._conn.recent(this.type, callback);\n};\n\n/**\n * Retrieve the updated records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nSObject.prototype.updated = function (start, end, callback) {\n  return this._conn.updated(this.type, start, end, callback);\n};\n\n/**\n * Retrieve the deleted records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nSObject.prototype.deleted = function (start, end, callback) {\n  return this._conn.deleted(this.type, start, end, callback);\n};\n\n/**\n * @typedef {Object} LayoutInfo\n * @prop {Array.<Object>} layouts - Array of layouts\n * @prop {Array.<Object>} recordTypeMappings - Array of record type mappings\n */\n/**\n * Describe layout information for SObject\n *\n * @param {String} [layoutName] - Name of named layout. (e.g. UserAlt in User SObject)\n * @param {Callback.<LayoutInfo>} [callback] - Callback function\n * @returns {Promise.<LayoutInfo>}\n */\nSObject.prototype.layouts = function(layoutName, callback) {\n  if (typeof layoutName === 'function') {\n    callback = layoutName;\n    layoutName = null;\n  }\n  var url = \"/sobjects/\" + this.type + \"/describe/\" + (layoutName ? \"namedLayouts/\"+layoutName : \"layouts\");\n  return this._conn.request(url, callback);\n};\n\n/**\n * @typedef {Object} CompactLayoutInfo\n * @prop {Array.<Object>} compactLayouts - Array of compact layouts\n * @prop {String} defaultCompactLayoutId - ID of default compact layout\n * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<CompactLayoutInfo>}\n */\nSObject.prototype.compactLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/compactLayouts\";\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * @typedef {Object} ApprovalLayoutInfo\n * @prop {Array.<Object>} approvalLayouts - Array of approval layouts\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<ApprovalLayoutInfo>}\n */\nSObject.prototype.approvalLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/approvalLayouts\";\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list of list views for the SObject\n *\n * @param {Callback.<ListViewsInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewsInfo>}\n */\nSObject.prototype.listviews = function(callback) {\n  var url = this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews';\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list view info in specifed view id\n *\n * @param {String} id - List view ID\n * @returns {ListView}\n */\nSObject.prototype.listview = function(id) {\n  return new ListView(this._conn, this.type, id);\n};\n\n/**\n * Returns all registered quick actions for the SObject\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nSObject.prototype.quickActions = function(callback) {\n  return this._conn.request(\"/sobjects/\" + this.type + \"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified quick aciton in the SObject\n *\n * @param {String} actionName - Name of the quick action\n * @returns {QuickAction}\n */\nSObject.prototype.quickAction = function(actionName) {\n  return new QuickAction(this._conn, \"/sobjects/\" + this.type + \"/quickActions/\" + actionName);\n};\n\n\n/**\n * A class for organizing list view information\n *\n * @protected\n * @class ListView\n * @param {Connection} conn - Connection instance\n * @param {SObject} type - SObject type\n * @param {String} id - List view ID\n */\nvar ListView = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Executes query for the list view and returns the resulting data and presentation information.\n *\n * @param {Callback.<ListViewResultInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewResultInfo>}\n */\nListView.prototype.results = function(callback) {\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/results';\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * Returns detailed information about a list view\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<ListViewDescribeInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewDescribeInfo>}\n */\nListView.prototype.describe = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/describe';\n  return this._conn.request({ method: 'GET', url: url, headers: options.headers }, callback);\n};\n\n/**\n * Explain plan for executing list view\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nListView.prototype.explain = function(callback) {\n  var url = \"/query/?explain=\" + this.id;\n  return this._conn.request(url, callback);\n};\n","/**\n * @file Create and build SOQL string from configuration\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    SfDate = require(\"./date\");\n\n\n/**\n * Create SOQL\n * @private\n */\nfunction createSOQL(query) {\n  var soql = [\n    \"SELECT \",\n    createFieldsClause(query.fields, query.includes),\n    \" FROM \",\n    query.table\n  ].join(\"\");\n  var cond = createConditionClause(query.conditions);\n  if (cond) {\n    soql += \" WHERE \" + cond;\n  }\n  var orderby = createOrderByClause(query.sort);\n  if (orderby) {\n    soql += \" ORDER BY \" + orderby;\n  }\n  if (query.limit) {\n    soql += \" LIMIT \" + query.limit;\n  }\n  if (query.offset) {\n    soql += \" OFFSET \" + query.offset;\n  }\n  return soql;\n}\n\n/** @private **/\nfunction createFieldsClause(fields, childQueries) {\n  childQueries = _.map(_.values(childQueries || {}), function(cquery) {\n    return '(' + createSOQL(cquery) + ')';\n  });\n  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');\n}\n\n/** @private **/\nfunction createConditionClause(conditions, operator, depth) {\n  if (_.isString(conditions)) {\n    return conditions;\n  }\n  conditions = conditions || [];\n  operator = operator || \"AND\";\n  depth = depth || 0;\n  if (!isArray(conditions)) { // if passed in hash object\n    conditions = _.keys(conditions).map(function(key) {\n      return {\n        key: key,\n        value: conditions[key]\n      };\n    });\n  } else {\n    conditions = conditions.map(function(cond) {\n      var conds = [];\n      for (var key in cond) {\n        conds.push({\n          key: key,\n          value: cond[key]\n        });\n      }\n      return conds.length>1 ? conds : conds[0];\n    });\n  }\n  conditions = conditions.map(function(cond) {\n    var d = depth+1, op;\n    switch (cond.key) {\n      case \"$or\" :\n      case \"$and\" :\n      case \"$not\" :\n        if (operator !== \"NOT\" && conditions.length === 1) {\n          d = depth; // not change tree depth\n        }\n        op = cond.key === \"$or\" ? \"OR\" :\n             cond.key === \"$and\" ? \"AND\" :\n             \"NOT\";\n        return createConditionClause(cond.value, op, d);\n      default:\n        return createFieldExpression(cond.key, cond.value);\n    }\n  }).filter(function(expr) { return expr; });\n\n  var paren;\n  if (operator === 'NOT') {\n    paren = depth > 0;\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\n  } else {\n    paren = depth > 0 && conditions.length > 1;\n    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");\n  }\n}\n\nvar opMap = {\n  \"=\"     : \"=\",\n  \"$eq\"   : \"=\",\n  \"!=\"    : \"!=\",\n  \"$ne\"   : \"!=\",\n  \">\"     : \">\",\n  \"$gt\"   : \">\",\n  \"<\"     : \"<\",\n  \"$lt\"   : \"<\",\n  \">=\"    : \">=\",\n  \"$gte\"  : \">=\",\n  \"<=\"    : \"<=\",\n  \"$lte\"  : \"<=\",\n  \"$like\" : \"LIKE\",\n  \"$nlike\" : \"NOT LIKE\",\n  \"$in\"   : \"IN\",\n  \"$nin\"  : \"NOT IN\",\n  \"$includes\" : \"INCLUDES\",\n  \"$excludes\" : \"EXCLUDES\",\n  \"$exists\" : \"EXISTS\"\n};\n\n/** @private **/\nfunction createFieldExpression(field, value) {\n  // Assume the `$in` operator if value is an array and none was supplied.\n  if (_.isArray(value)) {\n    return createOpExpression(field, \"$in\", value);\n  }\n  // Otherwise, if an object was passed then process the supplied ops.\n  else if (_.isObject(value)) {\n    var expressions = _.map(value, function (v, k) {\n      if (k[0] === \"$\") return createOpExpression(field, k, v);\n    });\n    return expressions.join(' AND ');\n  }\n  // If the value is a scalar, it's an equality condition.\n  else return createOpExpression(field, \"$eq\", value);\n}\n\n/** @private **/\nfunction createOpExpression(field, op, value) {\n  var sfop = opMap[op];\n  if (!sfop || _.isUndefined(value)) { return null; }\n  var valueExpr = createValueExpression(value);\n  if (_.isUndefined(valueExpr)) { return null; }\n  switch (sfop) {\n    case \"NOT LIKE\":\n      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";\n    case \"EXISTS\":\n      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");\n    default:\n      return [ field, sfop, valueExpr ].join(\" \");\n  }\n}\n\n/** @private **/\nfunction createValueExpression(value) {\n  if (isArray(value)) {\n    return value.length > 0 ?\n           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :\n           undefined;\n  }\n  if (value instanceof SfDate) {\n    return value.toString();\n  }\n  if (_.isString(value)) {\n    return \"'\" + escapeSOQLString(value) + \"'\";\n  }\n  if (_.isNumber(value)) {\n    return (value).toString();\n  }\n  if (_.isNull(value)) {\n    return \"null\";\n  }\n  return value;\n}\n\n/** @private **/\nfunction escapeSOQLString(str) {\n  return String(str || '').replace(/'/g, \"\\\\'\");\n}\n\n/** @private **/\nfunction isArray(a) {\n  return _.isObject(a) && _.isFunction(a.pop);\n}\n\n\n/** @private **/\nfunction createOrderByClause(sort) {\n  sort = sort || [];\n  if (_.isString(sort)) {\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\n      // must be specified in pure \"order by\" clause. Return raw config.\n      return sort;\n    }\n    // sort order in mongoose-style expression.\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\n    sort = sort.split(/\\s+/).map(function(field) {\n      var dir = \"ASC\"; // ascending\n      var flag = field[0];\n      if (flag === '-') {\n        dir = \"DESC\";\n        field = field.substring(1);\n      } else if (flag === '+') {\n        field = field.substring(1);\n      }\n      return [ field, dir ];\n    });\n  } else if (!isArray(sort)) {\n    sort = _.keys(sort).map(function(field) {\n      var dir = sort[field];\n      return [ field, dir ];\n    });\n  }\n  return sort.map(function(s) {\n    var field = s[0], dir = s[1];\n    switch (String(dir)) {\n      case \"DESC\":\n      case \"desc\":\n      case \"descending\":\n      case \"-\":\n      case \"-1\":\n        dir = \"DESC\";\n        break;\n      default:\n        dir = \"ASC\";\n    }\n    return field + \" \" + dir;\n  }).join(\", \");\n}\n\n\nexports.createSOQL = createSOQL;\n","/*global process, Sfdc */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    Promise = require('./promise');\n\n/* */\n\nvar request = require('request'),\n    canvas = require('./browser/canvas'),\n    jsonp = require('./browser/jsonp');\n\n// set options if defaults setting is available in request, which is not available in xhr module.\nif (request.defaults) {\n  var defaults = {\n    followAllRedirects: true\n  };\n  if (process.env.HTTP_PROXY) {\n    defaults.proxy = process.env.HTTP_PROXY;\n  }\n  if (parseInt(process.env.HTTP_TIMEOUT)) {\n    defaults.timeout = parseInt(process.env.HTTP_TIMEOUT);\n  }\n  request = request.defaults(defaults);\n}\n\nvar baseUrl;\nif (typeof window === 'undefined' || !window.location || !window.location.host) {\n  baseUrl = process.env.LOCATION_BASE_URL || \"\";\n} else {\n  var apiHost = normalizeApiHost(window.location.host);\n  baseUrl = apiHost ? \"https://\" + apiHost : \"\";\n}\n\n/**\n * Add stream() method to promise (and following promise chain), to access original request stream.\n * @private\n */\nfunction streamify(promise, factory) {\n  var _then = promise.then;\n  promise.then = function() {\n    factory();\n    var newPromise = _then.apply(promise, arguments);\n    return streamify(newPromise, factory);\n  };\n  promise.stream = factory;\n  return promise;\n}\n\n/**\n * Normarize Salesforce API host name\n * @private\n */\nfunction normalizeApiHost(apiHost) {\n  var m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);\n  if (m) {\n    apiHost = m[1] + \".salesforce.com\";\n  }\n  return apiHost;\n}\n\n/**\n * Class for HTTP request transport\n *\n * @class\n * @protected\n */\nvar Transport = module.exports = function() {};\n\n/**\n * Make HTTP request, returns promise instead of stream\n *\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nTransport.prototype.httpRequest = function(params, callback) {\n  var deferred = Promise.defer();\n  var req;\n  var httpRequest = this._getHttpRequestModule();\n  var createRequest = function() {\n    if (!req) {\n      req = httpRequest(params, function(err, response) {\n        if (err) {\n          deferred.reject(err);\n        } else {\n          deferred.resolve(response);\n        }\n      });\n    }\n    return req;\n  };\n  return streamify(deferred.promise, createRequest).thenCall(callback);\n};\n\n/** @protected **/\nTransport.prototype._getHttpRequestModule = function() {\n  return request;\n};\n\n\n/**\n * Class for JSONP request transport\n * @class Transport~JsonpTransport\n * @protected\n * @extends Transport\n * @param {String} jsonpParam - Callback parameter name for JSONP invokation.\n */\nvar JsonpTransport = Transport.JsonpTransport = function(jsonpParam) {\n  this._jsonpParam = jsonpParam;\n};\n\ninherits(JsonpTransport, Transport);\n\n/** @protected **/\nJsonpTransport.prototype._getHttpRequestModule = function() {\n  return jsonp.createRequest(this._jsonpParam);\n};\n\nJsonpTransport.supported = jsonp.supported;\n\n\n/**\n * Class for Sfdc Canvas request transport\n * @class Transport~CanvasTransport\n * @protected\n * @extends Transport\n * @param {Object} signedRequest - Parsed signed request object\n */\nvar CanvasTransport = Transport.CanvasTransport = function(signedRequest) {\n  this._signedRequest = signedRequest;\n};\n\ninherits(CanvasTransport, Transport);\n\n/** @protected **/\nCanvasTransport.prototype._getHttpRequestModule = function() {\n  return canvas.createRequest(this._signedRequest);\n};\n\nCanvasTransport.supported = canvas.supported;\n\n\n/**\n * Class for HTTP request transport using AJAX proxy service\n *\n * @class Transport~ProxyTransport\n * @protected\n * @extends Transport\n * @param {String} proxyUrl - AJAX Proxy server URL\n */\nvar ProxyTransport = Transport.ProxyTransport = function(proxyUrl) {\n  this._proxyUrl = proxyUrl;\n};\n\ninherits(ProxyTransport, Transport);\n\n/**\n * Make HTTP request via AJAX proxy\n *\n * @method Transport~ProxyTransport#httpRequest\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nProxyTransport.prototype.httpRequest = function(params, callback) {\n  var url = params.url;\n  if (url.indexOf(\"/\") === 0) {\n    url = baseUrl + url;\n  }\n  var proxyParams = {\n    method: params.method,\n    url: this._proxyUrl + '?' + Date.now() + \".\" + (\"\" + Math.random()).substring(2),\n    headers: {\n      'salesforceproxy-endpoint': url\n    }\n  };\n  if (params.body || params.body === \"\") {\n    proxyParams.body = params.body;\n  }\n  if (params.headers) {\n    for (var name in params.headers) {\n      proxyParams.headers[name] = params.headers[name];\n    }\n  }\n  return ProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\n};\n\n\n/**\n * Class for HTTP request transport using a proxy server\n *\n * @class Transport~HttpProxyTransport\n * @protected\n * @extends Transport\n * @param {String} httpProxy - URL of the HTTP proxy server\n */\nvar HttpProxyTransport = Transport.HttpProxyTransport = function(httpProxy) {\n  this._httpProxy = httpProxy;\n};\n\ninherits(HttpProxyTransport, Transport);\n\n/**\n * Make HTTP request via proxy server\n *\n * @method Transport~HttpProxyTransport#httpRequest\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Callback Function\n * @returns {Promise.<Object>}\n */\nHttpProxyTransport.prototype.httpRequest = function(params, callback) {\n  var url = params.url;\n  if (url.indexOf(\"/\") === 0) {\n    url = baseUrl + url;\n  }\n  var proxyParams = {\n    method: params.method,\n    url: params.url,\n    proxy: this._httpProxy,\n    headers: {}\n  };\n  if (params.body || params.body === \"\") {\n    proxyParams.body = params.body;\n  }\n  if (params.headers) {\n    for (var name in params.headers) {\n      proxyParams.headers[name] = params.headers[name];\n    }\n  }\n  return HttpProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\n};\n","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (ArrayBuffer.isView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (ArrayBuffer.isView(buf)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ResizeableBuffer =\n/*#__PURE__*/\nfunction () {\n  function ResizeableBuffer() {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n\n    _classCallCheck(this, ResizeableBuffer);\n\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.alloc(size);\n  }\n\n  _createClass(ResizeableBuffer, [{\n    key: \"prepend\",\n    value: function prepend(val) {\n      var length = this.length++;\n\n      if (length === this.size) {\n        this.resize();\n      }\n\n      var buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf, 1, 0, length);\n    }\n  }, {\n    key: \"append\",\n    value: function append(val) {\n      var length = this.length++;\n\n      if (length === this.size) {\n        this.resize();\n      }\n\n      this.buf[length] = val;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return Buffer.from(this.buf.slice(0, this.length));\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var length = this.length;\n      this.size = this.size * 2;\n      var buf = Buffer.alloc(this.size);\n      this.buf.copy(buf, 0, 0, length);\n      this.buf = buf;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.buf.slice(0, this.length).toString();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.length = 0;\n    }\n  }]);\n\n  return ResizeableBuffer;\n}();\n\nmodule.exports = ResizeableBuffer;","\"use strict\";\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/*\nCSV Parse\n\nPlease look at the [project documentation](https://csv.js.org/parse/) for additional\ninformation.\n*/\nvar _require = require('stream'),\n    Transform = _require.Transform;\n\nvar ResizeableBuffer = require('./ResizeableBuffer');\n\nvar cr = 13;\nvar nl = 10;\nvar space = 32;\nvar tab = 9;\nvar bom_utf8 = Buffer.from([239, 187, 191]);\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Transform) {\n  _inherits(Parser, _Transform);\n\n  function Parser() {\n    var _this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Parser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Parser).call(this, _objectSpread({}, {\n      readableObjectMode: true\n    }, {}, opts)));\n    var options = {}; // Merge with user options\n\n    for (var opt in opts) {\n      options[underscore(opt)] = opts[opt];\n    } // Normalize option `bom`\n\n\n    if (options.bom === undefined || options.bom === null || options.bom === false) {\n      options.bom = false;\n    } else if (options.bom !== true) {\n      throw new Error(\"Invalid Option: bom must be true, got \".concat(JSON.stringify(options.bom)));\n    } // Normalize option `cast`\n\n\n    var fnCastField = null;\n\n    if (options.cast === undefined || options.cast === null || options.cast === false || options.cast === '') {\n      options.cast = undefined;\n    } else if (typeof options.cast === 'function') {\n      fnCastField = options.cast;\n      options.cast = true;\n    } else if (options.cast !== true) {\n      throw new Error('Invalid Option: cast must be true or a function');\n    } // Normalize option `cast_date`\n\n\n    if (options.cast_date === undefined || options.cast_date === null || options.cast_date === false || options.cast_date === '') {\n      options.cast_date = false;\n    } else if (options.cast_date === true) {\n      options.cast_date = function (value) {\n        var date = Date.parse(value);\n        return !isNaN(date) ? new Date(date) : value;\n      };\n    } else if (typeof options.cast_date !== 'function') {\n      throw new Error('Invalid Option: cast_date must be true or a function');\n    } // Normalize option `columns`\n\n\n    var fnFirstLineToHeaders = null;\n\n    if (options.columns === true) {\n      // Fields in the first line are converted as-is to columns\n      fnFirstLineToHeaders = undefined;\n    } else if (typeof options.columns === 'function') {\n      fnFirstLineToHeaders = options.columns;\n      options.columns = true;\n    } else if (Array.isArray(options.columns)) {\n      options.columns = normalizeColumnsArray(options.columns);\n    } else if (options.columns === undefined || options.columns === null || options.columns === false) {\n      options.columns = false;\n    } else {\n      throw new Error(\"Invalid Option columns: expect an object or true, got \".concat(JSON.stringify(options.columns)));\n    } // Normalize option `comment`\n\n\n    if (options.comment === undefined || options.comment === null || options.comment === false || options.comment === '') {\n      options.comment = null;\n    } else {\n      if (typeof options.comment === 'string') {\n        options.comment = Buffer.from(options.comment);\n      }\n\n      if (!Buffer.isBuffer(options.comment)) {\n        throw new Error(\"Invalid Option: comment must be a buffer or a string, got \".concat(JSON.stringify(options.comment)));\n      }\n    } // Normalize option `delimiter`\n\n\n    if (options.delimiter === undefined || options.delimiter === null || options.delimiter === false) {\n      options.delimiter = Buffer.from(',');\n    } else if (Buffer.isBuffer(options.delimiter)) {\n      if (options.delimiter.length === 0) {\n        throw new Error(\"Invalid Option: delimiter must be a non empty buffer\");\n      } // Great, nothing to do\n\n    } else if (typeof options.delimiter === 'string') {\n      if (options.delimiter.length === 0) {\n        throw new Error(\"Invalid Option: delimiter must be a non empty string\");\n      }\n\n      options.delimiter = Buffer.from(options.delimiter);\n    } else {\n      throw new Error(\"Invalid Option: delimiter must be a string or a buffer, got \".concat(options.delimiter));\n    } // Normalize option `escape`\n\n\n    if (options.escape === undefined || options.escape === null) {\n      options.escape = Buffer.from('\"');\n    } else if (typeof options.escape === 'string') {\n      options.escape = Buffer.from(options.escape);\n    }\n\n    if (!Buffer.isBuffer(options.escape)) {\n      throw new Error(\"Invalid Option: escape must be a buffer or a string, got \".concat(JSON.stringify(options.escape)));\n    } else if (options.escape.length !== 1) {\n      throw new Error(\"Invalid Option Length: escape must be one character, got \".concat(options.escape.length));\n    } else {\n      options.escape = options.escape[0];\n    } // Normalize option `from`\n\n\n    if (options.from === undefined || options.from === null) {\n      options.from = 1;\n    } else {\n      if (typeof options.from === 'string' && /\\d+/.test(options.from)) {\n        options.from = parseInt(options.from);\n      }\n\n      if (Number.isInteger(options.from)) {\n        if (options.from < 0) {\n          throw new Error(\"Invalid Option: from must be a positive integer, got \".concat(JSON.stringify(opts.from)));\n        }\n      } else {\n        throw new Error(\"Invalid Option: from must be an integer, got \".concat(JSON.stringify(options.from)));\n      }\n    } // Normalize option `from_line`\n\n\n    if (options.from_line === undefined || options.from_line === null) {\n      options.from_line = 1;\n    } else {\n      if (typeof options.from_line === 'string' && /\\d+/.test(options.from_line)) {\n        options.from_line = parseInt(options.from_line);\n      }\n\n      if (Number.isInteger(options.from_line)) {\n        if (options.from_line <= 0) {\n          throw new Error(\"Invalid Option: from_line must be a positive integer greater than 0, got \".concat(JSON.stringify(opts.from_line)));\n        }\n      } else {\n        throw new Error(\"Invalid Option: from_line must be an integer, got \".concat(JSON.stringify(opts.from_line)));\n      }\n    } // Normalize option `info`\n\n\n    if (options.info === undefined || options.info === null || options.info === false) {\n      options.info = false;\n    } else if (options.info !== true) {\n      throw new Error(\"Invalid Option: info must be true, got \".concat(JSON.stringify(options.info)));\n    } // Normalize option `max_record_size`\n\n\n    if (options.max_record_size === undefined || options.max_record_size === null || options.max_record_size === false) {\n      options.max_record_size = 0;\n    } else if (Number.isInteger(options.max_record_size) && options.max_record_size >= 0) {// Great, nothing to do\n    } else if (typeof options.max_record_size === 'string' && /\\d+/.test(options.max_record_size)) {\n      options.max_record_size = parseInt(options.max_record_size);\n    } else {\n      throw new Error(\"Invalid Option: max_record_size must be a positive integer, got \".concat(JSON.stringify(options.max_record_size)));\n    } // Normalize option `objname`\n\n\n    if (options.objname === undefined || options.objname === null || options.objname === false) {\n      options.objname = undefined;\n    } else if (Buffer.isBuffer(options.objname)) {\n      if (options.objname.length === 0) {\n        throw new Error(\"Invalid Option: objname must be a non empty buffer\");\n      }\n\n      options.objname = options.objname.toString();\n    } else if (typeof options.objname === 'string') {\n      if (options.objname.length === 0) {\n        throw new Error(\"Invalid Option: objname must be a non empty string\");\n      } // Great, nothing to do\n\n    } else {\n      throw new Error(\"Invalid Option: objname must be a string or a buffer, got \".concat(options.objname));\n    } // Normalize option `quote`\n\n\n    if (options.quote === null || options.quote === false || options.quote === '') {\n      options.quote = null;\n    } else {\n      if (options.quote === undefined || options.quote === true) {\n        options.quote = Buffer.from('\"');\n      } else if (typeof options.quote === 'string') {\n        options.quote = Buffer.from(options.quote);\n      }\n\n      if (!Buffer.isBuffer(options.quote)) {\n        throw new Error(\"Invalid Option: quote must be a buffer or a string, got \".concat(JSON.stringify(options.quote)));\n      } else if (options.quote.length !== 1) {\n        throw new Error(\"Invalid Option Length: quote must be one character, got \".concat(options.quote.length));\n      } else {\n        options.quote = options.quote[0];\n      }\n    } // Normalize option `raw`\n\n\n    if (options.raw === undefined || options.raw === null || options.raw === false) {\n      options.raw = false;\n    } else if (options.raw !== true) {\n      throw new Error(\"Invalid Option: raw must be true, got \".concat(JSON.stringify(options.raw)));\n    } // Normalize option `record_delimiter`\n\n\n    if (!options.record_delimiter) {\n      options.record_delimiter = [];\n    } else if (!Array.isArray(options.record_delimiter)) {\n      options.record_delimiter = [options.record_delimiter];\n    }\n\n    options.record_delimiter = options.record_delimiter.map(function (rd) {\n      if (typeof rd === 'string') {\n        rd = Buffer.from(rd);\n      }\n\n      return rd;\n    }); // Normalize option `relax`\n\n    if (typeof options.relax === 'boolean') {// Great, nothing to do\n    } else if (options.relax === undefined || options.relax === null) {\n      options.relax = false;\n    } else {\n      throw new Error(\"Invalid Option: relax must be a boolean, got \".concat(JSON.stringify(options.relax)));\n    } // Normalize option `relax_column_count`\n\n\n    if (typeof options.relax_column_count === 'boolean') {// Great, nothing to do\n    } else if (options.relax_column_count === undefined || options.relax_column_count === null) {\n      options.relax_column_count = false;\n    } else {\n      throw new Error(\"Invalid Option: relax_column_count must be a boolean, got \".concat(JSON.stringify(options.relax_column_count)));\n    } // Normalize option `skip_empty_lines`\n\n\n    if (typeof options.skip_empty_lines === 'boolean') {// Great, nothing to do\n    } else if (options.skip_empty_lines === undefined || options.skip_empty_lines === null) {\n      options.skip_empty_lines = false;\n    } else {\n      throw new Error(\"Invalid Option: skip_empty_lines must be a boolean, got \".concat(JSON.stringify(options.skip_empty_lines)));\n    } // Normalize option `skip_lines_with_empty_values`\n\n\n    if (typeof options.skip_lines_with_empty_values === 'boolean') {// Great, nothing to do\n    } else if (options.skip_lines_with_empty_values === undefined || options.skip_lines_with_empty_values === null) {\n      options.skip_lines_with_empty_values = false;\n    } else {\n      throw new Error(\"Invalid Option: skip_lines_with_empty_values must be a boolean, got \".concat(JSON.stringify(options.skip_lines_with_empty_values)));\n    } // Normalize option `skip_lines_with_error`\n\n\n    if (typeof options.skip_lines_with_error === 'boolean') {// Great, nothing to do\n    } else if (options.skip_lines_with_error === undefined || options.skip_lines_with_error === null) {\n      options.skip_lines_with_error = false;\n    } else {\n      throw new Error(\"Invalid Option: skip_lines_with_error must be a boolean, got \".concat(JSON.stringify(options.skip_lines_with_error)));\n    } // Normalize option `rtrim`\n\n\n    if (options.rtrim === undefined || options.rtrim === null || options.rtrim === false) {\n      options.rtrim = false;\n    } else if (options.rtrim !== true) {\n      throw new Error(\"Invalid Option: rtrim must be a boolean, got \".concat(JSON.stringify(options.rtrim)));\n    } // Normalize option `ltrim`\n\n\n    if (options.ltrim === undefined || options.ltrim === null || options.ltrim === false) {\n      options.ltrim = false;\n    } else if (options.ltrim !== true) {\n      throw new Error(\"Invalid Option: ltrim must be a boolean, got \".concat(JSON.stringify(options.ltrim)));\n    } // Normalize option `trim`\n\n\n    if (options.trim === undefined || options.trim === null || options.trim === false) {\n      options.trim = false;\n    } else if (options.trim !== true) {\n      throw new Error(\"Invalid Option: trim must be a boolean, got \".concat(JSON.stringify(options.trim)));\n    } // Normalize options `trim`, `ltrim` and `rtrim`\n\n\n    if (options.trim === true && opts.ltrim !== false) {\n      options.ltrim = true;\n    } else if (options.ltrim !== true) {\n      options.ltrim = false;\n    }\n\n    if (options.trim === true && opts.rtrim !== false) {\n      options.rtrim = true;\n    } else if (options.rtrim !== true) {\n      options.rtrim = false;\n    } // Normalize option `to`\n\n\n    if (options.to === undefined || options.to === null) {\n      options.to = -1;\n    } else {\n      if (typeof options.to === 'string' && /\\d+/.test(options.to)) {\n        options.to = parseInt(options.to);\n      }\n\n      if (Number.isInteger(options.to)) {\n        if (options.to <= 0) {\n          throw new Error(\"Invalid Option: to must be a positive integer greater than 0, got \".concat(JSON.stringify(opts.to)));\n        }\n      } else {\n        throw new Error(\"Invalid Option: to must be an integer, got \".concat(JSON.stringify(opts.to)));\n      }\n    } // Normalize option `to_line`\n\n\n    if (options.to_line === undefined || options.to_line === null) {\n      options.to_line = -1;\n    } else {\n      if (typeof options.to_line === 'string' && /\\d+/.test(options.to_line)) {\n        options.to_line = parseInt(options.to_line);\n      }\n\n      if (Number.isInteger(options.to_line)) {\n        if (options.to_line <= 0) {\n          throw new Error(\"Invalid Option: to_line must be a positive integer greater than 0, got \".concat(JSON.stringify(opts.to_line)));\n        }\n      } else {\n        throw new Error(\"Invalid Option: to_line must be an integer, got \".concat(JSON.stringify(opts.to_line)));\n      }\n    }\n\n    _this.info = {\n      comment_lines: 0,\n      empty_lines: 0,\n      invalid_field_length: 0,\n      lines: 1,\n      records: 0\n    };\n    _this.options = options;\n    _this.state = {\n      bomSkipped: false,\n      castField: fnCastField,\n      commenting: false,\n      enabled: options.from_line === 1,\n      escaping: false,\n      escapeIsQuote: options.escape === options.quote,\n      expectedRecordLength: options.columns === null ? 0 : options.columns.length,\n      field: new ResizeableBuffer(20),\n      firstLineToHeaders: fnFirstLineToHeaders,\n      info: Object.assign({}, _this.info),\n      previousBuf: undefined,\n      quoting: false,\n      stop: false,\n      rawBuffer: new ResizeableBuffer(100),\n      record: [],\n      recordHasError: false,\n      record_length: 0,\n      recordDelimiterMaxLength: options.record_delimiter.length === 0 ? 2 : Math.max.apply(Math, _toConsumableArray(options.record_delimiter.map(function (v) {\n        return v.length;\n      }))),\n      trimChars: [Buffer.from(' ')[0], Buffer.from('\\t')[0]],\n      wasQuoting: false,\n      wasRowDelimiter: false\n    };\n    return _this;\n  } // Implementation of `Transform._transform`\n\n\n  _createClass(Parser, [{\n    key: \"_transform\",\n    value: function _transform(buf, encoding, callback) {\n      if (this.state.stop === true) {\n        return;\n      }\n\n      var err = this.__parse(buf, false);\n\n      if (err !== undefined) {\n        this.state.stop = true;\n      }\n\n      callback(err);\n    } // Implementation of `Transform._flush`\n\n  }, {\n    key: \"_flush\",\n    value: function _flush(callback) {\n      if (this.state.stop === true) {\n        return;\n      }\n\n      var err = this.__parse(undefined, true);\n\n      callback(err);\n    } // Central parser implementation\n\n  }, {\n    key: \"__parse\",\n    value: function __parse(nextBuf, end) {\n      var _this$options = this.options,\n          bom = _this$options.bom,\n          comment = _this$options.comment,\n          escape = _this$options.escape,\n          from_line = _this$options.from_line,\n          info = _this$options.info,\n          ltrim = _this$options.ltrim,\n          max_record_size = _this$options.max_record_size,\n          quote = _this$options.quote,\n          raw = _this$options.raw,\n          relax = _this$options.relax,\n          rtrim = _this$options.rtrim,\n          skip_empty_lines = _this$options.skip_empty_lines,\n          to = _this$options.to,\n          to_line = _this$options.to_line;\n      var record_delimiter = this.options.record_delimiter;\n      var _this$state = this.state,\n          bomSkipped = _this$state.bomSkipped,\n          previousBuf = _this$state.previousBuf,\n          rawBuffer = _this$state.rawBuffer,\n          escapeIsQuote = _this$state.escapeIsQuote;\n      var buf;\n\n      if (previousBuf === undefined) {\n        if (nextBuf === undefined) {\n          // Handle empty string\n          this.push(null);\n          return;\n        } else {\n          buf = nextBuf;\n        }\n      } else if (previousBuf !== undefined && nextBuf === undefined) {\n        buf = previousBuf;\n      } else {\n        buf = Buffer.concat([previousBuf, nextBuf]);\n      } // Handle UTF BOM\n\n\n      if (bomSkipped === false) {\n        if (bom === false) {\n          this.state.bomSkipped = true;\n        } else if (buf.length < 3) {\n          // No enough data\n          if (end === false) {\n            // Wait for more data\n            this.state.previousBuf = buf;\n            return;\n          } // skip BOM detect because data length < 3\n\n        } else {\n          if (bom_utf8.compare(buf, 0, 3) === 0) {\n            // Skip BOM\n            buf = buf.slice(3);\n          }\n\n          this.state.bomSkipped = true;\n        }\n      }\n\n      var bufLen = buf.length;\n      var pos;\n\n      for (pos = 0; pos < bufLen; pos++) {\n        // Ensure we get enough space to look ahead\n        // There should be a way to move this out of the loop\n        if (this.__needMoreData(pos, bufLen, end)) {\n          break;\n        }\n\n        if (this.state.wasRowDelimiter === true) {\n          this.info.lines++;\n\n          if (info === true && this.state.record.length === 0 && this.state.field.length === 0 && this.state.wasQuoting === false) {\n            this.state.info = Object.assign({}, this.info);\n          }\n\n          this.state.wasRowDelimiter = false;\n        }\n\n        if (to_line !== -1 && this.info.lines > to_line) {\n          this.state.stop = true;\n          this.push(null);\n          return;\n        } // Auto discovery of record_delimiter, unix, mac and windows supported\n\n\n        if (this.state.quoting === false && record_delimiter.length === 0) {\n          var record_delimiterCount = this.__autoDiscoverRowDelimiter(buf, pos);\n\n          if (record_delimiterCount) {\n            record_delimiter = this.options.record_delimiter;\n          }\n        }\n\n        var chr = buf[pos];\n\n        if (raw === true) {\n          rawBuffer.append(chr);\n        }\n\n        if ((chr === cr || chr === nl) && this.state.wasRowDelimiter === false) {\n          this.state.wasRowDelimiter = true;\n        } // Previous char was a valid escape char\n        // treat the current char as a regular char\n\n\n        if (this.state.escaping === true) {\n          this.state.escaping = false;\n        } else {\n          // Escape is only active inside quoted fields\n          if (this.state.quoting === true && chr === escape && pos + 1 < bufLen) {\n            // We are quoting, the char is an escape chr and there is a chr to escape\n            if (escapeIsQuote) {\n              if (buf[pos + 1] === quote) {\n                this.state.escaping = true;\n                continue;\n              }\n            } else {\n              this.state.escaping = true;\n              continue;\n            }\n          } // Not currently escaping and chr is a quote\n          // TODO: need to compare bytes instead of single char\n\n\n          if (this.state.commenting === false && chr === quote) {\n            if (this.state.quoting === true) {\n              var nextChr = buf[pos + 1];\n\n              var isNextChrTrimable = rtrim && this.__isCharTrimable(nextChr); // const isNextChrComment = nextChr === comment\n\n\n              var isNextChrComment = comment !== null && this.__compareBytes(comment, buf, pos + 1, nextChr);\n\n              var isNextChrDelimiter = this.__isDelimiter(nextChr, buf, pos + 1);\n\n              var isNextChrRowDelimiter = record_delimiter.length === 0 ? this.__autoDiscoverRowDelimiter(buf, pos + 1) : this.__isRecordDelimiter(nextChr, buf, pos + 1); // Escape a quote\n              // Treat next char as a regular character\n              // TODO: need to compare bytes instead of single char\n\n              if (chr === escape && nextChr === quote) {\n                pos++;\n              } else if (!nextChr || isNextChrDelimiter || isNextChrRowDelimiter || isNextChrComment || isNextChrTrimable) {\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                continue;\n              } else if (relax === false) {\n                var err = this.__error(new CsvError('CSV_INVALID_CLOSING_QUOTE', ['Invalid Closing Quote:', \"got \\\"\".concat(String.fromCharCode(nextChr), \"\\\"\"), \"at line \".concat(this.info.lines), 'instead of delimiter, row delimiter, trimable character', '(if activated) or comment'], this.__context()));\n\n                if (err !== undefined) return err;\n              } else {\n                this.state.quoting = false;\n                this.state.wasQuoting = true; // continue\n\n                this.state.field.prepend(quote);\n              }\n            } else {\n              if (this.state.field.length !== 0) {\n                // In relax mode, treat opening quote preceded by chrs as regular\n                if (relax === false) {\n                  var _err = this.__error(new CsvError('INVALID_OPENING_QUOTE', ['Invalid Opening Quote:', \"a quote is found inside a field at line \".concat(this.info.lines)], this.__context(), {\n                    field: this.state.field\n                  }));\n\n                  if (_err !== undefined) return _err;\n                }\n              } else {\n                this.state.quoting = true;\n                continue;\n              }\n            }\n          }\n\n          if (this.state.quoting === false) {\n            var recordDelimiterLength = this.__isRecordDelimiter(chr, buf, pos);\n\n            if (recordDelimiterLength !== 0) {\n              // Do not emit comments which take a full line\n              var skipCommentLine = this.state.commenting && this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0;\n\n              if (skipCommentLine) {\n                this.info.comment_lines++; // Skip full comment line\n              } else {\n                // Skip if line is empty and skip_empty_lines activated\n                if (skip_empty_lines === true && this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0) {\n                  this.info.empty_lines++;\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                } // Activate records emition if above from_line\n\n\n                if (this.state.enabled === false && this.info.lines + (this.state.wasRowDelimiter === true ? 1 : 0) >= from_line) {\n                  this.state.enabled = true;\n\n                  this.__resetField();\n\n                  this.__resetRow();\n\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                } else {\n                  var errField = this.__onField();\n\n                  if (errField !== undefined) return errField;\n\n                  var errRecord = this.__onRow();\n\n                  if (errRecord !== undefined) return errRecord;\n                }\n\n                if (to !== -1 && this.info.records >= to) {\n                  this.state.stop = true;\n                  this.push(null);\n                  return;\n                }\n              }\n\n              this.state.commenting = false;\n              pos += recordDelimiterLength - 1;\n              continue;\n            }\n\n            if (this.state.commenting) {\n              continue;\n            }\n\n            var commentCount = comment === null ? 0 : this.__compareBytes(comment, buf, pos, chr);\n\n            if (commentCount !== 0) {\n              this.state.commenting = true;\n              continue;\n            }\n\n            var delimiterLength = this.__isDelimiter(chr, buf, pos);\n\n            if (delimiterLength !== 0) {\n              var _errField = this.__onField();\n\n              if (_errField !== undefined) return _errField;\n              pos += delimiterLength - 1;\n              continue;\n            }\n          }\n        }\n\n        if (this.state.commenting === false) {\n          if (max_record_size !== 0 && this.state.record_length + this.state.field.length > max_record_size) {\n            var _err2 = this.__error(\"Max Record Size: record exceed the maximum number of tolerated bytes of \".concat(max_record_size, \" on line \").concat(this.info.lines));\n\n            if (_err2 !== undefined) return _err2;\n          }\n        }\n\n        var lappend = ltrim === false || this.state.quoting === true || this.state.field.length !== 0 || !this.__isCharTrimable(chr); // rtrim in non quoting is handle in __onField\n\n        var rappend = rtrim === false || this.state.wasQuoting === false;\n\n        if (lappend === true && rappend === true) {\n          this.state.field.append(chr);\n        } else if (rtrim === true && !this.__isCharTrimable(chr)) {\n          var _err3 = this.__error(\"Invalid Closing Quote: found non trimable byte after quote at line \".concat(this.info.lines));\n\n          if (_err3 !== undefined) return _err3;\n        }\n      }\n\n      if (end === true) {\n        if (this.state.quoting === true) {\n          var _err4 = this.__error(new CsvError('CSV_QUOTE_NOT_CLOSED', ['Quote Not Closed:', \"the parsing is finished with an opening quote at line \".concat(this.info.lines)], this.__context()));\n\n          if (_err4 !== undefined) return _err4;\n        } else {\n          // Skip last line if it has no characters\n          if (this.state.wasQuoting === true || this.state.record.length !== 0 || this.state.field.length !== 0) {\n            var _errField2 = this.__onField();\n\n            if (_errField2 !== undefined) return _errField2;\n\n            var _errRecord = this.__onRow();\n\n            if (_errRecord !== undefined) return _errRecord;\n          } else if (this.state.wasRowDelimiter === true) {\n            this.info.empty_lines++;\n          } else if (this.state.commenting === true) {\n            this.info.comment_lines++;\n          }\n        }\n      } else {\n        this.state.previousBuf = buf.slice(pos);\n      }\n\n      if (this.state.wasRowDelimiter === true) {\n        this.info.lines++;\n        this.state.wasRowDelimiter = false;\n      }\n    } // Helper to test if a character is a space or a line delimiter\n\n  }, {\n    key: \"__isCharTrimable\",\n    value: function __isCharTrimable(chr) {\n      return chr === space || chr === tab || chr === cr || chr === nl;\n    }\n  }, {\n    key: \"__onRow\",\n    value: function __onRow() {\n      var _this$options2 = this.options,\n          columns = _this$options2.columns,\n          info = _this$options2.info,\n          from = _this$options2.from,\n          relax_column_count = _this$options2.relax_column_count,\n          raw = _this$options2.raw,\n          skip_lines_with_empty_values = _this$options2.skip_lines_with_empty_values;\n      var _this$state2 = this.state,\n          enabled = _this$state2.enabled,\n          record = _this$state2.record; // Convert the first line into column names\n\n      if (columns === true) {\n        return this.__firstLineToColumns(record);\n      }\n\n      var recordLength = record.length;\n\n      if (columns === false && this.info.records === 0) {\n        this.state.expectedRecordLength = recordLength;\n      } else if (enabled === true) {\n        if (recordLength !== this.state.expectedRecordLength) {\n          if (relax_column_count === true) {\n            this.info.invalid_field_length++;\n          } else {\n            if (columns === false) {\n              var err = this.__error(new CsvError('CSV_INVALID_RECORD_LENGTH_DONT_PREVIOUS_RECORDS', ['Invalid Record Length:', \"expect \".concat(this.state.expectedRecordLength, \",\"), \"got \".concat(recordLength, \" on line \").concat(this.info.lines)], this.__context(), {\n                record: record\n              }));\n\n              if (err !== undefined) return err;\n            } else {\n              var _err5 = this.__error(new CsvError('CSV_INVALID_RECORD_LENGTH_DONT_MATCH_COLUMNS', ['Invalid Record Length:', \"header length is \".concat(columns.length, \",\"), \"got \".concat(recordLength, \" on line \").concat(this.info.lines)], this.__context(), {\n                record: record\n              }));\n\n              if (_err5 !== undefined) return _err5;\n            }\n          }\n        }\n      }\n\n      if (enabled === false) {\n        return this.__resetRow();\n      }\n\n      if (skip_lines_with_empty_values === true) {\n        if (record.every(function (field) {\n          return field == null || field.toString && field.toString().trim() === '';\n        })) {\n          this.__resetRow();\n\n          return;\n        }\n      }\n\n      if (this.state.recordHasError === true) {\n        this.__resetRow();\n\n        this.state.recordHasError = false;\n        return;\n      }\n\n      this.info.records++;\n\n      if (from === 1 || this.info.records >= from) {\n        if (columns !== false) {\n          var obj = {}; // Transform record array to an object\n\n          for (var i in record) {\n            if (columns[i] === undefined || columns[i].disabled) continue;\n            obj[columns[i].name] = record[i];\n          }\n\n          var objname = this.options.objname;\n\n          if (objname === undefined) {\n            if (raw === true || info === true) {\n              this.push(Object.assign({\n                record: obj\n              }, raw === true ? {\n                raw: this.state.rawBuffer.toString()\n              } : {}, info === true ? {\n                info: this.state.info\n              } : {}));\n            } else {\n              this.push(obj);\n            }\n          } else {\n            if (raw === true || info === true) {\n              this.push(Object.assign({\n                record: [obj[objname], obj]\n              }, raw === true ? {\n                raw: this.state.rawBuffer.toString()\n              } : {}, info === true ? {\n                info: this.state.info\n              } : {}));\n            } else {\n              this.push([obj[objname], obj]);\n            }\n          }\n        } else {\n          if (raw === true || info === true) {\n            this.push(Object.assign({\n              record: record\n            }, raw === true ? {\n              raw: this.state.rawBuffer.toString()\n            } : {}, info === true ? {\n              info: this.state.info\n            } : {}));\n          } else {\n            this.push(record);\n          }\n        }\n      }\n\n      this.__resetRow();\n    }\n  }, {\n    key: \"__firstLineToColumns\",\n    value: function __firstLineToColumns(record) {\n      var firstLineToHeaders = this.state.firstLineToHeaders;\n\n      try {\n        var headers = firstLineToHeaders === undefined ? record : firstLineToHeaders.call(null, record);\n\n        if (!Array.isArray(headers)) {\n          return this.__error(new CsvError('CSV_INVALID_COLUMN_MAPPING', ['Invalid Column Mapping:', 'expect an array from column function,', \"got \".concat(JSON.stringify(headers))], this.__context(), {\n            headers: headers\n          }));\n        }\n\n        var normalizedHeaders = normalizeColumnsArray(headers);\n        this.state.expectedRecordLength = normalizedHeaders.length;\n        this.options.columns = normalizedHeaders;\n\n        this.__resetRow();\n\n        return;\n      } catch (err) {\n        return err;\n      }\n    }\n  }, {\n    key: \"__resetRow\",\n    value: function __resetRow() {\n      if (this.options.raw === true) {\n        this.state.rawBuffer.reset();\n      }\n\n      this.state.record = [];\n      this.state.record_length = 0;\n    }\n  }, {\n    key: \"__onField\",\n    value: function __onField() {\n      var _this$options3 = this.options,\n          cast = _this$options3.cast,\n          rtrim = _this$options3.rtrim,\n          max_record_size = _this$options3.max_record_size;\n      var _this$state3 = this.state,\n          enabled = _this$state3.enabled,\n          wasQuoting = _this$state3.wasQuoting; // Deal with from_to options\n\n      if (this.options.columns !== true && enabled === false) {\n        return this.__resetField();\n      }\n\n      var field = this.state.field.toString();\n\n      if (rtrim === true && wasQuoting === false) {\n        field = field.trimRight();\n      }\n\n      if (cast === true) {\n        var _this$__cast = this.__cast(field),\n            _this$__cast2 = _slicedToArray(_this$__cast, 2),\n            err = _this$__cast2[0],\n            f = _this$__cast2[1];\n\n        if (err !== undefined) return err;\n        field = f;\n      }\n\n      this.state.record.push(field); // Increment record length if record size must not exceed a limit\n\n      if (max_record_size !== 0 && typeof field === 'string') {\n        this.state.record_length += field.length;\n      }\n\n      this.__resetField();\n    }\n  }, {\n    key: \"__resetField\",\n    value: function __resetField() {\n      this.state.field.reset();\n      this.state.wasQuoting = false;\n    } // Return a tuple with the error and the casted value\n\n  }, {\n    key: \"__cast\",\n    value: function __cast(field) {\n      var _this$options4 = this.options,\n          columns = _this$options4.columns,\n          relax_column_count = _this$options4.relax_column_count;\n      var isColumns = Array.isArray(columns); // Dont loose time calling cast\n      // because the final record is an object\n      // and this field can't be associated to a key present in columns\n\n      if (isColumns === true && relax_column_count && this.options.columns.length <= this.state.record.length) {\n        return [undefined, undefined];\n      }\n\n      var context = this.__context();\n\n      if (this.state.castField !== null) {\n        try {\n          return [undefined, this.state.castField.call(null, field, context)];\n        } catch (err) {\n          return [err];\n        }\n      }\n\n      if (this.__isFloat(field)) {\n        return [undefined, parseFloat(field)];\n      } else if (this.options.cast_date !== false) {\n        return [undefined, this.options.cast_date.call(null, field, context)];\n      }\n\n      return [undefined, field];\n    } // Keep it in case we implement the `cast_int` option\n    // __isInt(value){\n    //   // return Number.isInteger(parseInt(value))\n    //   // return !isNaN( parseInt( obj ) );\n    //   return /^(\\-|\\+)?[1-9][0-9]*$/.test(value)\n    // }\n\n  }, {\n    key: \"__isFloat\",\n    value: function __isFloat(value) {\n      return value - parseFloat(value) + 1 >= 0; // Borrowed from jquery\n    }\n  }, {\n    key: \"__compareBytes\",\n    value: function __compareBytes(sourceBuf, targetBuf, pos, firtByte) {\n      if (sourceBuf[0] !== firtByte) return 0;\n      var sourceLength = sourceBuf.length;\n\n      for (var i = 1; i < sourceLength; i++) {\n        if (sourceBuf[i] !== targetBuf[pos + i]) return 0;\n      }\n\n      return sourceLength;\n    }\n  }, {\n    key: \"__needMoreData\",\n    value: function __needMoreData(i, bufLen, end) {\n      if (end) {\n        return false;\n      }\n\n      var _this$options5 = this.options,\n          comment = _this$options5.comment,\n          delimiter = _this$options5.delimiter;\n      var _this$state4 = this.state,\n          quoting = _this$state4.quoting,\n          recordDelimiterMaxLength = _this$state4.recordDelimiterMaxLength;\n      var numOfCharLeft = bufLen - i - 1;\n      var requiredLength = Math.max( // Skip if the remaining buffer smaller than comment\n      comment ? comment.length : 0, // Skip if the remaining buffer smaller than row delimiter\n      recordDelimiterMaxLength, // Skip if the remaining buffer can be row delimiter following the closing quote\n      // 1 is for quote.length\n      quoting ? 1 + recordDelimiterMaxLength : 0, // Skip if the remaining buffer can be delimiter\n      delimiter.length, // Skip if the remaining buffer can be escape sequence\n      // 1 is for escape.length\n      1);\n      return numOfCharLeft < requiredLength;\n    }\n  }, {\n    key: \"__isDelimiter\",\n    value: function __isDelimiter(chr, buf, pos) {\n      var delimiter = this.options.delimiter;\n      var delLength = delimiter.length;\n      if (delimiter[0] !== chr) return 0;\n\n      for (var i = 1; i < delLength; i++) {\n        if (delimiter[i] !== buf[pos + i]) return 0;\n      }\n\n      return delimiter.length;\n    }\n  }, {\n    key: \"__isRecordDelimiter\",\n    value: function __isRecordDelimiter(chr, buf, pos) {\n      var record_delimiter = this.options.record_delimiter;\n      var recordDelimiterLength = record_delimiter.length;\n\n      loop1: for (var i = 0; i < recordDelimiterLength; i++) {\n        var rd = record_delimiter[i];\n        var rdLength = rd.length;\n\n        if (rd[0] !== chr) {\n          continue;\n        }\n\n        for (var j = 1; j < rdLength; j++) {\n          if (rd[j] !== buf[pos + j]) {\n            continue loop1;\n          }\n        }\n\n        return rd.length;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"__autoDiscoverRowDelimiter\",\n    value: function __autoDiscoverRowDelimiter(buf, pos) {\n      var chr = buf[pos];\n\n      if (chr === cr) {\n        if (buf[pos + 1] === nl) {\n          this.options.record_delimiter.push(Buffer.from('\\r\\n'));\n          this.state.recordDelimiterMaxLength = 2;\n          return 2;\n        } else {\n          this.options.record_delimiter.push(Buffer.from('\\r'));\n          this.state.recordDelimiterMaxLength = 1;\n          return 1;\n        }\n      } else if (chr === nl) {\n        this.options.record_delimiter.push(Buffer.from('\\n'));\n        this.state.recordDelimiterMaxLength = 1;\n        return 1;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"__error\",\n    value: function __error(msg) {\n      var skip_lines_with_error = this.options.skip_lines_with_error;\n      var err = typeof msg === 'string' ? new Error(msg) : msg;\n\n      if (skip_lines_with_error) {\n        this.state.recordHasError = true;\n        this.emit('skip', err);\n        return undefined;\n      } else {\n        return err;\n      }\n    }\n  }, {\n    key: \"__context\",\n    value: function __context() {\n      var columns = this.options.columns;\n      var isColumns = Array.isArray(columns);\n      return {\n        column: isColumns === true ? columns.length >= this.state.record.length ? columns[this.state.record.length].name : null : this.state.record.length,\n        empty_lines: this.info.empty_lines,\n        header: columns === true,\n        index: this.state.record.length,\n        invalid_field_length: this.info.invalid_field_length,\n        quoting: this.state.wasQuoting,\n        lines: this.info.lines,\n        records: this.info.records\n      };\n    }\n  }]);\n\n  return Parser;\n}(Transform);\n\nvar parse = function parse() {\n  var data, options, callback;\n\n  for (var i in arguments) {\n    var argument = arguments[i];\n\n    var type = _typeof(argument);\n\n    if (data === undefined && (typeof argument === 'string' || Buffer.isBuffer(argument))) {\n      data = argument;\n    } else if (options === undefined && isObject(argument)) {\n      options = argument;\n    } else if (callback === undefined && type === 'function') {\n      callback = argument;\n    } else {\n      throw new Error(\"Invalid argument: got \".concat(JSON.stringify(argument), \" at index \").concat(i));\n    }\n  }\n\n  var parser = new Parser(options);\n\n  if (callback) {\n    var records = options === undefined || options.objname === undefined ? [] : {};\n    parser.on('readable', function () {\n      var record;\n\n      while ((record = this.read()) !== null) {\n        if (options === undefined || options.objname === undefined) {\n          records.push(record);\n        } else {\n          records[record[0]] = record[1];\n        }\n      }\n    });\n    parser.on('error', function (err) {\n      callback(err, undefined, parser.info);\n    });\n    parser.on('end', function () {\n      callback(undefined, records, parser.info);\n    });\n  }\n\n  if (data !== undefined) {\n    parser.write(data);\n    parser.end();\n  }\n\n  return parser;\n};\n\nvar CsvError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(CsvError, _Error);\n\n  function CsvError(code, message) {\n    var _this2;\n\n    _classCallCheck(this, CsvError);\n\n    if (Array.isArray(message)) message = message.join(' ');\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(CsvError).call(this, [message]));\n    Error.captureStackTrace(_assertThisInitialized(_this2), CsvError);\n    _this2.code = code;\n\n    for (var _len = arguments.length, contexts = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      contexts[_key - 2] = arguments[_key];\n    }\n\n    for (var _i2 = 0, _contexts = contexts; _i2 < _contexts.length; _i2++) {\n      var context = _contexts[_i2];\n\n      for (var key in context) {\n        var value = Buffer.isBuffer(context[key]) ? context[key].toString() : context[key];\n        _this2[key] = JSON.parse(JSON.stringify(value));\n      }\n    }\n\n    return _this2;\n  }\n\n  return CsvError;\n}(_wrapNativeSuper(Error));\n\nparse.Parser = Parser;\nparse.CsvError = CsvError;\nmodule.exports = parse;\n\nvar underscore = function underscore(str) {\n  return str.replace(/([A-Z])/g, function (_, match) {\n    return '_' + match.toLowerCase();\n  });\n};\n\nvar isObject = function isObject(obj) {\n  return _typeof(obj) === 'object' && obj !== null && !Array.isArray(obj);\n};\n\nvar normalizeColumnsArray = function normalizeColumnsArray(columns) {\n  var normalizedColumns = [];\n\n  for (var i = 0; i < columns.length; i++) {\n    var column = columns[i];\n\n    if (column === undefined || column === null || column === false) {\n      normalizedColumns[i] = {\n        disabled: true\n      };\n    } else if (typeof column === 'string') {\n      normalizedColumns[i] = {\n        name: column\n      };\n    } else if (isObject(column)) {\n      if (typeof column.name !== 'string') {\n        throw new Error(\"Invalid Option columns: property \\\"name\\\" is required at position \".concat(i, \" when column is an object literal\"));\n      }\n\n      normalizedColumns[i] = column;\n    } else {\n      throw new Error(\"Invalid Option columns: expect a string or an object, got \".concat(JSON.stringify(column), \" at position \").concat(i));\n    }\n  }\n\n  return normalizedColumns;\n};","\"use strict\";\n\nvar parse = require('.');\n\nmodule.exports = function (data) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof data === 'string') {\n    data = Buffer.from(data);\n  }\n\n  var records = options && options.objname ? {} : [];\n  var parser = new parse.Parser(options);\n\n  parser.push = function (record) {\n    if (options.objname === undefined) records.push(record);else {\n      records[record[0]] = record[1];\n    }\n  };\n\n  var err1 = parser.__parse(data, false);\n\n  if (err1 !== undefined) throw err1;\n\n  var err2 = parser.__parse(undefined, true);\n\n  if (err2 !== undefined) throw err2;\n  return records;\n};","// Generated by CoffeeScript 1.12.7\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\nStringifier = function(opts) {\n  var base, base1, base10, base11, base12, base13, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  if (opts == null) {\n    opts = {};\n  }\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  stream.Transform.call(this, options);\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedEmpty == null) {\n    base3.quotedEmpty = void 0;\n  }\n  if ((base4 = this.options).quotedString == null) {\n    base4.quotedString = false;\n  }\n  if ((base5 = this.options).eof == null) {\n    base5.eof = true;\n  }\n  if ((base6 = this.options).escape == null) {\n    base6.escape = '\"';\n  }\n  if ((base7 = this.options).columns == null) {\n    base7.columns = null;\n  }\n  if ((base8 = this.options).header == null) {\n    base8.header = false;\n  }\n  if ((base9 = this.options).formatters == null) {\n    base9.formatters = {};\n  }\n  if ((base10 = this.options.formatters).date == null) {\n    base10.date = function(value) {\n      return '' + value.getTime();\n    };\n  }\n  if ((base11 = this.options.formatters).bool == null) {\n    base11.bool = function(value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base12 = this.options.formatters).object == null) {\n    base12.object = function(value) {\n      return JSON.stringify(value);\n    };\n  }\n  if ((base13 = this.options).rowDelimiter == null) {\n    base13.rowDelimiter = '\\n';\n  }\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function() {\n  var k, label, labels;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  labels = this.options.columns;\n  if (typeof labels === 'object') {\n    labels = (function() {\n      var results;\n      results = [];\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n      return results;\n    })();\n  }\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function(chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function(chunk, encoding, callback) {\n  var base, e, preserve;\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function(line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n  if (typeof line !== 'object') {\n    return line;\n  }\n  columns = this.options.columns;\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(line)) {\n    _line = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = (typeof value === 'undefined' || value === null) ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n  if (Array.isArray(line)) {\n    newLine = '';\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n      if (typeof field === 'string') {\n\n      } else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newLine += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\n        newLine += quote + quote;\n      }\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n    line = newLine;\n  }\n  return line;\n};\n","// Generated by CoffeeScript 1.12.7\nvar StringDecoder, stringify;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nstringify = require('./index');\n\nmodule.exports = function(records, options) {\n  var data, decoder, i, len, record, stringifier;\n  if (options == null) {\n    options = {};\n  }\n  data = [];\n  if (records instanceof Buffer) {\n    decoder = new StringDecoder();\n    records = decoder.write(records);\n  }\n  stringifier = new stringify.Stringifier(options);\n  stringifier.push = function(record) {\n    if (record) {\n      return data.push(record.toString());\n    }\n  };\n  for (i = 0, len = records.length; i < len; i++) {\n    record = records[i];\n    stringifier.write(record);\n  }\n  stringifier.end();\n  return data.join('');\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.14';\n\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_PARTIAL_FLAG = 32;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"']/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  var baseCreate = (function() {\n    function object() {}\n    return function(proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n      object.prototype = proto;\n      var result = new object;\n      object.prototype = undefined;\n      return result;\n    };\n  }());\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      baseAssignValue(object, key, value);\n    }\n  }\n\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function baseAssignValue(object, key, value) {\n    object[key] = value;\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    return objectToString(value);\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  var baseIsArguments = noop;\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {boolean} bitmask The bitmask flags.\n   *  1 - Unordered comparison\n   *  2 - Partial comparison\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = objIsArr ? arrayTag : baseGetTag(object),\n        othTag = othIsArr ? arrayTag : baseGetTag(other);\n\n    objTag = objTag == argsTag ? objectTag : objTag;\n    othTag = othTag == argsTag ? objectTag : othTag;\n\n    var objIsObj = objTag == objectTag,\n        othIsObj = othTag == objectTag,\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} paths The property paths to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    return setToString(overRest(func, start, identity), func + '');\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & WRAP_BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, bitmask, customizer, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseRest` which flattens the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @returns {Function} Returns the new function.\n   */\n  function flatRest(func) {\n    return setToString(overRest(func, undefined, flatten), func + '');\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n\n    return !!length &&\n      (type == 'number' ||\n        (type != 'symbol' && reIsUint.test(value))) &&\n          (value > -1 && value % 1 == 0 && value < length);\n  }\n\n  /**\n   * Checks if the given arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n   *  else `false`.\n   */\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n    var type = typeof index;\n    if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)\n        ) {\n      return eq(object[index], value);\n    }\n    return false;\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overRest(func, start, transform) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = transform(array);\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * Sets the `toString` method of `func` to return `string`.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n  var setToString = identity;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length;\n    if (!length) {\n      return [];\n    }\n    var args = Array(length - 1),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array == null ? 0 : array.length;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _.forEach([1, 2], function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, [function(o) { return o.user; }]);\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one millisecond.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n      !propertyIsEnumerable.call(value, 'callee');\n  };\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && baseGetTag(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are compared by strict equality, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && baseGetTag(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties == null ? result : assign(result, properties);\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(object, sources) {\n    object = Object(object);\n\n    var index = -1;\n    var length = sources.length;\n    var guard = length > 2 ? sources[2] : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      length = 1;\n    }\n\n    while (++index < length) {\n      var source = sources[index];\n      var props = keysIn(source);\n      var propsIndex = -1;\n      var propsLength = props.length;\n\n      while (++propsIndex < propsLength) {\n        var key = props[propsIndex];\n        var value = object[key];\n\n        if (value === undefined ||\n            (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n          object[key] = source[key];\n        }\n      }\n    }\n\n    return object;\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [paths] The property paths to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = flatRest(function(object, paths) {\n    return object == null ? {} : basePick(object, paths);\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object == null ? [] : baseValues(object, keys(object));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n   * corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n","module.exports = MultiStream\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\ninherits(MultiStream, stream.Readable)\n\nfunction MultiStream (streams, opts) {\n  var self = this\n  if (!(self instanceof MultiStream)) return new MultiStream(streams, opts)\n  stream.Readable.call(self, opts)\n\n  self.destroyed = false\n\n  self._drained = false\n  self._forwarding = false\n  self._current = null\n  self._toStreams2 = (opts && opts.objectMode) ? toStreams2Obj : toStreams2Buf\n\n  if (typeof streams === 'function') {\n    self._queue = streams\n  } else {\n    self._queue = streams.map(self._toStreams2)\n    self._queue.forEach(function (stream) {\n      if (typeof stream !== 'function') self._attachErrorListener(stream)\n    })\n  }\n\n  self._next()\n}\n\nMultiStream.obj = function (streams) {\n  return new MultiStream(streams, { objectMode: true, highWaterMark: 16 })\n}\n\nMultiStream.prototype._read = function () {\n  this._drained = true\n  this._forward()\n}\n\nMultiStream.prototype._forward = function () {\n  if (this._forwarding || !this._drained || !this._current) return\n  this._forwarding = true\n\n  var chunk\n  while ((chunk = this._current.read()) !== null) {\n    this._drained = this.push(chunk)\n  }\n\n  this._forwarding = false\n}\n\nMultiStream.prototype.destroy = function (err) {\n  if (this.destroyed) return\n  this.destroyed = true\n\n  if (this._current && this._current.destroy) this._current.destroy()\n  if (typeof this._queue !== 'function') {\n    this._queue.forEach(function (stream) {\n      if (stream.destroy) stream.destroy()\n    })\n  }\n\n  if (err) this.emit('error', err)\n  this.emit('close')\n}\n\nMultiStream.prototype._next = function () {\n  var self = this\n  self._current = null\n\n  if (typeof self._queue === 'function') {\n    self._queue(function (err, stream) {\n      if (err) return self.destroy(err)\n      stream = self._toStreams2(stream)\n      self._attachErrorListener(stream)\n      self._gotNextStream(stream)\n    })\n  } else {\n    var stream = self._queue.shift()\n    if (typeof stream === 'function') {\n      stream = self._toStreams2(stream())\n      self._attachErrorListener(stream)\n    }\n    self._gotNextStream(stream)\n  }\n}\n\nMultiStream.prototype._gotNextStream = function (stream) {\n  var self = this\n\n  if (!stream) {\n    self.push(null)\n    self.destroy()\n    return\n  }\n\n  self._current = stream\n  self._forward()\n\n  stream.on('readable', onReadable)\n  stream.once('end', onEnd)\n  stream.once('close', onClose)\n\n  function onReadable () {\n    self._forward()\n  }\n\n  function onClose () {\n    if (!stream._readableState.ended) {\n      self.destroy()\n    }\n  }\n\n  function onEnd () {\n    self._current = null\n    stream.removeListener('readable', onReadable)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('close', onClose)\n    self._next()\n  }\n}\n\nMultiStream.prototype._attachErrorListener = function (stream) {\n  var self = this\n  if (!stream) return\n\n  stream.once('error', onError)\n\n  function onError (err) {\n    stream.removeListener('error', onError)\n    self.destroy(err)\n  }\n}\n\nfunction toStreams2Obj (s) {\n  return toStreams2(s, {objectMode: true, highWaterMark: 16})\n}\n\nfunction toStreams2Buf (s) {\n  return toStreams2(s)\n}\n\nfunction toStreams2 (s, opts) {\n  if (!s || typeof s === 'function' || s._readableState) return s\n\n  var wrap = new stream.Readable(opts).wrap(s)\n  if (s.destroy) {\n    wrap.destroy = s.destroy.bind(s)\n  }\n  return wrap\n}\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","module.exports = require('./lib/_stream_duplex.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","module.exports = require('./readable').PassThrough\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./lib/_stream_writable.js');\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    return Parser;\n\n  })(events.EventEmitter);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute;\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.options = parent.options;\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing attribute name of element \" + parent.name);\n      }\n      if (value == null) {\n        throw new Error(\"Missing attribute value for attribute \" + name + \" of element \" + parent.name);\n      }\n      this.name = this.stringify.attName(name);\n      this.value = this.stringify.attValue(value);\n    }\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.set(options).attribute(this);\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text\");\n      }\n      this.text = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.set(options).cdata(this);\n    };\n\n    return XMLCData;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLComment, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text\");\n      }\n      this.text = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.set(options).comment(this);\n    };\n\n    return XMLComment;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.eleName(name);\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdElement(this);\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing entity name\");\n      }\n      if (value == null) {\n        throw new Error(\"Missing entity value\");\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.eleName(name);\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity\");\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity\");\n        }\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity\");\n        }\n      }\n    }\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdEntity(this);\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing notation name\");\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity\");\n      }\n      this.name = this.stringify.eleName(name);\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdNotation(this);\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.set(options).declaration(this);\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var ref, ref1;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\n      }\n      if (sysID == null) {\n        ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.set(options).docType(this);\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n      this.isDocument = true;\n    }\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer.set(writerOptions);\n      }\n      return writer.document(this);\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.set(options).document(this);\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject;\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter(options);\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter(writerOptions);\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node\");\n      }\n      this.openCurrent();\n      name = name.valueOf();\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.dtdElement.apply(this, arguments);\n      } else {\n        return this.node(name, attributes, text);\n      }\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode\");\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\n          this.root = node;\n        }\n        this.onData(this.writer.openNode(node, this.currentLevel));\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      if (!node.isClosed) {\n        this.onData(this.writer.closeNode(node, this.currentLevel));\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, i, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      name = name.valueOf();\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.children = [];\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      }\n    }\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if ((isObject(val)) && (isEmpty(val))) {\n            val = null;\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            lastChild = this.element(key);\n            lastChild.element(val);\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref1;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      attributes || (attributes = {});\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children[0] instanceof XMLDeclaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.doctype = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref1 = doc.children;\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n        child = ref1[i];\n        if (child instanceof XMLDocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref2 = doc.children;\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n        child = ref2[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n      this.target = this.stringify.insTarget(target);\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.set(options).processingInstruction(this);\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text\");\n      }\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.set(options).raw(this);\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      XMLStreamWriter.__super__.constructor.call(this, options);\n      this.stream = stream;\n    }\n\n    XMLStreamWriter.prototype.document = function(doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write(this.spacebeforeslash + '?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write(this.spacebeforeslash + '>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write(this.spacebeforeslash + '/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function(node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text\");\n      }\n      this.value = this.stringify.eleText(text);\n    }\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.set(options).text(this);\n    };\n\n    return XMLText;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref6 = options.writer || {};\n      for (key in ref6) {\n        if (!hasProp.call(ref6, key)) continue;\n        value = ref6[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function(options) {\n      var key, ref, value;\n      options || (options = {});\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function(level) {\n      var indent;\n      if (this.pretty) {\n        indent = (level || 0) + this.offset + 1;\n        if (indent > 0) {\n          return new Array(indent).join(this.indent);\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.doctype(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n}).call(this);\n"]}